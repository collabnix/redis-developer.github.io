{"remainingRequest":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/howtos/moviesdatabase/aggregation/index-aggregation.mdx","dependencies":[{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/howtos/moviesdatabase/aggregation/index-aggregation.mdx","mtime":1631077489039},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-howtos-moviesdatabase-aggregation-index-aggregation-mdx-111.json","mtime":1631077870286},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1631077703630},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/babel-loader/lib/index.js","mtime":1631077703341},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1631077777797},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1631077776334}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/howtos/moviesdatabase/aggregation/index-aggregation.mdx"],"names":["React","mdx","frontMatter","id","title","sidebar_label","slug","metadata","toc","value","children","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'index-aggregation',\n\ttitle: '8. Aggregations',\n\tsidebar_label: '8. Aggregation',\n\tslug: '/howtos/moviesdatabase/aggregation'\n};\nexport const metadata = {\n  \"unversionedId\": \"howtos/moviesdatabase/aggregation/index-aggregation\",\n  \"id\": \"howtos/moviesdatabase/aggregation/index-aggregation\",\n  \"isDocsHomePage\": false,\n  \"title\": \"8. Aggregations\",\n  \"description\": \"A common need for applications, in addition to retrieving information as a document list, like you have done with the \\\"FT.SEARCH\\\" command, is to do some \\\"aggregation\\\".\",\n  \"source\": \"@site/docs/howtos/moviesdatabase/aggregation/index-aggregation.mdx\",\n  \"slug\": \"/howtos/moviesdatabase/aggregation\",\n  \"permalink\": \"/howtos/moviesdatabase/aggregation\",\n  \"editUrl\": \"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/moviesdatabase/aggregation/index-aggregation.mdx\",\n  \"version\": \"current\",\n  \"sidebar_label\": \"8. Aggregation\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"7. Query Movies\",\n    \"permalink\": \"/howtos/moviesdatabase/querymovies\"\n  },\n  \"next\": {\n    \"title\": \"9. Advanced Option\",\n    \"permalink\": \"/howtos/moviesdatabase/advancedoption\"\n  }\n};\n  /* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const toc = [{\n  value: 'Group By &amp; Sort By',\n  id: 'group-by--sort-by',\n  children: []\n}, {\n  value: 'Apply Functions',\n  id: 'apply-functions',\n  children: []\n}, {\n  value: 'Filter',\n  id: 'filter',\n  children: []\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`A common need for applications, in addition to retrieving information as a document list, like you have done with the \"`}<inlineCode parentName=\"p\">{`FT.SEARCH`}</inlineCode>{`\" command, is to do some \"aggregation\".`}</p>\n    <p>{`For example if we look at the movie documents, you may want to retrieve the number of movies grouped by release year starting with the most recent ones.`}</p>\n    <p>{`For this, RediSearch provides the FT.AGGREGATE command, with aggregations described as a data processing pipeline.`}</p>\n    <p>{`Let's check out some examples.`}</p>\n    <h2 {...{\n      \"id\": \"group-by--sort-by\"\n    }}>{`Group By & Sort By`}</h2>\n    <details> \n  <summary>\n  <i><b>\n  Number of movies by year\n  </b></i>\n  </summary>\n      <pre><code parentName=\"pre\" {...{}}>{`> FT.AGGREGATE \"idx:movie\" \"*\" GROUPBY 1 @release_year REDUCE COUNT 0 AS nb_of_movies\n\n 1) (integer) 60\n 2) 1) \"release_year\"\n    2) \"1964\"\n    3) \"nb_of_movies\"\n    4) \"9\"\n ...   \n 61) 1) \"release_year\"\n    2) \"2010\"\n    3) \"nb_of_movies\"\n    4) \"15\"\n`}</code></pre>\n      <hr></hr>\n    </details>\n    <details> \n  <summary>\n  <i><b>\n  Number of movies by year from the most recent to the oldest\n  </b></i>\n  </summary>\n      <pre><code parentName=\"pre\" {...{}}>{`> FT.AGGREGATE \"idx:movie\" \"*\" GROUPBY 1 @release_year REDUCE COUNT 0 AS nb_of_movies SORTBY 2 @release_year DESC \n\n1) (integer) 60\n 2) 1) \"release_year\"\n    2) \"2019\"\n    3) \"nb_of_movies\"\n    4) \"14\"\n ...   \n11) 1) \"release_year\"\n    2) \"2010\"\n    3) \"nb_of_movies\"\n    4) \"15\"\n`}</code></pre>\n      <hr></hr>\n    </details>\n    <details> \n  <summary>\n  <i><b>\n  Number of movies by genre, with the total number of votes, and average rating\n  </b></i>\n  </summary>\n      <pre><code parentName=\"pre\" {...{}}>{`> FT.AGGREGATE idx:movie \"*\" GROUPBY 1 @genre REDUCE COUNT 0 AS nb_of_movies REDUCE SUM 1 votes AS nb_of_votes REDUCE AVG 1 rating AS avg_rating SORTBY 4 @avg_rating DESC @nb_of_votes DESC\n\n\n 1) (integer) 26\n 2) 1) \"genre\"\n    2) \"fantasy\"\n    3) \"nb_of_movies\"\n    4) \"1\"\n    5) \"nb_of_votes\"\n    6) \"1500090\"\n    7) \"avg_rating\"\n    8) \"8.8\"\n...\n11) 1) \"genre\"\n    2) \"romance\"\n    3) \"nb_of_movies\"\n    4) \"2\"\n    5) \"nb_of_votes\"\n    6) \"746\"\n    7) \"avg_rating\"\n    8) \"6.65\"\n`}</code></pre>\n      <hr></hr>\n    </details>\n    <details> \n  <summary>\n  <i><b>\n  Count the number of females by country sorted from the biggest to smallest number.\n  </b></i>\n  </summary>\n      <pre><code parentName=\"pre\" {...{}}>{`> FT.AGGREGATE idx:user \"@gender:{female}\" GROUPBY 1 @country REDUCE COUNT 0 AS nb_of_users SORTBY 2 @nb_of_users DESC\n\n 1) (integer) 193\n 2) 1) \"country\"\n    2) \"china\"\n    3) \"nb_of_users\"\n    4) \"537\"\n...\n11) 1) \"country\"\n    2) \"ukraine\"\n    3) \"nb_of_users\"\n    4) \"72\"\n`}</code></pre>\n      <hr></hr>\n    </details>\n    <h2 {...{\n      \"id\": \"apply-functions\"\n    }}>{`Apply Functions`}</h2>\n    <details> \n  <summary>\n  <i><b>\n  Number of logins per year and month\n  </b></i>\n  </summary>\n      <p>{`The `}<inlineCode parentName=\"p\">{`idx:user`}</inlineCode>{` index contains the last_login field. This field stores the last login time as an EPOC timestamp.`}</p>\n      <p>{`RediSearch aggregation allows you to apply transformations to each record. This is done using the `}<a parentName=\"p\" {...{\n          \"href\": \"https://oss.redislabs.com/redisearch/Aggregations/#apply_expressions\"\n        }}>{`APPLY`}</a>{` parameter.`}</p>\n      <p>{`For this example you have to use a `}<a parentName=\"p\" {...{\n          \"href\": \"https://oss.redislabs.com/redisearch/Aggregations/#list_of_datetime_apply_functions\"\n        }}>{`date/time`}</a>{` function to extract the month and year from the timestamp.`}</p>\n      <pre><code parentName=\"pre\" {...{}}>{`> FT.AGGREGATE idx:user * APPLY year(@last_login) AS year APPLY \"monthofyear(@last_login) + 1\" AS month GROUPBY 2 @year @month REDUCE count 0 AS num_login SORTBY 4 @year ASC @month ASC\n\n 1) (integer) 13\n 2) 1) \"year\"\n    2) \"2019\"\n    3) \"month\"\n    4) \"9\"\n    5) \"num_login\"\n    6) \"230\"\n...\n14) 1) \"year\"\n    2) \"2020\"\n    3) \"month\"\n    4) \"9\"\n    5) \"num_login\"\n    6) \"271\"\n\n`}</code></pre>\n      <hr></hr>\n    </details>\n    <details> \n  <summary>\n  <i><b>\n  Number of logins per weekday\n  </b></i>\n  </summary>\n      <p>{`Using the date/time Apply functions it is possible to extract the day of the week from the timestamp, so let's see how the logins are distributed over the week.`}</p>\n      <pre><code parentName=\"pre\" {...{}}>{`> FT.AGGREGATE idx:user * APPLY \"dayofweek(@last_login) +1\" AS dayofweek GROUPBY 1 @dayofweek REDUCE count 0 AS num_login SORTBY 2 @dayofweek ASC\n\n1) (integer) 7\n2) 1) \"dayofweek\"\n   2) \"1\"\n   3) \"num_login\"\n   4) \"815\"\n...\n8) 1) \"dayofweek\"\n   2) \"7\"\n   3) \"num_login\"\n   4) \"906\"\n\n`}</code></pre>\n      <hr></hr>\n    </details>\n    <h2 {...{\n      \"id\": \"filter\"\n    }}>{`Filter`}</h2>\n    <p>{`In the previous example you used the `}<inlineCode parentName=\"p\">{`query string`}</inlineCode>{` parameter to select all documents (`}<inlineCode parentName=\"p\">{`\"*\"`}</inlineCode>{`) or a subset of the documents (`}<inlineCode parentName=\"p\">{`\"@gender:{female}\"`}</inlineCode>{`)`}</p>\n    <p>{`It is also possible to filter the results using a predicate expression relating to values in each result. This is applied post-query and relates to the current state of the pipeline. This is done using the `}<a parentName=\"p\" {...{\n        \"href\": \"https://oss.redislabs.com/redisearch/Aggregations/#filter_expressions\"\n      }}>{`FILTER`}</a>{` parameter. `}</p>\n    <details> \n  <summary>\n  <i><b>\n  Count the number of females by country, except China, with more than 100 users, and sorted from the biggest to lowest number\n  </b></i>\n  </summary>\n      <pre><code parentName=\"pre\" {...{}}>{`> FT.AGGREGATE idx:user \"@gender:{female}\" GROUPBY 1 @country  REDUCE COUNT 0 AS nb_of_users  FILTER \"@country!='china' && @nb_of_users > 100\" SORTBY 2 @nb_of_users DESC\n\n1) (integer) 163\n2) 1) \"country\"\n   2) \"indonesia\"\n   3) \"nb_of_users\"\n   4) \"309\"\n...\n6) 1) \"country\"\n   2) \"brazil\"\n   3) \"nb_of_users\"\n   4) \"108\"\n`}</code></pre>\n      <hr></hr>\n    </details>\n    <details> \n  <summary>\n  <i><b>\n  Number of login per month, for year 2020\n  </b></i>\n  </summary>\n      <p>{`This is similar to the previous query with the addition of a filter on the year.`}</p>\n      <pre><code parentName=\"pre\" {...{}}>{`> FT.AGGREGATE idx:user * APPLY year(@last_login) AS year APPLY \"monthofyear(@last_login) + 1\" AS month GROUPBY 2 @year @month REDUCE count 0 AS num_login  FILTER \"@year==2020\" SORTBY 2 @month ASC\n\n 1) (integer) 13\n 2) 1) \"year\"\n    2) \"2020\"\n    3) \"month\"\n    4) \"1\"\n    5) \"num_login\"\n    6) \"520\"\n...\n10) 1) \"year\"\n    2) \"2020\"\n    3) \"month\"\n    4) \"9\"\n    5) \"num_login\"\n    6) \"271\"\n\n`}</code></pre>\n      <hr></hr>\n    </details>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}