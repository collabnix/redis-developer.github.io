{"remainingRequest":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/develop/java/spring/redis-and-spring-course/lesson_3/index-lesson_3.mdx","dependencies":[{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/develop/java/spring/redis-and-spring-course/lesson_3/index-lesson_3.mdx","mtime":1631077488445},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-develop-java-spring-redis-and-spring-course-lesson-3-index-lesson-3-mdx-9ee.json","mtime":1631077870284},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1631077703630},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/babel-loader/lib/index.js","mtime":1631077703341},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1631077777797},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1631077776334}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2FqZWV0cmFpbmEvcHJvamVjdHMvOHNlcC9yZWRpcy1kZXZlbG9wZXIuZ2l0aHViLmlvL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9leHRlbmRzIjtpbXBvcnQgUmVhY3QgZnJvbSdyZWFjdCc7aW1wb3J0e21keH1mcm9tJ0BtZHgtanMvcmVhY3QnO2V4cG9ydCBjb25zdCBmcm9udE1hdHRlcj17aWQ6J2luZGV4LWxlc3Nvbl8zJyx0aXRsZTonT2JqZWN0IE1hcHBpbmcgJiBSZWRpcyBSZXBvc2l0b3JpZXMnLHNpZGViYXJfbGFiZWw6J01hcHBpbmcgJiBSZXBvc2l0b3JpZXMnLHNsdWc6Jy9kZXZlbG9wL2phdmEvcmVkaXMtYW5kLXNwcmluZy1jb3Vyc2UvbGVzc29uXzMnfTtleHBvcnQgY29uc3QgbWV0YWRhdGE9eyJ1bnZlcnNpb25lZElkIjoiZGV2ZWxvcC9qYXZhL3NwcmluZy9yZWRpcy1hbmQtc3ByaW5nLWNvdXJzZS9sZXNzb25fMy9pbmRleC1sZXNzb25fMyIsImlkIjoiZGV2ZWxvcC9qYXZhL3NwcmluZy9yZWRpcy1hbmQtc3ByaW5nLWNvdXJzZS9sZXNzb25fMy9pbmRleC1sZXNzb25fMyIsImlzRG9jc0hvbWVQYWdlIjpmYWxzZSwidGl0bGUiOiJPYmplY3QgTWFwcGluZyAmIFJlZGlzIFJlcG9zaXRvcmllcyIsImRlc2NyaXB0aW9uIjoiT2JqZWN0aXZlcyIsInNvdXJjZSI6IkBzaXRlL2RvY3MvZGV2ZWxvcC9qYXZhL3NwcmluZy9yZWRpcy1hbmQtc3ByaW5nLWNvdXJzZS9sZXNzb25fMy9pbmRleC1sZXNzb25fMy5tZHgiLCJzbHVnIjoiL2RldmVsb3AvamF2YS9yZWRpcy1hbmQtc3ByaW5nLWNvdXJzZS9sZXNzb25fMyIsInBlcm1hbGluayI6Ii9kZXZlbG9wL2phdmEvcmVkaXMtYW5kLXNwcmluZy1jb3Vyc2UvbGVzc29uXzMiLCJlZGl0VXJsIjoiaHR0cHM6Ly9naXRodWIuY29tL3JlZGlzLWRldmVsb3Blci9yZWRpcy1kZXZlbG9wZXIvZWRpdC9tYXN0ZXIvZG9jcy9kZXZlbG9wL2phdmEvc3ByaW5nL3JlZGlzLWFuZC1zcHJpbmctY291cnNlL2xlc3Nvbl8zL2luZGV4LWxlc3Nvbl8zLm1keCIsInZlcnNpb24iOiJjdXJyZW50Iiwic2lkZWJhcl9sYWJlbCI6Ik1hcHBpbmcgJiBSZXBvc2l0b3JpZXMiLCJzaWRlYmFyIjoiZG9jcyIsInByZXZpb3VzIjp7InRpdGxlIjoiSW50cm9kdWNpbmcgU3ByaW5nIERhdGEgUmVkaXMiLCJwZXJtYWxpbmsiOiIvZGV2ZWxvcC9qYXZhL3JlZGlzLWFuZC1zcHJpbmctY291cnNlL2xlc3Nvbl8yIn0sIm5leHQiOnsidGl0bGUiOiJVc2VyL1JvbGVzICYgU2Vjb25kYXJ5IEluZGV4ZXMiLCJwZXJtYWxpbmsiOiIvZGV2ZWxvcC9qYXZhL3JlZGlzLWFuZC1zcHJpbmctY291cnNlL2xlc3Nvbl80In19Oy8qIEBqc3hSdW50aW1lIGNsYXNzaWMgKi8gLyogQGpzeCBtZHggKi9pbXBvcnQgdXNlQmFzZVVybCBmcm9tJ0Bkb2N1c2F1cnVzL3VzZUJhc2VVcmwnO2V4cG9ydCBjb25zdCB0b2M9W3t2YWx1ZTonT2JqZWN0aXZlcycsaWQ6J29iamVjdGl2ZXMnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0FnZW5kYScsaWQ6J2FnZW5kYScsY2hpbGRyZW46W119LHt2YWx1ZTonVXNlcnMgYW5kIHJvbGVzJyxpZDondXNlcnMtYW5kLXJvbGVzJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidFbnRlciBAUmVkaXNIYXNoJyxpZDonZW50ZXItcmVkaXNoYXNoJyxjaGlsZHJlbjpbXX0se3ZhbHVlOidTcHJpbmcgUmVwb3NpdG9yaWVzJyxpZDonc3ByaW5nLXJlcG9zaXRvcmllcycsY2hpbGRyZW46W119LHt2YWx1ZTonUm9sZSBSZXBvc2l0b3J5JyxpZDoncm9sZS1yZXBvc2l0b3J5JyxjaGlsZHJlbjpbXX0se3ZhbHVlOidUZXN0aW5nIHRoZSBSb2xlIFJlcG9zaXRvcnknLGlkOid0ZXN0aW5nLXRoZS1yb2xlLXJlcG9zaXRvcnknLGNoaWxkcmVuOltdfV07Y29uc3QgbGF5b3V0UHJvcHM9e3RvY307Y29uc3QgTURYTGF5b3V0PSJ3cmFwcGVyIjtleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNRFhDb250ZW50KHtjb21wb25lbnRzLC4uLnByb3BzfSl7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJoMyIseyJpZCI6Im9iamVjdGl2ZXMifSxgT2JqZWN0aXZlc2ApLG1keCgicCIsbnVsbCxgVG8gY29uZmlndXJlIGEgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYFJlZGlzVGVtcGxhdGUgYCksYGFuZCBsZWFybiBob3cgdG8gYWNjZXNzIGRpZmZlcmVudCBvcGVyYXRpb24gYnVuZGxlcyB0byByZWFkIGFuZCB3cml0ZSBkYXRhIHRvIFJlZGlzIGZyb20gYSBTcHJpbmcgUkVTVCBjb250cm9sbGVyLmApLG1keCgiaDMiLHsiaWQiOiJhZ2VuZGEifSxgQWdlbmRhYCksbWR4KCJwIixudWxsLGBJbiB0aGlzIGxlc3NvbiwgeW91IHdpbGwgbGVhcm46YCksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgSG93IHRvIHVzZSB0aGUgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJsaSJ9LGBAUmVkaXNIYXNoYCksYCBhbm5vdGF0aW9uIHRvIG1hcCBkb21haW4gb2JqZWN0cy5gKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgSG93IHRvIHVzZSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sYEBJZGApLGAgdG8gcHJvdmlkZSBwcmltYXJ5IGtleXMgdG8geW91ciBtYXBwZWQgb2JqZWN0cy5gKSxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgSG93IHRvIHVzZSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sYEBSZWZlcmVuY2VgKSxgIHRvIGNyZWF0ZSByZWZlcmVudGlhbCBhc3NvY2lhdGlvbnMgYmV0d2VlbiBvYmplY3RzLmApLG1keCgibGkiLHtwYXJlbnROYW1lOiJ1bCJ9LGBIb3cgdG8gY3JlYXRlIGFuZCB1c2UgUmVkaXMgUmVwb3NpdG9yaWVzIHRvIHN0b3JlIGRvbWFpbiBvYmplY3RzLmApKSxtZHgoInAiLG51bGwsYElmIHlvdSBnZXQgc3R1Y2s6YCksbWR4KCJ1bCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToidWwifSxgVGhlIHByb2dyZXNzIG1hZGUgaW4gdGhpcyBsZXNzb24gaXMgYXZhaWxhYmxlIG9uIHRoZSByZWRpMnJlYWQgZ2l0aHViIHJlcG9zaXRvcnkgYXQgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJsaSJ9LHsiaHJlZiI6Imh0dHBzOi8vZ2l0aHViLmNvbS9yZWRpcy1kZXZlbG9wZXIvcmVkaTJyZWFkL3RyZWUvY291cnNlL21pbGVzdG9uZS0zIn0pLGBodHRwczovL2dpdGh1Yi5jb20vcmVkaXMtZGV2ZWxvcGVyL3JlZGkycmVhZC90cmVlL2NvdXJzZS9taWxlc3RvbmUtM2ApKSksbWR4KCJoMyIseyJpZCI6InVzZXJzLWFuZC1yb2xlcyJ9LGBVc2VycyBhbmQgcm9sZXNgKSxtZHgoInAiLG51bGwsYEluIG1hbnkgYXBwbGljYXRpb25zLCB3aGV0aGVyIHdlYiBhcHBsaWNhdGlvbnMgb3IgUkVTVGZ1bCB3ZWIgc2VydmljZXMsIG9uZSBvZiB0aGUgZmlyc3QgcGFydHMgb2YgdGhlIGRvbWFpbiB0byBiZSBpbXBsZW1lbnRlZCBpcyB0aGUgdXNlci9yb2xlcyBzdWItZG9tYWluLgpJbiBSZWRpMlJlYWQsIFVzZXJzIGhhdmUgb25lIG9yIG1vcmUgUm9sZXMsIGEgdHlwaWNhbCBvbmUtdG8tbWFueSBhc3NvY2lhdGlvbi5gKSxtZHgoInAiLG51bGwsbWR4KCJpbWciLHthbHQ6IlVzZXJzIGFuZCBSb2xlcyIsc3JjOnJlcXVpcmUoIiF1cmwtbG9hZGVyP2xpbWl0PTEwMDAwJm5hbWU9YXNzZXRzL2ltYWdlcy9bbmFtZV0tW2hhc2hdLltleHRdJmZhbGxiYWNrPWZpbGUtbG9hZGVyIS4vaW1hZ2VzL3VzZXItcm9sZS11bWwucG5nIikuZGVmYXVsdH0pKSxtZHgoImgzIix7ImlkIjoiZW50ZXItcmVkaXNoYXNoIn0sYEVudGVyIEBSZWRpc0hhc2hgKSxtZHgoInAiLG51bGwsYEluIHRoaXMgc2VjdGlvbiwgd2Ugd2lsbCBlbWJhcmsgb24gdGhlIGNyZWF0aW9uIG9mIHRoZSBSZWRpMlJlYWQgZG9tYWluIG1vZGVscy4gV2Ugd2lsbCB1c2UgTG9tYm9rIHRvIHNpbXBsaWZ5IG91ciBQT0pPcywKYW5kIHVzaW5nIHRoZSBTcHJpbmcgRGF0YSBSZWRpcyBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgQFJlZGlzSGFzaGApLGAgYW5kIG90aGVyIFNwcmluZyBEYXRhIGFubm90YXRpb25zLCB3ZSB3aWxsIGNvbmZpZ3VyZSBvdXIgbW9kZWxzIHRvIGJlIHBlcnNpc3RlZCBpbiBSZWRpcy5gKSxtZHgoImg1Iix7ImlkIjoicm9sZS1tb2RlbCJ9LGBSb2xlIE1vZGVsYCksbWR4KCJwIixudWxsLGBMZXTigJlzIHN0YXJ0IGJ5IGNyZWF0aW5nIHRoZSBzaW1wbGVzdCBvZiBvdXIgZG9tYWlu4oCZcyBjbGFzc2VzLCB0aGUgUm9sZSBjbGFzcyB1bmRlcgp0aGUgZGlyZWN0b3J5IGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBzcmMvbWFpbi9qYXZhL2NvbS9yZWRpc2xhYnMvZWR1L3JlZGkycmVhZC9tb2RlbHNgKSxgLiBMZXTigJlzIG5hbWUgdGhlIGZpbGUgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYFJvbGUuamF2YWApLGAKd2l0aCB0aGUgZm9sbG93aW5nIGNvbnRlbnRzOmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtamF2YSJ9KSxgcGFja2FnZSBjb20ucmVkaXNsYWJzLmVkdS5yZWRpMnJlYWQubW9kZWxzOwoKaW1wb3J0IGxvbWJvay5EYXRhOwoKQERhdGEKcHVibGljIGNsYXNzIFJvbGUgewogIHByaXZhdGUgU3RyaW5nIGlkOwogIHByaXZhdGUgU3RyaW5nIG5hbWU7Cn0KYCkpLG1keCgicCIsbnVsbCxgV2UgYXJlIHN0YXJ0aW5nIHdpdGggYSBjbGFzcyBhbm5vdGF0ZWQgdXNpbmcgTG9tYm9r4oCZcyBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgQERhdGEgYCksYGFubm90YXRpb24sIHdoaWNoIGFkZHMgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYEBUb1N0cmluZ2ApLGAsIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBARXF1YWxzQW5kSGFzaENvZGVgKSxgLCBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgQEdldHRlcmApLGAvYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYEBTZXR0ZXJgKSxgLCBhbmQgYSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgQFJlcXVpcmVkQXJnc0NvbnRydWN0b3JgKSxgLCBnaXZpbmcgdXMgYSBmdWxseSBmb3JtZWQgSmF2YSBQT0pPLgpGb3IgdGhlIFNwcmluZyBEYXRhIFJlcG9zaXRvcmllcyB0byBrbm93IGhvdyB0byBtYXAgYW4gaW5zdGFuY2Ugb2YgUm9sZSB0byBhIFJlZGlzIEhhc2gsIHdlIG5lZWQgdG8gYW5ub3RhdGUgdGhlIGNsYXNzIHdpdGggdGhlIEBSZWRpc0hhc2ggYW5ub3RhdGlvbi5gKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWphdmEifSksYHBhY2thZ2UgY29tLnJlZGlzbGFicy5lZHUucmVkaTJyZWFkLm1vZGVsczsKCmltcG9ydCBvcmcuc3ByaW5nZnJhbWV3b3JrLmRhdGEuYW5ub3RhdGlvbi5JZDsKaW1wb3J0IG9yZy5zcHJpbmdmcmFtZXdvcmsuZGF0YS5yZWRpcy5jb3JlLlJlZGlzSGFzaDsKCmltcG9ydCBsb21ib2suQnVpbGRlcjsKaW1wb3J0IGxvbWJvay5EYXRhOwoKQERhdGEKQFJlZGlzSGFzaApwdWJsaWMgY2xhc3MgUm9sZSB7CiAgQElkCiAgcHJpdmF0ZSBTdHJpbmcgaWQ7CgogIHByaXZhdGUgU3RyaW5nIG5hbWU7Cn0KYCkpLG1keCgicCIsbnVsbCxgQFJlZGlzSGFzaCBjYW4gdGFrZSBhcyBwYXJhbWV0ZXJzIGEgdGltZVRvTGl2ZSBvZiB0eXBlIExvbmcsIGFuZCBhIFN0cmluZyB2YWx1ZSwgd2hpY2ggd2lsbCBvdmVycmlkZSB0aGUgZGVmYXVsdCBSZWRpcyBrZXkgcHJlZml4IChieSBkZWZhdWx0LCB0aGUga2V5IHByZWZpeCBpcyB0aGUgZnVsbHkgcXVhbGlmaWVkIG5hbWUgb2YgdGhlIGNsYXNzIHBsdXMgYSBjb2xvbikuYCksbWR4KCJwIixudWxsLGBXaXRoaW4gdGhlIGNsYXNzLCBtb3N0IG9mIHRoZSB1c3VhbCBTcHJpbmcgRGF0YSBhbm5vdGF0aW9ucyBhcmUgc3VwcG9ydGVkLiBGb3IgUm9sZSwgbGV0cyBhbm5vdGF0ZSB0aGUgaWQgZmllbGQgd2l0aCB0aGUgQElkIGFubm90YXRpb24uIFNwcmluZyBEYXRhIFJlZGlzIHdpbGwgYXV0by1nZW5lcmF0ZSBhbmQgc3VpdGFibGUgaWQgZm9yIHRoZSBhbm5vdGF0ZWQgdHlwZS5gKSxtZHgoImg0Iix7ImlkIjoidXNlci1tb2RlbCJ9LGBVc2VyIE1vZGVsYCksbWR4KCJwIixudWxsLGBUaGUgVXNlciBtb2RlbCB3aWxsIGJlIHVzZWQgaW4gYSByZWdpc3RyYXRpb24vc2lnbnVwIG1ldGhvZC4gVG8gYWxsb3cgZm9yIHNlcnZlci1zaWRlIHZhbGlkYXRpb24gdG8gYmUgcGVyZm9ybWVkLCB3ZSBuZWVkIHRvIGFkZCBhIGRlcGVuZGVuY3kgdG8gdGhlIE1hdmVuIFBPTSBmb3IgdGhlIHNwcmluZy1ib290LXN0YXJ0ZXItdmFsaWRhdGlvbiBsaWJyYXJ5LmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UteG1sIn0pLGA8ZGVwZW5kZW5jeT4KICA8Z3JvdXBJZD5vcmcuc3ByaW5nZnJhbWV3b3JrLmJvb3Q8L2dyb3VwSWQ+CiAgPGFydGlmYWN0SWQ+c3ByaW5nLWJvb3Qtc3RhcnRlci12YWxpZGF0aW9uPC9hcnRpZmFjdElkPgo8L2RlcGVuZGVuY3k+CmApKSxtZHgoInAiLG51bGwsYE5vdyB3ZSBjYW4gY3JlYXRlIHRoZSBVc2VyIGNsYXNzIHdpdGggdGhlIGZvbGxvd2luZyBjb250ZW50czoKcGFja2FnZSBjb20ucmVkaXNsYWJzLmVkdS5yZWRpMnJlYWQubW9kZWxzO2ApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtamF2YSJ9KSxgaW1wb3J0IGphdmEudXRpbC5IYXNoU2V0OwppbXBvcnQgamF2YS51dGlsLlNldDsKCmltcG9ydCBqYXZheC52YWxpZGF0aW9uLmNvbnN0cmFpbnRzLkVtYWlsOwppbXBvcnQgamF2YXgudmFsaWRhdGlvbi5jb25zdHJhaW50cy5Ob3ROdWxsOwppbXBvcnQgamF2YXgudmFsaWRhdGlvbi5jb25zdHJhaW50cy5TaXplOwoKaW1wb3J0IG9yZy5zcHJpbmdmcmFtZXdvcmsuZGF0YS5hbm5vdGF0aW9uLklkOwppbXBvcnQgb3JnLnNwcmluZ2ZyYW1ld29yay5kYXRhLmFubm90YXRpb24uUmVmZXJlbmNlOwppbXBvcnQgb3JnLnNwcmluZ2ZyYW1ld29yay5kYXRhLmFubm90YXRpb24uVHJhbnNpZW50OwppbXBvcnQgb3JnLnNwcmluZ2ZyYW1ld29yay5kYXRhLnJlZGlzLmNvcmUuUmVkaXNIYXNoOwppbXBvcnQgb3JnLnNwcmluZ2ZyYW1ld29yay5kYXRhLnJlZGlzLmNvcmUuaW5kZXguSW5kZXhlZDsKCmltcG9ydCBsb21ib2suRGF0YTsKaW1wb3J0IGxvbWJvay5FcXVhbHNBbmRIYXNoQ29kZTsKaW1wb3J0IGxvbWJvay5Ub1N0cmluZzsKCkBFcXVhbHNBbmRIYXNoQ29kZShvbmx5RXhwbGljaXRseUluY2x1ZGVkID0gdHJ1ZSkKQFRvU3RyaW5nKG9ubHlFeHBsaWNpdGx5SW5jbHVkZWQgPSB0cnVlKQpARGF0YQpAUmVkaXNIYXNoCnB1YmxpYyBjbGFzcyBVc2VyIHsKICBASWQKICBAVG9TdHJpbmcuSW5jbHVkZQogIHByaXZhdGUgU3RyaW5nIGlkOwoKICBATm90TnVsbAogIEBTaXplKG1pbiA9IDIsIG1heCA9IDQ4KQogIEBUb1N0cmluZy5JbmNsdWRlCiAgcHJpdmF0ZSBTdHJpbmcgbmFtZTsKCiAgQE5vdE51bGwKICBARW1haWwKICBARXF1YWxzQW5kSGFzaENvZGUuSW5jbHVkZQogIEBUb1N0cmluZy5JbmNsdWRlCiAgQEluZGV4ZWQKICBwcml2YXRlIFN0cmluZyBlbWFpbDsKCiAgQE5vdE51bGwKICBwcml2YXRlIFN0cmluZyBwYXNzd29yZDsKCiAgQFRyYW5zaWVudAogIHByaXZhdGUgU3RyaW5nIHBhc3N3b3JkQ29uZmlybTsKCiAgQFJlZmVyZW5jZQogIHByaXZhdGUgU2V0PFJvbGU+IHJvbGVzID0gbmV3IEhhc2hTZXQ8Um9sZT4oKTsKCiAgcHVibGljIHZvaWQgYWRkUm9sZShSb2xlIHJvbGUpIHsKICAgIHJvbGVzLmFkZChyb2xlKTsKICB9Cn0KYCkpLG1keCgicCIsbnVsbCxgVGhpcyBjbGFzcyBpcyBhIGxpdHRsZSBtb3JlIGludm9sdmVkLCBzbyBsZXTigJlzIGJyZWFrIGl0IGRvd246YCksbWR4KCJvbCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxgV2UgaGF2ZSBhbm90aGVyIFBPSk8gKGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSxgQERhdGFgKSxgKSB3aG9zZSBpbnN0YW5jZXMgY2FuIGJlIHBlcnNpc3RlZCBhcyBSZWRpcyBIYXNoZXMgKGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSxgQFJlZGlzSGFzaGApLGApYCksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYFRoZSBjbGFzcyBpcyBhbm5vdGF0ZWQgdG8gb25seSBhZGQgZmllbGRzIHRvIGVxdWFscy9oYXNoY29kZS90b1N0cmluZyB0aGF0IGFyZSBleHBsaWNpdGx5IGFubm90YXRpb25zIHdpdGggYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJsaSJ9LGBARXF1YWxzSGFzaENvZGUuSW5jbHVkZWApLGAgYW5kIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSxgQFRvU3RyaW5nLkluY2x1ZGVgKSksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sYE9uY2UgYWdhaW4sIHdlIGhhdmUgYW4gYXV0by1nZW5lcmF0ZWQgU3RyaW5nIFJlZGlzIEhhc2gga2V5IHVzaW5nIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSxgQElkYCkpLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LGBXZSBjcmVhdGUgYSAoc2Vjb25kYXJ5KSBpbmRleCBvbiB0aGUgZW1haWwgZmllbGQgYnkgYW5ub3RhdGluZyB0aGUgcHJvcGVydHkgd2l0aCBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sYEBJbmRleGVkYCksYC4gV2Ugd2lsbCBsZWFybiBtb3JlIGFib3V0IHNlY29uZGFyeSBpbmRleGVzIGluIHRoZSBuZXh0IGxlc3Nvbi5gKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSxgU2V2ZXJhbCBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sYGphdmF4LnZhbGlkYXRpb24uY29uc3RyYWludHMgYCksYGFubm90YXRpb25zIGFyZSB1c2VkIHRvIGRlbm90ZSBmaWVsZHMgYXMgYmVpbmcgb2YgdHlwZSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sYEBFbWFpbGApLGAsIGJlaW5nIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSxgQE5vdE51bGxgKSxgLWFibGUsIGFuZCByZXN0cmljdGluZyB0aGVpciBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sYEBTaXplYCkpLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LGBUaGUgcGFzc3dvcmRDb25maXJtIGZpZWxkLCB3aGljaCB3aWxsIGhvbGQgdGhlIHRyYWRpdGlvbmFsIOKAnHBhc3N3b3JkIGNvbmZpcm1hdGlvbuKAnSwgaXMgbWFya2VkIGFzIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSxgQFRyYW5zaWVudGApLGAgc28gdGhhdCBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sYEBSZWRpc0hhc2hgKSxgIGRvZXMgbm90IGF0dGVtcHQgdG8gc2VyaWFsaXplIGl0IHRvIHRoZSBkYXRhYmFzZWApLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LGBGb3IgdGhlIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSxgVXNlcmApLGDigJlzIHJvbGVzLCB3ZSBoYXZlIGEgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJsaSJ9LGBTZXQgYCksYG9mIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToibGkifSxgUm9sZWApLGAgb2JqZWN0cyBtYXJrZWQgYXMgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJsaSJ9LGBAUmVmZXJlbmNlc2ApLGAgd2hpY2ggd2lsbCBjYXVzZSB0aGVtIHRvIGJlIHN0b3JlZCBhcyB0aGUgaWQgb2YgYSBnaXZlbiByb2xlIGluIHRoZSBSZWRpcyBIYXNoIGJhY2tpbmcgYSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sYFVzZXJgKSxgIGluc3RhbmNlLmApLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LGBGaW5hbGx5IGF0IHRoZSBib3R0b20sIHdlIGFkZCBhIHV0aWxpdHkgbWV0aG9kIHRvIGFkZCBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6ImxpIn0sYFJvbGVgKSxgcyB0byB0aGUgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJsaSJ9LGBVc2VyYCksYOKAmXMgUm9sZSBTZXQuYCkpLG1keCgiaDMiLHsiaWQiOiJzcHJpbmctcmVwb3NpdG9yaWVzIn0sYFNwcmluZyBSZXBvc2l0b3JpZXNgKSxtZHgoInAiLG51bGwsYE5vdyB0aGF0IHdlIGhhdmUgdHdvIG1vZGVscyBwcm9wZXJseSBhbm5vdGF0ZWQsIHdlIG5lZWQgYXNzb2NpYXRlZCByZXBvc2l0b3JpZXMgdG8gcGVyZm9ybSBkYXRhIG9wZXJhdGlvbnMgb24gc2FpZCBtb2RlbHMuIEEgU3ByaW5nIERhdGEgUmVwb3NpdG9yeSBpcyBzaW1pbGFyIHRvIHRoZSBEQU8gKERhdGEgQWNjZXNzIE9iamVjdCkgcGF0dGVybgppbiB0aGF0IHRoZXkgYm90aCBhYnN0cmFjdCBvcGVyYXRpb25zIGFnYWluc3QgdGhlIHVuZGVybHlpbmcgZGF0YSBzdG9yYWdlLiBUaGUgZGlmZmVyZW5jZSBpcyB0aGF0IHJlcG9zaXRvcmllcwpmdXJ0aGVyIGFic3RyYWN0IHRoZSB1bmRlcmx5aW5nIHN0b3JhZ2UgbWVjaGFuaXNtIGJ5IGZvY3VzaW5nIG9uIHRoZSBtYW5hZ2VtZW50IG9mIGEgY29sbGVjdGlvbiBvZiBvYmplY3RzLAp3aGlsZSBEQU9zIGFyZSBtb3JlIFNRTC9UYWJsZSBjZW50cmljLmApLG1keCgiaDMiLHsiaWQiOiJyb2xlLXJlcG9zaXRvcnkifSxgUm9sZSBSZXBvc2l0b3J5YCksbWR4KCJwIixudWxsLGBVbmRlciB0aGUgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYHNyYy9tYWluL2phdmEvY29tL3JlZGlzbGFicy9lZHUvcmVkaTJyZWFkL3JlcG9zaXRvcmllc2ApLGAgbGV0J3MgY3JlYXRlIHRoZSBSb2xlUmVwb3NpdG9yeSBpbnRlcmZhY2UgYXMgZm9sbG93czpgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWphdmEifSksYHBhY2thZ2UgY29tLnJlZGlzbGFicy5lZHUucmVkaTJyZWFkLnJlcG9zaXRvcmllczsKCmltcG9ydCBjb20ucmVkaXNsYWJzLmVkdS5yZWRpMnJlYWQubW9kZWxzLlJvbGU7CgppbXBvcnQgb3JnLnNwcmluZ2ZyYW1ld29yay5kYXRhLnJlcG9zaXRvcnkuQ3J1ZFJlcG9zaXRvcnk7CmltcG9ydCBvcmcuc3ByaW5nZnJhbWV3b3JrLnN0ZXJlb3R5cGUuUmVwb3NpdG9yeTsKCkBSZXBvc2l0b3J5CnB1YmxpYyBpbnRlcmZhY2UgUm9sZVJlcG9zaXRvcnkgZXh0ZW5kcyBDcnVkUmVwb3NpdG9yeTxSb2xlLCBTdHJpbmc+IHsKfQpgKSksbWR4KCJwIixudWxsLGBPdXIgcmVwb3NpdG9yeSBleHRlbmRzIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBDcnVkUmVwb3NpdG9yeWApLGAgZm9yIHRoZSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgUm9sZWApLGAgY2xhc3Mgd2l0aCBrZXkgb2YgdHlwZSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgU3RyaW5nYCksYCwgaXQgcHJvdmlkZXMgYmFzaWMgQ1JVRCBhbmQgZmluZGVyIG9wZXJhdGlvbnMuClNwcmluZyBEYXRhIFJlZGlzIHJlcG9zaXRvcmllcyBhcmUgaGlnaGx5IHBlcmZvcm1hbnQ7IHRoZXkgYXZvaWQgdXNpbmcgcmVmbGVjdGlvbiBhbmQgYnl0ZS1jb2RlIGdlbmVyYXRpb24gYW5kIGluc3RlYWQgdXNlIHByb2dyYW1tYXRpYwpKREsgcHJveGllcyBpbnN0YW5jZXMgdXNpbmcgU3ByaW5n4oCZcyBQcm94eUZhY3RvcnkgQVBJLiBTZWUgYCxtZHgoImEiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwIn0seyJocmVmIjoiaHR0cHM6Ly9iaXQubHkvMlBzaHhFSSJ9KSxgaHR0cHM6Ly9iaXQubHkvMlBzaHhFSWApKSxtZHgoImgzIix7ImlkIjoidGVzdGluZy10aGUtcm9sZS1yZXBvc2l0b3J5In0sYFRlc3RpbmcgdGhlIFJvbGUgUmVwb3NpdG9yeWApLG1keCgicCIsbnVsbCxgTGV04oCZcyB0ZXN0IHRoZSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgUm9sZVJlcG9zaXRvcnlgKSxgIGJ5IHVzaW5nIGEgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYENvbW1hbmRMaW5lUnVubmVyIGApLGBpbXBsZW1lbnRhdGlvbi4gQSBTcHJpbmcgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYENvbW1hbmRMaW5lUnVubmVyIGApLGBpcyBhbiBpbnRlcmZhY2UgdGhhdCB0ZWxscyB0aGUgU3ByaW5nIGNvbnRhaW5lcgp0aGF0IHRoZSBydW4gbWV0aG9kIG5lZWRzIHRvIGJlIGV4ZWN1dGVkIHVwb24gc3RhcnR1cC4KQSBTcHJpbmcgQm9vdCBhcHBsaWNhdGlvbiBjYW4gaGF2ZSBtYW55IGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBDb21tYW5kTGluZVJ1bm5lcmApLGBzOyB0byBjb250cm9sIHRoZSBvcmRlciBvZiB0aGVpciBleGVjdXRpb24sIHdlIGNhbiBmdXJ0aGVyIGFubm90YXRlIHRoZW0gd2l0aCB0aGUgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYEBPcmRlcmApLGAgYW5ub3RhdGlvbi4KQ3JlYXRlIHRoZSBkaXJlY3RvcnkgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYHNyYy9tYWluL2phdmEvY29tL3JlZGlzbGFicy9lZHUvcmVkaTJyZWFkL2Jvb3RgKSxgIGFuZCB0aGVuIGFkZCB0aGUgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYENyZWF0ZVJvbGVzYCksYCBjbGFzczpgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWphdmEifSksYHBhY2thZ2UgY29tLnJlZGlzbGFicy5lZHUucmVkaTJyZWFkLmJvb3Q7CgppbXBvcnQgb3JnLnNwcmluZ2ZyYW1ld29yay5ib290LkNvbW1hbmRMaW5lUnVubmVyOwppbXBvcnQgb3JnLnNwcmluZ2ZyYW1ld29yay5jb3JlLmFubm90YXRpb24uT3JkZXI7CmltcG9ydCBvcmcuc3ByaW5nZnJhbWV3b3JrLnN0ZXJlb3R5cGUuQ29tcG9uZW50OwoKQENvbXBvbmVudApAT3JkZXIoMSkKcHVibGljIGNsYXNzIENyZWF0ZVJvbGVzIGltcGxlbWVudHMgQ29tbWFuZExpbmVSdW5uZXIgewoKIEBPdmVycmlkZQogcHVibGljIHZvaWQgcnVuKFN0cmluZy4uLiBhcmdzKSB0aHJvd3MgRXhjZXB0aW9uIHsKICAgU3lzdGVtLm91dC5wcmludGxuKCI+Pj4gSGVsbG8gZnJvbSB0aGUgQ3JlYXRlUm9sZXMgQ29tbWFuZExpbmVSdW5uZXIuLi4iKTsKIH0KfQpgKSksbWR4KCJwIixudWxsLGBPdXIgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYENyZWF0ZVJvbGVzYCksYCBjbGFzcyB3aWxsIHJ1biBvbiBlYWNoIHNlcnZlciBzdGFydC11cCBvciBvbiBlYWNoIGxpdmUgcmVsb2FkIChzaW5jZSB3ZSBhcmUgdXNpbmcgU3ByaW5nIERldlRvb2xzKS4KVGhlIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBAT3JkZXJgKSxgIGFubm90YXRpb24gdGFrZXMgYSBudW1lcmljIHZhbHVlIGluZGljYXRpbmcgdGhlIG9yZGVyIG9mIGV4ZWN1dGlvbi4KVG8gdGVzdCB0aGUgY29tbWFuZCBsaW5lIHJ1bm5lciB3ZSBoYXZlIGEgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYFN5c3RlbS5vdXQucHJpbnRsbiBgKSxgaW4gdGhlIHJ1biBtZXRob2QgdGhhdCB3ZSBjYW4gd2F0Y2ggZmx5IGJ5IG9uIHRoZSBjb25zb2xlLmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHt9KSxgMjAyMS0wNC0wMiAxNDozMjo1OC4zNzQgIElORk8gNDE1MDAgLS0tIFsgIHJlc3RhcnRlZE1haW5dIGMuci5lZHUucmVkaTJyZWFkLlJlZGkycmVhZEFwcGxpY2F0aW9uICAgOiBTdGFydGVkIFJlZGkycmVhZEFwcGxpY2F0aW9uIGluIDAuNDc0IHNlY29uZHMgKEpWTSBydW5uaW5nIGZvciA3NDcxNC4xNDMpCj4+PiBIZWxsbyBmcm9tIHRoZSBDcmVhdGVSb2xlcyBDb21tYW5kTGluZVJ1bm5lci4uLgoyMDIxLTA0LTAyIDE0OjMyOjU4LjM3NSAgSU5GTyA0MTUwMCAtLS0gWyAgcmVzdGFydGVkTWFpbl0gLkNvbmRpdGlvbkV2YWx1YXRpb25EZWx0YUxvZ2dpbmdMaXN0ZW5lciA6IENvbmRpdGlvbiBldmFsdWF0aW9uIHVuY2hhbmdlZApgKSksbWR4KCJwIixudWxsLGBOb3cgdGhhdCB3ZSBrbm93IHRoZSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgQ3JlYXRlUm9sZXNgKSxgIGNvbXBvbmVudCBydW5zLCBsZXQncyBjb21wbGV0ZSBpdCB0byB3b3JrIHdpdGggdGhlIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBSb2xlUmVwb3NpdG9yeWApLGAuYCksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0seyJjbGFzc05hbWUiOiJsYW5ndWFnZS1qYXZhIn0pLGBwYWNrYWdlIGNvbS5yZWRpc2xhYnMuZWR1LnJlZGkycmVhZC5ib290OwoKaW1wb3J0IGNvbS5yZWRpc2xhYnMuZWR1LnJlZGkycmVhZC5tb2RlbHMuUm9sZTsKaW1wb3J0IGNvbS5yZWRpc2xhYnMuZWR1LnJlZGkycmVhZC5yZXBvc2l0b3JpZXMuUm9sZVJlcG9zaXRvcnk7CgppbXBvcnQgb3JnLnNwcmluZ2ZyYW1ld29yay5iZWFucy5mYWN0b3J5LmFubm90YXRpb24uQXV0b3dpcmVkOwppbXBvcnQgb3JnLnNwcmluZ2ZyYW1ld29yay5ib290LkNvbW1hbmRMaW5lUnVubmVyOwppbXBvcnQgb3JnLnNwcmluZ2ZyYW1ld29yay5jb3JlLmFubm90YXRpb24uT3JkZXI7CmltcG9ydCBvcmcuc3ByaW5nZnJhbWV3b3JrLnN0ZXJlb3R5cGUuQ29tcG9uZW50OwoKaW1wb3J0IGxvbWJvay5leHRlcm4uc2xmNGouU2xmNGo7CgpAQ29tcG9uZW50CkBPcmRlcigxKQpAU2xmNGoKcHVibGljIGNsYXNzIENyZWF0ZVJvbGVzIGltcGxlbWVudHMgQ29tbWFuZExpbmVSdW5uZXIgewoKICBAQXV0b3dpcmVkCiAgcHJpdmF0ZSBSb2xlUmVwb3NpdG9yeSByb2xlUmVwb3NpdG9yeTsKCiAgQE92ZXJyaWRlCiAgcHVibGljIHZvaWQgcnVuKFN0cmluZy4uLiBhcmdzKSB0aHJvd3MgRXhjZXB0aW9uIHsKICAgIGlmIChyb2xlUmVwb3NpdG9yeS5jb3VudCgpID09IDApIHsKICAgICAgUm9sZSBhZG1pblJvbGUgPSBSb2xlLmJ1aWxkZXIoKS5uYW1lKCJhZG1pbiIpLmJ1aWxkKCk7CiAgICAgIFJvbGUgY3VzdG9tZXJSb2xlID0gUm9sZS5idWlsZGVyKCkubmFtZSgiY3VzdG9tZXIiKS5idWlsZCgpOwogICAgICByb2xlUmVwb3NpdG9yeS5zYXZlKGFkbWluUm9sZSk7CiAgICAgIHJvbGVSZXBvc2l0b3J5LnNhdmUoY3VzdG9tZXJSb2xlKTsKICAgICAgbG9nLmluZm8oIj4+Pj4gQ3JlYXRlZCBhZG1pbiBhbmQgY3VzdG9tZXIgcm9sZXMuLi4iKTsKICAgIH0KICB9Cn0KYCkpLG1keCgicCIsbnVsbCxgV2UgYmVnaW4gYnkgaW5qZWN0aW5nIGFuIGluc3RhbmNlIG9mIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBSb2xlUmVwb3NpdG9yeWApLGAgdXNpbmcgdGhlIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBAQXV0b3dpcmVkYCksYCBhbm5vdGF0aW9uLiBTaW5jZSB3ZSBkb27igJl0IHdhbnQgdGhlIHJvbGVzIHRvIGJlIGNyZWF0ZWQgb24gZWFjaCByZXN0YXJ0IG9mIHRoZSBzZXJ2ZXIsCm91ciBsb2dpYyB3aWxsIG9ubHkgZXhlY3V0ZSB3aGVuIHRoZSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgUm9sZVJlcG9zaXRvcnlgKSxgIGhhcyBubyBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgUm9sZWApLGBzLgpJZiB0aGVyZSBhcmUgbm8gYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYFJvbGVzYCksYCwgdGhlbiB3ZSBjcmVhdGUgdGhlIOKAnGFkbWlu4oCdIGFuZCDigJxjdXN0b21lcuKAnSByb2xlcyB1c2luZyB0aGUgTG9tYm9rIGJ1aWxkZXIuIFRoZW4gd2Ugc2F2ZSB0aGVtIHRvIFJlZGlzIHVzaW5nIHRoZSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgUm9sZVJlcG9zaXRvcnlgKSxgIHNhdmUgbWV0aG9kLgpUbyBwcm9wZXJseSBsb2cgYSBtZXNzYWdlIHdl4oCZbGwgdXNlIHRoZSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgQFNsZjRqYCksYCAoU2ltcGxlIExvZ2dpbmcgRmFjYWRlIGZvciBKYXZhKSBhbm5vdGF0aW9uIHByb3ZpZGVkIGJ5IExvbWJvaywgd2hpY2ggY3JlYXRlcyBhIGxvZ2dlciBpbnN0YW5jZSBjYWxsZWQgbG9nLAp3aXRoIHRoZSBjdXN0b21hcnkgbG9nIGxldmVsIGxvZ2dpbmcgbWV0aG9kcy4KT24gc2VydmVyIHN0YXJ0IHdlIHNob3VsZCBub3cgc2VlLCBvbmNlLCB0aGUgb3V0cHV0IG9mIG91ciBkYXRhYmFzZSBzZWVkaW5nLmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtYmFzaCJ9KSxgMjAyMS0wNC0wMiAxOToyODoyNS4zNjcgIElORk8gOTQ5NzEgLS0tIFsgIHJlc3RhcnRlZE1haW5dIGMuci5lZHUucmVkaTJyZWFkLlJlZGkycmVhZEFwcGxpY2F0aW9uICAgOiBTdGFydGVkIFJlZGkycmVhZEFwcGxpY2F0aW9uIGluIDIuMTQ2IHNlY29uZHMgKEpWTSBydW5uaW5nIGZvciAyLjU0NCkKMjAyMS0wNC0wMiAxOToyODoyNS42NTQgIElORk8gOTQ5NzEgLS0tIFsgIHJlc3RhcnRlZE1haW5dIGMuci5lZHUucmVkaTJyZWFkLmJvb3QuQ3JlYXRlUm9sZXMgICAgICAgOiA+Pj4+IENyZWF0ZWQgYWRtaW4gYW5kIGN1c3RvbWVyIHJvbGVzLi4uCmApKSxtZHgoInAiLG51bGwsYExldOKAmXMgdXNlIHRoZSBSZWRpcyBDTEkgdG8gZXhwbG9yZSBob3cgdGhlIGAsbWR4KCJpbmxpbmVDb2RlIix7cGFyZW50TmFtZToicCJ9LGBSb2xlYCksYHMgd2VyZSBzdG9yZWQsIGxldOKAmXMgdXNlIHRoZSBLRVlTIGNvbW1hbmQgcGFzc2luZyB0aGUgUm9sZSBmdWxseSBxdWFsaWZpZWQgY2xhc3MgbmFtZSBhbmQgYSB3aWxkY2FyZC4gUmVzdWx0aW5nIGluOmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtYmFzaCJ9KSxgMTI3LjAuMC4xOjYzNzk+IEtFWVMgY29tLnJlZGlzbGFicy5lZHUucmVkaTJyZWFkLm1vZGVscy5Sb2xlKgoxKSAiY29tLnJlZGlzbGFicy5lZHUucmVkaTJyZWFkLm1vZGVscy5Sb2xlOmM0MjE5NjU0LTBiNzktNGVlNi1iOTI4LWNiNzU5MDljNDQ2NCIKMikgImNvbS5yZWRpc2xhYnMuZWR1LnJlZGkycmVhZC5tb2RlbHMuUm9sZTo5ZDM4M2JhZi0zNWEwLTRkMjAtODI5Ni1lZWRjNGJlYTEzNGEiCjMpICJjb20ucmVkaXNsYWJzLmVkdS5yZWRpMnJlYWQubW9kZWxzLlJvbGUiCmApKSxtZHgoInAiLG51bGwsYFRoZSBmaXJzdCB0d28gdmFsdWVzIGFyZSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgSGFzaGApLGBlcywgYWN0dWFsIGluc3RhbmNlcyBvZiB0aGUgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYFJvbGVgKSxgIGNsYXNzLiBUaGUgc3RyaW5nIGFmdGVyIHRoZSBgLG1keCgiaW5saW5lQ29kZSIse3BhcmVudE5hbWU6InAifSxgOmApLGAgaXMgdGhlIHByaW1hcnkga2V5IG9mIHRoZSBpbmRpdmlkdWFsIFJvbGUuIExldOKAmXMgaW5zcGVjdCBvbmUgb2YgdGhvc2UgaGFzaGVzOmApLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHsiY2xhc3NOYW1lIjoibGFuZ3VhZ2UtYmFzaCJ9KSxgMTI3LjAuMC4xOjYzNzk+IFRZUEUgImNvbS5yZWRpc2xhYnMuZWR1LnJlZGkycmVhZC5tb2RlbHMuUm9sZTpjNDIxOTY1NC0wYjc5LTRlZTYtYjkyOC1jYjc1OTA5YzQ0NjQiCmhhc2gKMTI3LjAuMC4xOjYzNzk+IEhHRVRBTEwgImNvbS5yZWRpc2xhYnMuZWR1LnJlZGkycmVhZC5tb2RlbHMuUm9sZTpjNDIxOTY1NC0wYjc5LTRlZTYtYjkyOC1jYjc1OTA5YzQ0NjQiCjEpICJfY2xhc3MiCjIpICJjb20ucmVkaXNsYWJzLmVkdS5yZWRpMnJlYWQubW9kZWxzLlJvbGUiCjMpICJpZCIKNCkgImM0MjE5NjU0LTBiNzktNGVlNi1iOTI4LWNiNzU5MDljNDQ2NCIKNSkgIm5hbWUiCjYpICJhZG1pbiIKYCkpLG1keCgicCIsbnVsbCxgVXNpbmcgdGhlIFRZUEUgY29tbWFuZCByZXR1cm5zLCBhcyBleHBlY3RlZCB0aGF0IHRoZSB2YWx1ZSB1bmRlciB0aGUga2V5IGlzIGEgUmVkaXMgSGFzaC4gV2UgdXNlIHRoZSBIR0VUQUxMIHRvIOKAnEdldCBBbGzigJ0gdmFsdWVzIGluIHRoZSBIYXNoLiBUaGUgYCxtZHgoImlubGluZUNvZGUiLHtwYXJlbnROYW1lOiJwIn0sYF9jbGFzc2ApLGAgaXMgYSBtZXRhZGF0YSBmaWVsZCB3aGljaCBkZW1hcmtzIHRoZSBjbGFzcyBvZiB0aGUgb2JqZWN0IHN0b3JlZCBpbiB0aGUgSGFzaC4KTm93IGxldOKAmXMgaW5zcGVjdCB0aGUgdGhpcmQgdmFsdWUgaW4gdGhlIEtFWVMgbGlzdDpgKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLF9leHRlbmRzKHtwYXJlbnROYW1lOiJwcmUifSx7ImNsYXNzTmFtZSI6Imxhbmd1YWdlLWJhc2gifSksYDEyNy4wLjAuMTo2Mzc5PiBUWVBFICJjb20ucmVkaXNsYWJzLmVkdS5yZWRpMnJlYWQubW9kZWxzLlJvbGUiCnNldAoxMjcuMC4wLjE6NjM3OT4gU01FTUJFUlMgImNvbS5yZWRpc2xhYnMuZWR1LnJlZGkycmVhZC5tb2RlbHMuUm9sZSIKMSkgIjlkMzgzYmFmLTM1YTAtNGQyMC04Mjk2LWVlZGM0YmVhMTM0YSIKMikgImM0MjE5NjU0LTBiNzktNGVlNi1iOTI4LWNiNzU5MDljNDQ2NCIKYCkpLG1keCgicCIsbnVsbCxgVGhlIFJlZGlzIFNldCB1bmRlciB0aGUgbWFwcGVkIGNsYXNzIG5hbWUgaXMgdXNlZCB0byBrZWVwIHRoZSBwcmltYXJ5IGtleXMgbWFpbnRhaW5lZCBmb3IgYSBnaXZlbiBjbGFzcy5gKSk7fTtNRFhDb250ZW50LmlzTURYQ29tcG9uZW50PXRydWU7"},{"version":3,"sources":["/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/develop/java/spring/redis-and-spring-course/lesson_3/index-lesson_3.mdx"],"names":["React","mdx","frontMatter","id","title","sidebar_label","slug","metadata","useBaseUrl","toc","value","children","layoutProps","MDXLayout","MDXContent","components","props","require","default","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'index-lesson_3',\n\ttitle: 'Object Mapping & Redis Repositories',\n\tsidebar_label: 'Mapping & Repositories',\n\tslug: '/develop/java/redis-and-spring-course/lesson_3'\n};\nexport const metadata = {\n  \"unversionedId\": \"develop/java/spring/redis-and-spring-course/lesson_3/index-lesson_3\",\n  \"id\": \"develop/java/spring/redis-and-spring-course/lesson_3/index-lesson_3\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Object Mapping & Redis Repositories\",\n  \"description\": \"Objectives\",\n  \"source\": \"@site/docs/develop/java/spring/redis-and-spring-course/lesson_3/index-lesson_3.mdx\",\n  \"slug\": \"/develop/java/redis-and-spring-course/lesson_3\",\n  \"permalink\": \"/develop/java/redis-and-spring-course/lesson_3\",\n  \"editUrl\": \"https://github.com/redis-developer/redis-developer/edit/master/docs/develop/java/spring/redis-and-spring-course/lesson_3/index-lesson_3.mdx\",\n  \"version\": \"current\",\n  \"sidebar_label\": \"Mapping & Repositories\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"Introducing Spring Data Redis\",\n    \"permalink\": \"/develop/java/redis-and-spring-course/lesson_2\"\n  },\n  \"next\": {\n    \"title\": \"User/Roles & Secondary Indexes\",\n    \"permalink\": \"/develop/java/redis-and-spring-course/lesson_4\"\n  }\n};\n  /* @jsxRuntime classic */\n/* @jsx mdx */\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nexport const toc = [{\n  value: 'Objectives',\n  id: 'objectives',\n  children: []\n}, {\n  value: 'Agenda',\n  id: 'agenda',\n  children: []\n}, {\n  value: 'Users and roles',\n  id: 'users-and-roles',\n  children: []\n}, {\n  value: 'Enter @RedisHash',\n  id: 'enter-redishash',\n  children: []\n}, {\n  value: 'Spring Repositories',\n  id: 'spring-repositories',\n  children: []\n}, {\n  value: 'Role Repository',\n  id: 'role-repository',\n  children: []\n}, {\n  value: 'Testing the Role Repository',\n  id: 'testing-the-role-repository',\n  children: []\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3 {...{\n      \"id\": \"objectives\"\n    }}>{`Objectives`}</h3>\n    <p>{`To configure a `}<inlineCode parentName=\"p\">{`RedisTemplate `}</inlineCode>{`and learn how to access different operation bundles to read and write data to Redis from a Spring REST controller.`}</p>\n    <h3 {...{\n      \"id\": \"agenda\"\n    }}>{`Agenda`}</h3>\n    <p>{`In this lesson, you will learn:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`How to use the `}<inlineCode parentName=\"li\">{`@RedisHash`}</inlineCode>{` annotation to map domain objects.`}</li>\n      <li parentName=\"ul\">{`How to use `}<inlineCode parentName=\"li\">{`@Id`}</inlineCode>{` to provide primary keys to your mapped objects.`}</li>\n      <li parentName=\"ul\">{`How to use `}<inlineCode parentName=\"li\">{`@Reference`}</inlineCode>{` to create referential associations between objects.`}</li>\n      <li parentName=\"ul\">{`How to create and use Redis Repositories to store domain objects.`}</li>\n    </ul>\n    <p>{`If you get stuck:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The progress made in this lesson is available on the redi2read github repository at `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/redis-developer/redi2read/tree/course/milestone-3\"\n        }}>{`https://github.com/redis-developer/redi2read/tree/course/milestone-3`}</a></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"users-and-roles\"\n    }}>{`Users and roles`}</h3>\n    <p>{`In many applications, whether web applications or RESTful web services, one of the first parts of the domain to be implemented is the user/roles sub-domain.\nIn Redi2Read, Users have one or more Roles, a typical one-to-many association.`}</p>\n    <p><img alt={\"Users and Roles\"} src={require(\"!url-loader?limit=10000&name=assets/images/[name]-[hash].[ext]&fallback=file-loader!./images/user-role-uml.png\").default} /></p>\n    <h3 {...{\n      \"id\": \"enter-redishash\"\n    }}>{`Enter @RedisHash`}</h3>\n    <p>{`In this section, we will embark on the creation of the Redi2Read domain models. We will use Lombok to simplify our POJOs,\nand using the Spring Data Redis `}<inlineCode parentName=\"p\">{`@RedisHash`}</inlineCode>{` and other Spring Data annotations, we will configure our models to be persisted in Redis.`}</p>\n    <h5 {...{\n      \"id\": \"role-model\"\n    }}>{`Role Model`}</h5>\n    <p>{`Let’s start by creating the simplest of our domain’s classes, the Role class under\nthe directory `}<inlineCode parentName=\"p\">{`src/main/java/com/redislabs/edu/redi2read/models`}</inlineCode>{`. Let’s name the file `}<inlineCode parentName=\"p\">{`Role.java`}</inlineCode>{`\nwith the following contents:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package com.redislabs.edu.redi2read.models;\n\nimport lombok.Data;\n\n@Data\npublic class Role {\n  private String id;\n  private String name;\n}\n`}</code></pre>\n    <p>{`We are starting with a class annotated using Lombok’s `}<inlineCode parentName=\"p\">{`@Data `}</inlineCode>{`annotation, which adds `}<inlineCode parentName=\"p\">{`@ToString`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`@EqualsAndHashCode`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`@Getter`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`@Setter`}</inlineCode>{`, and a `}<inlineCode parentName=\"p\">{`@RequiredArgsContructor`}</inlineCode>{`, giving us a fully formed Java POJO.\nFor the Spring Data Repositories to know how to map an instance of Role to a Redis Hash, we need to annotate the class with the @RedisHash annotation.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package com.redislabs.edu.redi2read.models;\n\nimport org.springframework.data.annotation.Id;\nimport org.springframework.data.redis.core.RedisHash;\n\nimport lombok.Builder;\nimport lombok.Data;\n\n@Data\n@RedisHash\npublic class Role {\n  @Id\n  private String id;\n\n  private String name;\n}\n`}</code></pre>\n    <p>{`@RedisHash can take as parameters a timeToLive of type Long, and a String value, which will override the default Redis key prefix (by default, the key prefix is the fully qualified name of the class plus a colon).`}</p>\n    <p>{`Within the class, most of the usual Spring Data annotations are supported. For Role, lets annotate the id field with the @Id annotation. Spring Data Redis will auto-generate and suitable id for the annotated type.`}</p>\n    <h4 {...{\n      \"id\": \"user-model\"\n    }}>{`User Model`}</h4>\n    <p>{`The User model will be used in a registration/signup method. To allow for server-side validation to be performed, we need to add a dependency to the Maven POM for the spring-boot-starter-validation library.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<dependency>\n  <groupId>org.springframework.boot</groupId>\n  <artifactId>spring-boot-starter-validation</artifactId>\n</dependency>\n`}</code></pre>\n    <p>{`Now we can create the User class with the following contents:\npackage com.redislabs.edu.redi2read.models;`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import java.util.HashSet;\nimport java.util.Set;\n\nimport javax.validation.constraints.Email;\nimport javax.validation.constraints.NotNull;\nimport javax.validation.constraints.Size;\n\nimport org.springframework.data.annotation.Id;\nimport org.springframework.data.annotation.Reference;\nimport org.springframework.data.annotation.Transient;\nimport org.springframework.data.redis.core.RedisHash;\nimport org.springframework.data.redis.core.index.Indexed;\n\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\nimport lombok.ToString;\n\n@EqualsAndHashCode(onlyExplicitlyIncluded = true)\n@ToString(onlyExplicitlyIncluded = true)\n@Data\n@RedisHash\npublic class User {\n  @Id\n  @ToString.Include\n  private String id;\n\n  @NotNull\n  @Size(min = 2, max = 48)\n  @ToString.Include\n  private String name;\n\n  @NotNull\n  @Email\n  @EqualsAndHashCode.Include\n  @ToString.Include\n  @Indexed\n  private String email;\n\n  @NotNull\n  private String password;\n\n  @Transient\n  private String passwordConfirm;\n\n  @Reference\n  private Set<Role> roles = new HashSet<Role>();\n\n  public void addRole(Role role) {\n    roles.add(role);\n  }\n}\n`}</code></pre>\n    <p>{`This class is a little more involved, so let’s break it down:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`We have another POJO (`}<inlineCode parentName=\"li\">{`@Data`}</inlineCode>{`) whose instances can be persisted as Redis Hashes (`}<inlineCode parentName=\"li\">{`@RedisHash`}</inlineCode>{`)`}</li>\n      <li parentName=\"ol\">{`The class is annotated to only add fields to equals/hashcode/toString that are explicitly annotations with `}<inlineCode parentName=\"li\">{`@EqualsHashCode.Include`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`@ToString.Include`}</inlineCode></li>\n      <li parentName=\"ol\">{`Once again, we have an auto-generated String Redis Hash key using `}<inlineCode parentName=\"li\">{`@Id`}</inlineCode></li>\n      <li parentName=\"ol\">{`We create a (secondary) index on the email field by annotating the property with `}<inlineCode parentName=\"li\">{`@Indexed`}</inlineCode>{`. We will learn more about secondary indexes in the next lesson.`}</li>\n      <li parentName=\"ol\">{`Several `}<inlineCode parentName=\"li\">{`javax.validation.constraints `}</inlineCode>{`annotations are used to denote fields as being of type `}<inlineCode parentName=\"li\">{`@Email`}</inlineCode>{`, being `}<inlineCode parentName=\"li\">{`@NotNull`}</inlineCode>{`-able, and restricting their `}<inlineCode parentName=\"li\">{`@Size`}</inlineCode></li>\n      <li parentName=\"ol\">{`The passwordConfirm field, which will hold the traditional “password confirmation”, is marked as `}<inlineCode parentName=\"li\">{`@Transient`}</inlineCode>{` so that `}<inlineCode parentName=\"li\">{`@RedisHash`}</inlineCode>{` does not attempt to serialize it to the database`}</li>\n      <li parentName=\"ol\">{`For the `}<inlineCode parentName=\"li\">{`User`}</inlineCode>{`’s roles, we have a `}<inlineCode parentName=\"li\">{`Set `}</inlineCode>{`of `}<inlineCode parentName=\"li\">{`Role`}</inlineCode>{` objects marked as `}<inlineCode parentName=\"li\">{`@References`}</inlineCode>{` which will cause them to be stored as the id of a given role in the Redis Hash backing a `}<inlineCode parentName=\"li\">{`User`}</inlineCode>{` instance.`}</li>\n      <li parentName=\"ol\">{`Finally at the bottom, we add a utility method to add `}<inlineCode parentName=\"li\">{`Role`}</inlineCode>{`s to the `}<inlineCode parentName=\"li\">{`User`}</inlineCode>{`’s Role Set.`}</li>\n    </ol>\n    <h3 {...{\n      \"id\": \"spring-repositories\"\n    }}>{`Spring Repositories`}</h3>\n    <p>{`Now that we have two models properly annotated, we need associated repositories to perform data operations on said models. A Spring Data Repository is similar to the DAO (Data Access Object) pattern\nin that they both abstract operations against the underlying data storage. The difference is that repositories\nfurther abstract the underlying storage mechanism by focusing on the management of a collection of objects,\nwhile DAOs are more SQL/Table centric.`}</p>\n    <h3 {...{\n      \"id\": \"role-repository\"\n    }}>{`Role Repository`}</h3>\n    <p>{`Under the `}<inlineCode parentName=\"p\">{`src/main/java/com/redislabs/edu/redi2read/repositories`}</inlineCode>{` let's create the RoleRepository interface as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package com.redislabs.edu.redi2read.repositories;\n\nimport com.redislabs.edu.redi2read.models.Role;\n\nimport org.springframework.data.repository.CrudRepository;\nimport org.springframework.stereotype.Repository;\n\n@Repository\npublic interface RoleRepository extends CrudRepository<Role, String> {\n}\n`}</code></pre>\n    <p>{`Our repository extends `}<inlineCode parentName=\"p\">{`CrudRepository`}</inlineCode>{` for the `}<inlineCode parentName=\"p\">{`Role`}</inlineCode>{` class with key of type `}<inlineCode parentName=\"p\">{`String`}</inlineCode>{`, it provides basic CRUD and finder operations.\nSpring Data Redis repositories are highly performant; they avoid using reflection and byte-code generation and instead use programmatic\nJDK proxies instances using Spring’s ProxyFactory API. See `}<a parentName=\"p\" {...{\n        \"href\": \"https://bit.ly/2PshxEI\"\n      }}>{`https://bit.ly/2PshxEI`}</a></p>\n    <h3 {...{\n      \"id\": \"testing-the-role-repository\"\n    }}>{`Testing the Role Repository`}</h3>\n    <p>{`Let’s test the `}<inlineCode parentName=\"p\">{`RoleRepository`}</inlineCode>{` by using a `}<inlineCode parentName=\"p\">{`CommandLineRunner `}</inlineCode>{`implementation. A Spring `}<inlineCode parentName=\"p\">{`CommandLineRunner `}</inlineCode>{`is an interface that tells the Spring container\nthat the run method needs to be executed upon startup.\nA Spring Boot application can have many `}<inlineCode parentName=\"p\">{`CommandLineRunner`}</inlineCode>{`s; to control the order of their execution, we can further annotate them with the `}<inlineCode parentName=\"p\">{`@Order`}</inlineCode>{` annotation.\nCreate the directory `}<inlineCode parentName=\"p\">{`src/main/java/com/redislabs/edu/redi2read/boot`}</inlineCode>{` and then add the `}<inlineCode parentName=\"p\">{`CreateRoles`}</inlineCode>{` class:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package com.redislabs.edu.redi2read.boot;\n\nimport org.springframework.boot.CommandLineRunner;\nimport org.springframework.core.annotation.Order;\nimport org.springframework.stereotype.Component;\n\n@Component\n@Order(1)\npublic class CreateRoles implements CommandLineRunner {\n\n @Override\n public void run(String... args) throws Exception {\n   System.out.println(\">>> Hello from the CreateRoles CommandLineRunner...\");\n }\n}\n`}</code></pre>\n    <p>{`Our `}<inlineCode parentName=\"p\">{`CreateRoles`}</inlineCode>{` class will run on each server start-up or on each live reload (since we are using Spring DevTools).\nThe `}<inlineCode parentName=\"p\">{`@Order`}</inlineCode>{` annotation takes a numeric value indicating the order of execution.\nTo test the command line runner we have a `}<inlineCode parentName=\"p\">{`System.out.println `}</inlineCode>{`in the run method that we can watch fly by on the console.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`2021-04-02 14:32:58.374  INFO 41500 --- [  restartedMain] c.r.edu.redi2read.Redi2readApplication   : Started Redi2readApplication in 0.474 seconds (JVM running for 74714.143)\n>>> Hello from the CreateRoles CommandLineRunner...\n2021-04-02 14:32:58.375  INFO 41500 --- [  restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged\n`}</code></pre>\n    <p>{`Now that we know the `}<inlineCode parentName=\"p\">{`CreateRoles`}</inlineCode>{` component runs, let's complete it to work with the `}<inlineCode parentName=\"p\">{`RoleRepository`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package com.redislabs.edu.redi2read.boot;\n\nimport com.redislabs.edu.redi2read.models.Role;\nimport com.redislabs.edu.redi2read.repositories.RoleRepository;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.CommandLineRunner;\nimport org.springframework.core.annotation.Order;\nimport org.springframework.stereotype.Component;\n\nimport lombok.extern.slf4j.Slf4j;\n\n@Component\n@Order(1)\n@Slf4j\npublic class CreateRoles implements CommandLineRunner {\n\n  @Autowired\n  private RoleRepository roleRepository;\n\n  @Override\n  public void run(String... args) throws Exception {\n    if (roleRepository.count() == 0) {\n      Role adminRole = Role.builder().name(\"admin\").build();\n      Role customerRole = Role.builder().name(\"customer\").build();\n      roleRepository.save(adminRole);\n      roleRepository.save(customerRole);\n      log.info(\">>>> Created admin and customer roles...\");\n    }\n  }\n}\n`}</code></pre>\n    <p>{`We begin by injecting an instance of `}<inlineCode parentName=\"p\">{`RoleRepository`}</inlineCode>{` using the `}<inlineCode parentName=\"p\">{`@Autowired`}</inlineCode>{` annotation. Since we don’t want the roles to be created on each restart of the server,\nour logic will only execute when the `}<inlineCode parentName=\"p\">{`RoleRepository`}</inlineCode>{` has no `}<inlineCode parentName=\"p\">{`Role`}</inlineCode>{`s.\nIf there are no `}<inlineCode parentName=\"p\">{`Roles`}</inlineCode>{`, then we create the “admin” and “customer” roles using the Lombok builder. Then we save them to Redis using the `}<inlineCode parentName=\"p\">{`RoleRepository`}</inlineCode>{` save method.\nTo properly log a message we’ll use the `}<inlineCode parentName=\"p\">{`@Slf4j`}</inlineCode>{` (Simple Logging Facade for Java) annotation provided by Lombok, which creates a logger instance called log,\nwith the customary log level logging methods.\nOn server start we should now see, once, the output of our database seeding.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`2021-04-02 19:28:25.367  INFO 94971 --- [  restartedMain] c.r.edu.redi2read.Redi2readApplication   : Started Redi2readApplication in 2.146 seconds (JVM running for 2.544)\n2021-04-02 19:28:25.654  INFO 94971 --- [  restartedMain] c.r.edu.redi2read.boot.CreateRoles       : >>>> Created admin and customer roles...\n`}</code></pre>\n    <p>{`Let’s use the Redis CLI to explore how the `}<inlineCode parentName=\"p\">{`Role`}</inlineCode>{`s were stored, let’s use the KEYS command passing the Role fully qualified class name and a wildcard. Resulting in:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`127.0.0.1:6379> KEYS com.redislabs.edu.redi2read.models.Role*\n1) \"com.redislabs.edu.redi2read.models.Role:c4219654-0b79-4ee6-b928-cb75909c4464\"\n2) \"com.redislabs.edu.redi2read.models.Role:9d383baf-35a0-4d20-8296-eedc4bea134a\"\n3) \"com.redislabs.edu.redi2read.models.Role\"\n`}</code></pre>\n    <p>{`The first two values are `}<inlineCode parentName=\"p\">{`Hash`}</inlineCode>{`es, actual instances of the `}<inlineCode parentName=\"p\">{`Role`}</inlineCode>{` class. The string after the `}<inlineCode parentName=\"p\">{`:`}</inlineCode>{` is the primary key of the individual Role. Let’s inspect one of those hashes:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`127.0.0.1:6379> TYPE \"com.redislabs.edu.redi2read.models.Role:c4219654-0b79-4ee6-b928-cb75909c4464\"\nhash\n127.0.0.1:6379> HGETALL \"com.redislabs.edu.redi2read.models.Role:c4219654-0b79-4ee6-b928-cb75909c4464\"\n1) \"_class\"\n2) \"com.redislabs.edu.redi2read.models.Role\"\n3) \"id\"\n4) \"c4219654-0b79-4ee6-b928-cb75909c4464\"\n5) \"name\"\n6) \"admin\"\n`}</code></pre>\n    <p>{`Using the TYPE command returns, as expected that the value under the key is a Redis Hash. We use the HGETALL to “Get All” values in the Hash. The `}<inlineCode parentName=\"p\">{`_class`}</inlineCode>{` is a metadata field which demarks the class of the object stored in the Hash.\nNow let’s inspect the third value in the KEYS list:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`127.0.0.1:6379> TYPE \"com.redislabs.edu.redi2read.models.Role\"\nset\n127.0.0.1:6379> SMEMBERS \"com.redislabs.edu.redi2read.models.Role\"\n1) \"9d383baf-35a0-4d20-8296-eedc4bea134a\"\n2) \"c4219654-0b79-4ee6-b928-cb75909c4464\"\n`}</code></pre>\n    <p>{`The Redis Set under the mapped class name is used to keep the primary keys maintained for a given class.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}