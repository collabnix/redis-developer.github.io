{"remainingRequest":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/modules/redisgraph/index-redisgraph.mdx","dependencies":[{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/modules/redisgraph/index-redisgraph.mdx","mtime":1631077489361},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-modules-redisgraph-index-redisgraph-mdx-d69.json","mtime":1631077870287},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1631077703630},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/babel-loader/lib/index.js","mtime":1631077703341},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1631077777797},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1631077776334}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/modules/redisgraph/index-redisgraph.mdx"],"names":["React","mdx","frontMatter","id","title","sidebar_label","slug","metadata","toc","value","children","layoutProps","MDXLayout","MDXContent","components","props","require","default","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'index-redisgraph',\n\ttitle: 'RedisGraph',\n\tsidebar_label: 'RedisGraph',\n\tslug: '/modules/redisgraph'\n};\nexport const metadata = {\n  \"unversionedId\": \"modules/redisgraph/index-redisgraph\",\n  \"id\": \"modules/redisgraph/index-redisgraph\",\n  \"isDocsHomePage\": false,\n  \"title\": \"RedisGraph\",\n  \"description\": \"RedisGraph is a Redis module that enables enterprises to process any kind of connected data much faster than with traditional relational or existing graph databases. RedisGraph implements a unique data storage and processing solution (with sparse-adjacency matrices and GraphBLAS) to deliver the fastest and most efficient way to store, manage, and process connected data in graphs. With RedisGraph, you can process complex transactions 10 - 600 times faster than with traditional graph solutions while using 50 - 60% less memory resources than other graph databases!\",\n  \"source\": \"@site/docs/modules/redisgraph/index-redisgraph.mdx\",\n  \"slug\": \"/modules/redisgraph\",\n  \"permalink\": \"/modules/redisgraph\",\n  \"editUrl\": \"https://github.com/redis-developer/redis-developer/edit/master/docs/modules/redisgraph/index-redisgraph.mdx\",\n  \"version\": \"current\",\n  \"sidebar_label\": \"RedisGraph\"\n};\n  /* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const toc = [{\n  value: 'Step 1. Register and subscribe',\n  id: 'step-1-register-and-subscribe',\n  children: []\n}, {\n  value: 'Step 2. Create a database with RedisGraph Module',\n  id: 'step-2-create-a-database-with-redisgraph-module',\n  children: []\n}, {\n  value: 'Step 3. Connect to a database',\n  id: 'step-3-connect-to-a-database',\n  children: []\n}, {\n  value: 'Step 4. Getting Started with RedisGraph',\n  id: 'step-4-getting-started-with-redisgraph',\n  children: []\n}, {\n  value: 'Step 5: Insert data into a graph',\n  id: 'step-5-insert-data-into-a-graph',\n  children: []\n}, {\n  value: 'Next Step',\n  id: 'next-step',\n  children: []\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`RedisGraph is a Redis module that enables enterprises to process any kind of connected data much faster than with traditional relational or existing graph databases. RedisGraph implements a unique data storage and processing solution (with sparse-adjacency matrices and GraphBLAS) to deliver the fastest and most efficient way to store, manage, and process connected data in graphs. With RedisGraph, you can process complex transactions 10 - 600 times faster than with traditional graph solutions while using 50 - 60% less memory resources than other graph databases!`}</p>\n    <h3 {...{\n      \"id\": \"step-1-register-and-subscribe\"\n    }}>{`Step 1. Register and subscribe`}</h3>\n    <p>{`Follow `}<a parentName=\"p\" {...{\n        \"href\": \"/create/cloud/rediscloud\"\n      }}>{`this link to register`}</a>{` and subscribe to Redis Enterprise Cloud`}</p>\n    <p><img alt={\"RedisGraph\"} src={require(\"!url-loader?limit=10000&name=assets/images/[name]-[hash].[ext]&fallback=file-loader!./redisgraph1.png\").default} /></p>\n    <h3 {...{\n      \"id\": \"step-2-create-a-database-with-redisgraph-module\"\n    }}>{`Step 2. Create a database with RedisGraph Module`}</h3>\n    <p><img alt={\"RedisGraph\"} src={require(\"!url-loader?limit=10000&name=assets/images/[name]-[hash].[ext]&fallback=file-loader!./redisgraph.png\").default} /></p>\n    <h3 {...{\n      \"id\": \"step-3-connect-to-a-database\"\n    }}>{`Step 3. Connect to a database`}</h3>\n    <p>{`Follow `}<a parentName=\"p\" {...{\n        \"href\": \"explore/redisinsight\"\n      }}>{`this`}</a>{` link to know how to connect to a database`}</p>\n    <h3 {...{\n      \"id\": \"step-4-getting-started-with-redisgraph\"\n    }}>{`Step 4. Getting Started with RedisGraph`}</h3>\n    <p>{`In the following steps, we will use some basic RediGraph commands to insert data into a graph and then query the graph. You can run them from the Redis command-line interface (redis-cli) or use the CLI available in RedisInsight. (See part 2 of this tutorial to learn more about using the RedisInsight CLI.)`}</p>\n    <p><img alt={\"RedisGraph\"} src={require(\"!url-loader?limit=10000&name=assets/images/[name]-[hash].[ext]&fallback=file-loader!./redisgraphflow.png\").default} /></p>\n    <h3 {...{\n      \"id\": \"step-5-insert-data-into-a-graph\"\n    }}>{`Step 5: Insert data into a graph`}</h3>\n    <h4 {...{\n      \"id\": \"insert-actors\"\n    }}>{`Insert actors`}</h4>\n    <p>{`To interact with RedisGraph you will typically use the GRAPH.QUERY command and execute Cypher queries. Let’s start to insert some actors into the graph:movies graph name, which is automatically created using this command:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`>> GRAPH.QUERY graph:movies \"CREATE (:Actor {name:'Mark Hamill', actor_id:1}), (:Actor {name:'Harrison Ford', actor_id:2}), (:Actor {name:'Carrie Fisher', actor_id:3})\"\n\n1) 1) \"Labels added: 1\"\n   2) \"Nodes created: 3\"\n   3) \"Properties set: 6\"\n   4) \"Query internal execution time: 0.675400 milliseconds\"\n`}</code></pre>\n    <p>{`This single query creates three actors, along with their names and unique IDs.`}</p>\n    <h4 {...{\n      \"id\": \"insert-a-movie\"\n    }}>{`Insert a movie`}</h4>\n    <pre><code parentName=\"pre\" {...{}}>{`> GRAPH.QUERY graph:movies \"CREATE (:Movie {title:'Star Wars: Episode V - The Empire Strikes Back', release_year: 1980 , movie_id:1})\"\n1) 1) \"Labels added: 1\"\n   2) \"Nodes created: 1\"\n   3) \"Properties set: 3\"\n   4) \"Query internal execution time: 0.392300 milliseconds\"\n`}</code></pre>\n    <p>{`This single query creates a movie with a title, the release year, and an ID.`}</p>\n    <h4 {...{\n      \"id\": \"associate-actors-and-movies\"\n    }}>{`Associate actors and movies`}</h4>\n    <p>{`The core of a graph is the relationships between the nodes, allowing the applications to navigate and query them. Let’s create a relationship between the actors and the movies:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`> GRAPH.QUERY graph:movies \"MATCH (a:Actor),(m:Movie) WHERE a.actor_id = 1 AND m.movie_id = 1 CREATE (a)-[r:Acted_in {role:'Luke Skywalker'}]->(m) RETURN r\"\n1) 1) \"r\"\n2) 1) 1) 1) 1) \"id\"\n            2) (integer) 1\n         2) 1) \"type\"\n            2) \"Acted_in\"\n         3) 1) \"src_node\"\n            2) (integer) 0\n         4) 1) \"dest_node\"\n            2) (integer) 3\n         5) 1) \"properties\"\n            2) 1) 1) \"role\"\n                  2) \"Luke Skywalker\"\n3) 1) \"Properties set: 1\"\n   2) \"Relationships created: 1\"\n   3) \"Query internal execution time: 0.664800 milliseconds\"\n`}</code></pre>\n    <p>{`This command created a new relation indicating that the actor Mark Hamill acted in Star Wars: Episode V  as Luke Skywalker.`}</p>\n    <p>{`Let’s repeat this process for the other actors:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`> GRAPH.QUERY graph:movies \"MATCH (a:Actor), (m:Movie) WHERE a.actor_id = 2 AND m.movie_id = 1 CREATE (a)-[r:Acted_in {role:'Han Solo'}]->(m) RETURN r\"\n> GRAPH.QUERY graph:movies \"MATCH (a:Actor), (m:Movie) WHERE a.actor_id = 3 AND m.movie_id = 1 CREATE (a)-[r:Acted_in {role:'Princess Leila'}]->(m) RETURN r\"\n`}</code></pre>\n    <p>{`You can also do all of this in a single query, for example:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`> GRAPH.QUERY graph:movies \"CREATE (:Actor {name:'Marlo Brando', actor_id:4})-[:Acted_in {role:'Don Vito Corleone'}]->(:Movie {title:'The Godfather', release_year: 1972 , movie_id:2})\"\n\n1) 1) \"Nodes created: 2\"\n   2) \"Properties set: 6\"\n   3) \"Relationships created: 1\"\n   4) \"Query internal execution time: 0.848500 milliseconds\"\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"querying-the-graph\"\n    }}>{`Querying the graph`}</h4>\n    <p>{`Now that you have data in your graph, you’re ready to ask some questions, such as:`}</p>\n    <h4 {...{\n      \"id\": \"what-are-the-titles-of-all-the-movies\"\n    }}>{`“What are the titles of all the movies?”`}</h4>\n    <pre><code parentName=\"pre\" {...{}}>{`> GRAPH.QUERY graph:movies \"MATCH (m:Movie) RETURN m.title\"\n\n1) 1) \"m.title\"\n2) 1) 1) \"Star Wars: Episode V - The Empire Strikes Back\"\n   2) 1) \"The Godfather\"\n3) 1) \"Query internal execution time: 0.349400 milliseconds\"\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"what-is-the-information-for-the-movie-with-the-id-of--1\"\n    }}>{`“What is the information for the movie with the ID of  1?”`}</h4>\n    <pre><code parentName=\"pre\" {...{}}>{`> GRAPH.QUERY graph:movies \"MATCH (m:Movie) WHERE m.movie_id = 1 RETURN m\"\n\n1) 1) \"m\"\n2) 1) 1) 1) 1) \"id\"\n            2) (integer) 3\n         2) 1) \"labels\"\n            2) 1) \"Movie\"\n         3) 1) \"properties\"\n            2) 1) 1) \"title\"\n                  2) \"Star Wars: Episode V - The Empire Strikes Back\"\n               2) 1) \"release_year\"\n                  2) (integer) 1980\n               3) 1) \"movie_id\"\n                  2) (integer) 1\n3) 1) \"Query internal execution time: 0.365800 milliseconds\"\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"who-are-the-actors-in-the-movie-star-wars-episode-v---the-empire-strikes-back-and-what-roles-did-they-play\"\n    }}>{`“Who are the actors in the movie 'Star Wars: Episode V - The Empire Strikes Back' and what roles did they play?”`}</h4>\n    <pre><code parentName=\"pre\" {...{}}>{`> GRAPH.QUERY graph:movies \"MATCH (a:Actor)-[r:Acted_in]-(m:Movie) WHERE m.movie_id = 1 RETURN a.name,m.title,r.role\"\n1) 1) \"a.name\"\n   2) \"m.title\"\n   3) \"r.role\"\n2) 1) 1) \"Mark Hamill\"\n      2) \"Star Wars: Episode V - The Empire Strikes Back\"\n      3) \"Luke Skywalker\"\n   2) 1) \"Harrison Ford\"\n      2) \"Star Wars: Episode V - The Empire Strikes Back\"\n      3) \"Han Solo\"\n   3) 1) \"Carrie Fisher\"\n      2) \"Star Wars: Episode V - The Empire Strikes Back\"\n      3) \"Princess Leila\"\n3) 1) \"Query internal execution time: 0.641200 milliseconds\"\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"visualizing-graph-databases-with-redisinsight\"\n    }}>{`Visualizing graph databases with RedisInsight`}</h4>\n    <p>{`If you are using RedisInsight, you can visualize and navigate into the nodes and relationships graphically.\nClick on the RedisGraph menu entry on the left and enter the query:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`MATCH (m:Actor) return m\n`}</code></pre>\n    <p>{`Click on the Execute button, and double click on the actors to follow the relationships You should see a graph like this one:`}</p>\n    <p><img alt={\"RedisGraph\"} src={require(\"!url-loader?limit=10000&name=assets/images/[name]-[hash].[ext]&fallback=file-loader!./redisgraph4.png\").default} /></p>\n    <h3 {...{\n      \"id\": \"next-step\"\n    }}>{`Next Step`}</h3>\n    <ul>\n      <li parentName=\"ul\">{`Learn more about RedisGraph in the `}<a parentName=\"li\" {...{\n          \"href\": \"https://oss.redislabs.com/redisgraph/?_ga=2.186887980.520518125.1606546041-1440690046.1604964523\"\n        }}>{`Quickstart`}</a>{` tutorial.`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}