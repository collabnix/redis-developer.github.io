{"remainingRequest":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/develop/java/spring/redis-and-spring-course/lesson_4/index-lesson_4.mdx","dependencies":[{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/develop/java/spring/redis-and-spring-course/lesson_4/index-lesson_4.mdx","mtime":1631077488445},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-develop-java-spring-redis-and-spring-course-lesson-4-index-lesson-4-mdx-552.json","mtime":1631077870284},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1631077703630},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/babel-loader/lib/index.js","mtime":1631077703341},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1631077777797},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1631077776334}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/develop/java/spring/redis-and-spring-course/lesson_4/index-lesson_4.mdx"],"names":["React","mdx","frontMatter","id","title","sidebar_label","slug","metadata","useBaseUrl","toc","value","children","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'index-lesson_4',\n\ttitle: 'User/Roles & Secondary Indexes',\n\tsidebar_label: 'User Roles & Secondary Indexes',\n\tslug: '/develop/java/redis-and-spring-course/lesson_4'\n};\nexport const metadata = {\n  \"unversionedId\": \"develop/java/spring/redis-and-spring-course/lesson_4/index-lesson_4\",\n  \"id\": \"develop/java/spring/redis-and-spring-course/lesson_4/index-lesson_4\",\n  \"isDocsHomePage\": false,\n  \"title\": \"User/Roles & Secondary Indexes\",\n  \"description\": \"Objectives\",\n  \"source\": \"@site/docs/develop/java/spring/redis-and-spring-course/lesson_4/index-lesson_4.mdx\",\n  \"slug\": \"/develop/java/redis-and-spring-course/lesson_4\",\n  \"permalink\": \"/develop/java/redis-and-spring-course/lesson_4\",\n  \"editUrl\": \"https://github.com/redis-developer/redis-developer/edit/master/docs/develop/java/spring/redis-and-spring-course/lesson_4/index-lesson_4.mdx\",\n  \"version\": \"current\",\n  \"sidebar_label\": \"User Roles & Secondary Indexes\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"Object Mapping & Redis Repositories\",\n    \"permalink\": \"/develop/java/redis-and-spring-course/lesson_3\"\n  },\n  \"next\": {\n    \"title\": \"Books, Categories & The Catalog\",\n    \"permalink\": \"/develop/java/redis-and-spring-course/lesson_5\"\n  }\n};\n  /* @jsxRuntime classic */\n/* @jsx mdx */\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nexport const toc = [{\n  value: 'Objectives',\n  id: 'objectives',\n  children: []\n}, {\n  value: 'Agenda',\n  id: 'agenda',\n  children: []\n}, {\n  value: 'Loading Users',\n  id: 'loading-users',\n  children: []\n}, {\n  value: 'User Repository',\n  id: 'user-repository',\n  children: []\n}, {\n  value: 'Prerequisites',\n  id: 'prerequisites',\n  children: []\n}, {\n  value: 'Password Encoding',\n  id: 'password-encoding',\n  children: []\n}, {\n  value: 'Secondary Indexes: Finding Roles by Name',\n  id: 'secondary-indexes-finding-roles-by-name',\n  children: []\n}, {\n  value: 'CreateUsers CommandLineRunner',\n  id: 'createusers-commandlinerunner',\n  children: []\n}, {\n  value: 'Exploring the loaded Users',\n  id: 'exploring-the-loaded-users',\n  children: []\n}, {\n  value: 'Building the Redi2Read API',\n  id: 'building-the-redi2read-api',\n  children: []\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3 {...{\n      \"id\": \"objectives\"\n    }}>{`Objectives`}</h3>\n    <p>{`To finish creating the user-role domain, load and transform JSON data, and begin crafting the Redi2Read API.`}</p>\n    <h3 {...{\n      \"id\": \"agenda\"\n    }}>{`Agenda`}</h3>\n    <p>{`In this lesson, you'll learn:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`How to load JSON data using Jackson.`}</li>\n      <li parentName=\"ul\">{`How to create and work with secondary indexes`}</li>\n      <li parentName=\"ul\">{`How to use the repositories with a REST controller.`}</li>\n    </ul>\n    <p>{`If you get stuck:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The progress made in this lesson is available on the redi2read github repository at `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/redis-developer/redi2read/tree/course/milestone-4\"\n        }}>{`https://github.com/redis-developer/redi2read/tree/course/milestone-4`}</a></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"loading-users\"\n    }}>{`Loading Users`}</h3>\n    <p>{`Now that we’ve created the Roles let’s load the `}<inlineCode parentName=\"p\">{`User`}</inlineCode>{`s from the provided JSON data in `}<inlineCode parentName=\"p\">{`src/main/resources/data/users/users.json`}</inlineCode>{`.\nThe file contains an array of JSON user objects as shown below:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n  \"password\": \"9yNvIO4GLBdboI\",\n  \"name\": \"Georgia Spencer\",\n  \"id\": -5035019007718357598,\n  \"email\": \"georgia.spencer@example.com\"\n}\n`}</code></pre>\n    <p>{`The JSON fields map exactly to the JavaBean names for our User POJO properties.`}</p>\n    <h3 {...{\n      \"id\": \"user-repository\"\n    }}>{`User Repository`}</h3>\n    <p>{`First, we’ll create the `}<inlineCode parentName=\"p\">{`UserRepository`}</inlineCode>{`; just like we did with the `}<inlineCode parentName=\"p\">{`RoleRepository`}</inlineCode>{`, we’ll extend `}<inlineCode parentName=\"p\">{`CrudRepository`}</inlineCode>{`.\nUnder the `}<inlineCode parentName=\"p\">{`src/main/java/com/redislabs/edu/redi2read/repositories`}</inlineCode>{` let's create the `}<inlineCode parentName=\"p\">{`UserRepository`}</inlineCode>{` interface as follows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package com.redislabs.edu.redi2read.repositories;\n\nimport com.redislabs.edu.redi2read.models.User;\n\nimport org.springframework.data.repository.CrudRepository;\nimport org.springframework.stereotype.Repository;\n\n@Repository\npublic interface UserRepository extends CrudRepository<User, String> {\n  User findFirstByEmail(String email);\n}\n`}</code></pre>\n    <p>{`The `}<inlineCode parentName=\"p\">{`findFirstByEmail`}</inlineCode>{` method takes advantage of the index we previously created on the email field of the `}<inlineCode parentName=\"p\">{`User`}</inlineCode>{` model.\nThe Spring Repository will provide an implementation of the finder method at runtime.\nWe will use this finder when we tackle our application's security.`}</p>\n    <p>{`Let’s create another `}<inlineCode parentName=\"p\">{`CommandLineRunner`}</inlineCode>{` under the boot package to load the users. We’ll follow a similar recipe for the Roles,\nexcept that we will load the JSON data from disk and use Jackson (`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/FasterXML/jackson\"\n      }}>{`https://github.com/FasterXML/jackson`}</a>{`),\none of the most popular Java JSON libraries.`}</p>\n    <p>{`The recipe to load the user goes as follows:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Create an input stream from the user’s JSON data file`}</li>\n      <li parentName=\"ol\">{`Using Jackson, read the input stream into a collection of users`}</li>\n      <li parentName=\"ol\">{`For each user:`}</li>\n    </ol>\n    <ul>\n      <li parentName=\"ul\">{`Encode the plain text password`}</li>\n      <li parentName=\"ul\">{`Add the customer role`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"prerequisites\"\n    }}>{`Prerequisites`}</h3>\n    <p>{`Based on the loading recipe above, there are two things our application can’t currently do that it needs:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A way to encode plain text user password`}</li>\n      <li parentName=\"ul\">{`A way to find a role by name`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"password-encoding\"\n    }}>{`Password Encoding`}</h3>\n    <p>{`Our implementation of `}<inlineCode parentName=\"p\">{`PasswordEncoder`}</inlineCode>{` will use the `}<inlineCode parentName=\"p\">{`BCrypt`}</inlineCode>{` strong hashing function. In the `}<inlineCode parentName=\"p\">{`Redi2readApplication`}</inlineCode>{` class add:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@Bean\npublic BCryptPasswordEncoder passwordEncoder() {\n  return new BCryptPasswordEncoder();\n}\n`}</code></pre>\n    <p>{`With the corresponding import:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"secondary-indexes-finding-roles-by-name\"\n    }}>{`Secondary Indexes: Finding Roles by Name`}</h3>\n    <p>{`As we learned in the previous lesson, the `}<inlineCode parentName=\"p\">{`@Indexed`}</inlineCode>{` annotation can be used to create a secondary index. Secondary indexes enable lookup operations based on native Redis structures.\nThe index is maintained on every save/update of an indexed object.\nTo add a secondary index to the `}<inlineCode parentName=\"p\">{`Role`}</inlineCode>{` model, we’ll simply add the `}<inlineCode parentName=\"p\">{`@Indexed`}</inlineCode>{` annotation:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@Data\n@Builder\n@RedisHash\npublic class Role {\n  @Id\n  private String id;\n\n  @Indexed\n  private String name;\n}\n`}</code></pre>\n    <p>{`Don’t forget to add the corresponding import:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import org.springframework.data.redis.core.index.Indexed;\n`}</code></pre>\n    <p>{`Now when a new `}<inlineCode parentName=\"p\">{`Role`}</inlineCode>{` instance is created, with ID as `}<inlineCode parentName=\"p\">{`\"abc-123\"`}</inlineCode>{` and role as `}<inlineCode parentName=\"p\">{`\"superuser\"`}</inlineCode>{`, Spring Data Redis will do the following:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Create the `}<inlineCode parentName=\"li\">{`\"by name\"`}</inlineCode>{` index: Created as a Redis Set with the key `}<inlineCode parentName=\"li\">{`com.redislabs.edu.redi2read.models.Role:name:superuser`}</inlineCode>{` containing one entry; the id of the indexed object `}<inlineCode parentName=\"li\">{`\"abc-123\"`}</inlineCode></li>\n      <li parentName=\"ol\">{`A list of indexes for the `}<inlineCode parentName=\"li\">{`Role`}</inlineCode>{` \"superuser\": Create a Redis Set with the key `}<inlineCode parentName=\"li\">{`\"com.redislabs.edu.redi2read.models.Role:abc-123:idx\"`}</inlineCode>{`\ncontaining one entry; the key of the index `}<inlineCode parentName=\"li\">{`\"com.redislabs.edu.redi2read.models.Role:name:superuser\"`}</inlineCode></li>\n    </ol>\n    <p>{`Unfortunately, to index the already created Roles, we’ll need to either retrieve them and resave them or recreate them.\nSince we already have automated the seeding of the Roles and we haven’t yet created any associated objects,\nwe can simply delete them using the Redis CLI and the DEL command and restart the server:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`127.0.0.1:6379> KEYS com.redislabs.edu.redi2read.models.Role*\n1) \"com.redislabs.edu.redi2read.models.Role:c4219654-0b79-4ee6-b928-cb75909c4464\"\n2) \"com.redislabs.edu.redi2read.models.Role:9d383baf-35a0-4d20-8296-eedc4bea134a\"\n3) \"com.redislabs.edu.redi2read.models.Role\"\n127.0.0.1:6379> DEL \"com.redislabs.edu.redi2read.models.Role:c4219654-0b79-4ee6-b928-cb75909c4464\" \"com.redislabs.edu.redi2read.models.Role:9d383baf-35a0-4d20-8296-eedc4bea134a\" \"com.redislabs.edu.redi2read.models.Role\"\n(integer) 3\n127.0.0.1:6379>\n`}</code></pre>\n    <p>{`The DEL command takes one or more keys. We’ll pass the three current keys for the Role hashes and the Role key set.`}</p>\n    <p>{`With the secondary index on the name for roles created, we can add a finder method to the `}<inlineCode parentName=\"p\">{`RoleRepository`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@Repository\npublic interface RoleRepository extends CrudRepository<Role, String> {\n  Role findFirstByName(String role);\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"createusers-commandlinerunner\"\n    }}>{`CreateUsers CommandLineRunner`}</h3>\n    <p>{`Under the `}<inlineCode parentName=\"p\">{`src/main/java/com/redislabs/edu/redi2read/boot `}</inlineCode>{`let's create the `}<inlineCode parentName=\"p\">{`CreateUsers.java`}</inlineCode>{` file with the following contents:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package com.redislabs.edu.redi2read.boot;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.util.List;\n\nimport com.fasterxml.jackson.core.type.TypeReference;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.redislabs.edu.redi2read.models.Role;\nimport com.redislabs.edu.redi2read.models.User;\nimport com.redislabs.edu.redi2read.repositories.RoleRepository;\nimport com.redislabs.edu.redi2read.repositories.UserRepository;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.CommandLineRunner;\nimport org.springframework.core.annotation.Order;\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\nimport org.springframework.stereotype.Component;\n\nimport lombok.extern.slf4j.Slf4j;\n\n@Component\n@Order(2)\n@Slf4j\npublic class CreateUsers implements CommandLineRunner {\n\n  @Autowired\n  private RoleRepository roleRepository;\n\n  @Autowired\n  private UserRepository userRepository;\n\n  @Autowired\n  private BCryptPasswordEncoder passwordEncoder;\n\n  @Override\n  public void run(String... args) throws Exception {\n    if (userRepository.count() == 0) {\n      // load the roles\n      Role admin = roleRepository.findFirstByname(\"admin\");\n      Role customer = roleRepository.findFirstByname(\"customer\");\n\n      try {\n        // create a Jackson object mapper\n        ObjectMapper mapper = new ObjectMapper();\n        // create a type definition to convert the array of JSON into a List of Users\n        TypeReference<List<User>> typeReference = new TypeReference<List<User>>() {\n        };\n        // make the JSON data available as an input stream\n        InputStream inputStream = getClass().getResourceAsStream(\"/data/users/users.json\");\n        // convert the JSON to objects\n        List<User> users = mapper.readValue(inputStream, typeReference);\n\n        users.stream().forEach((user) -> {\n          user.setPassword(passwordEncoder.encode(user.getPassword()));\n          user.addRole(customer);\n          userRepository.save(user);\n        });\n        log.info(\">>>> \" + users.size() + \" Users Saved!\");\n      } catch (IOException e) {\n        log.info(\">>>> Unable to import users: \" + e.getMessage());\n      }\n\n      User adminUser = new User();\n      adminUser.setName(\"Adminus Admistradore\");\n      adminUser.setEmail(\"admin@example.com\");\n      adminUser.setPassword(passwordEncoder.encode(\"Reindeer Flotilla\"));//\n      adminUser.addRole(admin);\n\n      userRepository.save(adminUser);\n      log.info(\">>>> Loaded User Data and Created users...\");\n    }\n  }\n}\n`}</code></pre>\n    <p>{`Let’s break it down:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`At the top, we use the `}<inlineCode parentName=\"li\">{`@Autowired`}</inlineCode>{` annotation to inject the `}<inlineCode parentName=\"li\">{`RoleRepository`}</inlineCode>{`, the `}<inlineCode parentName=\"li\">{`UserRepository`}</inlineCode>{`, and the `}<inlineCode parentName=\"li\">{`BCryptPasswordEncoder`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`As with the `}<inlineCode parentName=\"li\">{`CreateRoles`}</inlineCode>{` `}<inlineCode parentName=\"li\">{`CommandLineRunner`}</inlineCode>{`, we only execute the logic if there are no database users.`}</li>\n      <li parentName=\"ul\">{`We then load the admin and customer roles by using the Repository custom finder method `}<inlineCode parentName=\"li\">{`findFirstByName`}</inlineCode>{`.`}</li>\n      <li parentName=\"ul\">{`To process the JSON, we create a Jackson ObjectMapper and a TypeReference, which will serve as a recipe for serializing the JSON into Java objects.`}</li>\n      <li parentName=\"ul\">{`Using the `}<inlineCode parentName=\"li\">{`getResourceAsStream`}</inlineCode>{` from the `}<inlineCode parentName=\"li\">{`Class`}</inlineCode>{` object, we load the JSON file from the resources directory`}</li>\n      <li parentName=\"ul\">{`Then we use the `}<inlineCode parentName=\"li\">{`ObjectMapper`}</inlineCode>{` to convert the incoming input stream into a `}<inlineCode parentName=\"li\">{`List`}</inlineCode>{` of `}<inlineCode parentName=\"li\">{`User`}</inlineCode>{` objects`}</li>\n      <li parentName=\"ul\">{`For each user, we encode the password and add the customer role`}</li>\n      <li parentName=\"ul\">{`Near the end of the file, we create a single user with the admin role, which we will use in a later Lesson`}</li>\n    </ul>\n    <p>{`On application restart, we should now see:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`2021-04-03 10:05:04.222  INFO 40386 --- [  restartedMain] c.r.edu.redi2read.Redi2readApplication   : Started Redi2readApplication in 2.192 seconds (JVM running for 2.584)\n2021-04-03 10:05:04.539  INFO 40386 --- [  restartedMain] c.r.edu.redi2read.boot.CreateRoles       : >>>> Created admin and customer roles...\n2021-04-03 10:06:27.292  INFO 40386 --- [  restartedMain] c.r.edu.redi2read.boot.CreateUsers       : >>>> 1000 Users Saved!\n2021-04-03 10:06:27.373  INFO 40386 --- [  restartedMain] c.r.edu.redi2read.boot.CreateUsers       : >>>> Loaded User Data and Created users...\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"exploring-the-loaded-users\"\n    }}>{`Exploring the loaded Users`}</h3>\n    <p>{`If you were watching the Redis CLI in MONITOR mode you probably saw a barrage of the Redis commands executing for the 1001 users we’ve just created.\nLet’s use the CLI to explore the data:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`127.0.0.1:6379> KEYS \"com.redislabs.edu.redi2read.models.User\"\n1) \"com.redislabs.edu.redi2read.models.User\"\n127.0.0.1:6379> TYPE \"com.redislabs.edu.redi2read.models.User\"\nset\n127.0.0.1:6379> SCARD \"com.redislabs.edu.redi2read.models.User\"\n(integer) 1001\n127.0.0.1:6379> SRANDMEMBER \"com.redislabs.edu.redi2read.models.User\"\n\"-1848761758049653394\"\n127.0.0.1:6379> HGETALL \"com.redislabs.edu.redi2read.models.User:-1848761758049653394\"\n 1) \"id\"\n 2) \"-1848761758049653394\"\n 3) \"_class\"\n 4) \"com.redislabs.edu.redi2read.models.User\"\n 5) \"roles.[0]\"\n 6) \"com.redislabs.edu.redi2read.models.Role:a9f9609f-c173-4f48-a82d-ca88b0d62d0b\"\n 7) \"name\"\n 8) \"Janice Garza\"\n 9) \"email\"\n10) \"janice.garza@example.com\"\n11) \"password\"\n12) \"$2a$10$/UHTESWIqcl6HZmGpWSUHexNymIgM7rzOsWc4tcgqh6W5OVO4O46.\"\n`}</code></pre>\n    <p>{`We now have a Redis Set holding the collection of user keys for the Redis Hashes containing user instances.\nWe use the SCARD command to get the set’s cardinality (1001, the 1000 users from the JSON plus the admin user).\nUsing the SRANDMEMBER command, we can pull a random member from a `}<inlineCode parentName=\"p\">{`Set`}</inlineCode>{`. We then use that and the `}<inlineCode parentName=\"p\">{`User`}</inlineCode>{` Hashes prefix to retrieve the data for a random User hash.\nA few things to point out:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The user’s set of roles are stored using indexed hash fields (`}<inlineCode parentName=\"li\">{`roles.[0], roles.[1]`}</inlineCode>{`, etc.) with a value being the key for a given role.\nThis is the result of annotating the Java Set of Role using `}<inlineCode parentName=\"li\">{`@Reference`}</inlineCode></li>\n      <li parentName=\"ul\">{`The password field is hashed correctly.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"building-the-redi2read-api\"\n    }}>{`Building the Redi2Read API`}</h3>\n    <p>{`Now that we have `}<inlineCode parentName=\"p\">{`User`}</inlineCode>{`s and `}<inlineCode parentName=\"p\">{`Role`}</inlineCode>{`s, let’s create an `}<inlineCode parentName=\"p\">{`UserController`}</inlineCode>{` to expose some user management functionality.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package com.redislabs.edu.redi2read.controllers;\n\nimport com.redislabs.edu.redi2read.models.User;\nimport com.redislabs.edu.redi2read.repositories.UserRepository;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequestMapping(\"/api/users\")\npublic class UserController {\n\n  @Autowired\n  private UserRepository userRepository;\n\n  @GetMapping\n  public Iterable<User> all() {\n    return userRepository.findAll();\n  }\n}\n`}</code></pre>\n    <p>{`We can now issue a GET request to retrieve all users:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ curl --location --request GET 'http://localhost:8080/api/users/'\n`}</code></pre>\n    <p>{`The output should be an array of JSON object like:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`[\n   {\n       \"id\": \"-1180251602608130769\",\n       \"name\": \"Denise Powell\",\n       \"email\": \"denise.powell@example.com\",\n       \"password\": \"$2a$10$pMJjQ2bFAUGlBTX9cHsx/uGrbbl3JZmmiR.vG5xaVwQodQyLaj52a\",\n       \"passwordConfirm\": null,\n       \"roles\": [\n           {\n               \"id\": \"a9f9609f-c173-4f48-a82d-ca88b0d62d0b\",\n               \"name\": \"customer\"\n           }\n       ]\n   },\n...\n]\n`}</code></pre>\n    <p>{`Let’s be good RESTful citizens and filter out the `}<inlineCode parentName=\"p\">{`password`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`passwordConfirm`}</inlineCode>{` fields on the way out.\nTo accomplish this we take advantage of the fact the Jackson is the default serializer in Spring Web which\nmean we can annotate the `}<inlineCode parentName=\"p\">{`User`}</inlineCode>{` class with the `}<inlineCode parentName=\"p\">{`@JsonIgnoreProperties`}</inlineCode>{` only allowing setters\n(so that we can load the data) but hiding the getters during serialization as shown next:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`@JsonIgnoreProperties(value = { \"password\", \"passwordConfirm\" }, allowSetters = true)\n@EqualsAndHashCode(onlyExplicitlyIncluded = true)\n@ToString(onlyExplicitlyIncluded = true)\n@Data\n@RedisHash\npublic class User {\n...\n}\n`}</code></pre>\n    <p>{`With the import statement:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n`}</code></pre>\n    <p>{`Issuing the request again should reflect the changes on the JSON response:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`[\n    {\n        \"id\": \"-1180251602608130769\",\n        \"name\": \"Denise Powell\",\n        \"email\": \"denise.powell@example.com\",\n        \"roles\": [\n            {\n                \"id\": \"a9f9609f-c173-4f48-a82d-ca88b0d62d0b\",\n                \"name\": \"customer\"\n            }\n        ]\n    },\n...\n]\n`}</code></pre>\n    <p>{`Let’s add one more method to our `}<inlineCode parentName=\"p\">{`UserController`}</inlineCode>{`. We’ll add the ability to retrieve a user by its email address,\nwhich will take advantage of the secondary index on email in the User object.\nWe’ll implement it as a filter on the GET root endpoint of the controller:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{` @GetMapping\n public Iterable<User> all(@RequestParam(defaultValue = \"\") String email) {\n   if (email.isEmpty()) {\n     return userRepository.findAll();\n   } else {\n     Optional<User> user = Optional.ofNullable(userRepository.findFirstByEmail(email));\n     return user.isPresent() ? List.of(user.get()) : Collections.emptyList();\n   }\n }\n`}</code></pre>\n    <p>{`We use a request parameter for the email, and if it is present, we invoke the `}<inlineCode parentName=\"p\">{`findFirstByEmail`}</inlineCode>{` finder.\nWe wrap the result in a list to match the result type of the method. We use Optional to handle a null\nresult from the finder.\nAnd don’t forget your imports:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import java.util.Collections;\nimport java.util.List;\nimport java.util.Optional;\nimport org.springframework.web.bind.annotation.RequestParam;\n`}</code></pre>\n    <p>{`Invoking the endpoint with curl:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location --request GET 'http://localhost:8080/api/users/?email=donald.gibson@example.com'\n`}</code></pre>\n    <p>{`Returns the expected result:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`[\n    {\n        \"id\": \"-1266125356844480724\",\n        \"name\": \"Donald Gibson\",\n        \"email\": \"donald.gibson@example.com\",\n        \"roles\": [\n            {\n                \"id\": \"a9f9609f-c173-4f48-a82d-ca88b0d62d0b\",\n                \"name\": \"customer\"\n            }\n        ]\n    }\n]\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}