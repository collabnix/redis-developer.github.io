{"remainingRequest":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/develop/java/spring/redis-and-spring-course/lesson_2/index-lesson_2.mdx","dependencies":[{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/develop/java/spring/redis-and-spring-course/lesson_2/index-lesson_2.mdx","mtime":1631077488444},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-develop-java-spring-redis-and-spring-course-lesson-2-index-lesson-2-mdx-1d1.json","mtime":1631077870284},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1631077703630},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/babel-loader/lib/index.js","mtime":1631077703341},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1631077777797},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1631077776334}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/develop/java/spring/redis-and-spring-course/lesson_2/index-lesson_2.mdx"],"names":["React","mdx","frontMatter","id","title","sidebar_label","slug","metadata","useBaseUrl","toc","value","children","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'index-lesson_2',\n\ttitle: 'Introducing Spring Data Redis',\n\tsidebar_label: 'Spring Data Redis',\n\tslug: '/develop/java/redis-and-spring-course/lesson_2'\n};\nexport const metadata = {\n  \"unversionedId\": \"develop/java/spring/redis-and-spring-course/lesson_2/index-lesson_2\",\n  \"id\": \"develop/java/spring/redis-and-spring-course/lesson_2/index-lesson_2\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Introducing Spring Data Redis\",\n  \"description\": \"Objectives\",\n  \"source\": \"@site/docs/develop/java/spring/redis-and-spring-course/lesson_2/index-lesson_2.mdx\",\n  \"slug\": \"/develop/java/redis-and-spring-course/lesson_2\",\n  \"permalink\": \"/develop/java/redis-and-spring-course/lesson_2\",\n  \"editUrl\": \"https://github.com/redis-developer/redis-developer/edit/master/docs/develop/java/spring/redis-and-spring-course/lesson_2/index-lesson_2.mdx\",\n  \"version\": \"current\",\n  \"sidebar_label\": \"Spring Data Redis\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"Spring and Redis: Up and Running\",\n    \"permalink\": \"/develop/java/redis-and-spring-course/lesson_1\"\n  },\n  \"next\": {\n    \"title\": \"Object Mapping & Redis Repositories\",\n    \"permalink\": \"/develop/java/redis-and-spring-course/lesson_3\"\n  }\n};\n  /* @jsxRuntime classic */\n/* @jsx mdx */\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nexport const toc = [{\n  value: 'Objectives',\n  id: 'objectives',\n  children: []\n}, {\n  value: 'Agenda',\n  id: 'agenda',\n  children: []\n}, {\n  value: 'Introducing Spring Data Redis',\n  id: 'introducing-spring-data-redis',\n  children: []\n}, {\n  value: 'Redis template',\n  id: 'redis-template',\n  children: []\n}, {\n  value: 'Using the redis template',\n  id: 'using-the-redis-template',\n  children: []\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3 {...{\n      \"id\": \"objectives\"\n    }}>{`Objectives`}</h3>\n    <p>{`Configure a RedisTemplate and learn how to access different operation bundles to read and write data to and from Redis in a Spring REST controller.`}</p>\n    <h3 {...{\n      \"id\": \"agenda\"\n    }}>{`Agenda`}</h3>\n    <p>{`In this lesson, students will learn:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`How to configure the connection to Redis from the application`}</li>\n      <li parentName=\"ul\">{`How to access and configure the Spring Data RedisTemplate`}</li>\n      <li parentName=\"ul\">{`How to use opsForXXX to read and write data to Redis`}</li>\n      <li parentName=\"ul\">{`The basis of Spring’s @RestController`}</li>\n    </ul>\n    <p>{`If you get stuck:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`The progress made in this lesson is available on the redi2read github repository at `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/redis-developer/redi2read/tree/course/milestone-2\"\n        }}>{`https://github.com/redis-developer/redi2read/tree/course/milestone-2`}</a></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"introducing-spring-data-redis\"\n    }}>{`Introducing Spring Data Redis`}</h3>\n    <p>{`Spring Data Redis provides the abstractions of the Spring Data platform to Redis.`}</p>\n    <ul>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Spring Data`}</strong>{` makes it easy to use data access technologies, relational and non-relational databases, map-reduce frameworks, and cloud-based data services.\nTo learn more about Spring Data, see `}<a parentName=\"li\" {...{\n          \"href\": \"https://spring.io/projects/spring-data\"\n        }}>{`https://spring.io/projects/spring-data`}</a>{`.`}</li>\n      <li parentName=\"ul\"><strong parentName=\"li\">{`Spring Data Redis`}</strong>{` provides access to Redis from Spring applications. It offers both low-level and high-level abstractions for interacting with Redis.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"redis-template\"\n    }}>{`Redis template`}</h3>\n    <p>{`We will start by configuring a RedisTemplate, a class that provides a thread-safe bridge between Spring and Redis Commands. It handles connection management, freeing the developer from opening and closing  Redis connections.`}</p>\n    <p>{`Start from the main application class, `}<inlineCode parentName=\"p\">{`Redi2readApplication`}</inlineCode>{`, located at `}<inlineCode parentName=\"p\">{`src/main/java/com/redislabs/edu/redi2read/Redi2readApplication.java`}</inlineCode>{`.`}</p>\n    <p>{`Add a `}<inlineCode parentName=\"p\">{`@Bean`}</inlineCode>{` annotated method called redisTemplate, which takes a `}<inlineCode parentName=\"p\">{`RedisConnectionFactory`}</inlineCode>{` and returns a `}<inlineCode parentName=\"p\">{`RedisTemplate`}</inlineCode>{`. This method will provide a configured bean of type `}<inlineCode parentName=\"p\">{`RedisTemplate`}</inlineCode>{` in the Spring container. We can inject this bean wherever we need to access Redis.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`@Bean\npublic RedisTemplate<?, ?> redisTemplate(RedisConnectionFactory connectionFactory) {\n  RedisTemplate<?, ?> template = new RedisTemplate<>();\n  template.setConnectionFactory(connectionFactory);\n\n  return template;\n}\n`}</code></pre>\n    <p>{`This requires the following imports:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import org.springframework.context.annotation.Bean;\nimport org.springframework.data.redis.connection.RedisConnectionFactory;\nimport org.springframework.data.redis.core.RedisTemplate;\n`}</code></pre>\n    <p>{`Notice that while the template types are generic, it is up to the serializers/deserializers to convert the given Objects to-and-from binary data correctly.`}</p>\n    <p>{`We could also configure the Redis host and port programmatically by defining a `}<inlineCode parentName=\"p\">{`@Bean`}</inlineCode>{` annotated method that returns a `}<inlineCode parentName=\"p\">{`RedisConnectionFactory`}</inlineCode>{` (either a `}<inlineCode parentName=\"p\">{`JedisConnectionFactory`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`LettuceConnectionFactory`}</inlineCode>{`) and use the `}<inlineCode parentName=\"p\">{`setHostName`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`setPort`}</inlineCode>{` methods.`}</p>\n    <p>{`But since Spring Data Redis can configure the beans using a properties file (either Java Properties or YAML), we will use the `}<inlineCode parentName=\"p\">{`applications.properties`}</inlineCode>{` file instead.`}</p>\n    <p>{`Spring Data Redis properties are prefixed with `}<inlineCode parentName=\"p\">{`spring.redis.`}</inlineCode>{`. In the file `}<inlineCode parentName=\"p\">{`src/main/resources/application.properties`}</inlineCode>{` add the following properties:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`spring.redis.host=localhost\nspring.redis.port=6379\n`}</code></pre>\n    <p>{`While we're at it, let’s also add an exclusion for the autoconfiguration of Spring Security. Since we’ve included the Maven dependency for Spring Security but have not yet configured it, Spring defaults on the safe side and protects all endpoints on the application. So, for now, we’ll disable security autoconfiguration until we decide to secure our services.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`spring.redis.host=localhost\nspring.redis.port=6379\nspring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"using-the-redis-template\"\n    }}>{`Using the redis template`}</h3>\n    <p>{`To test the RedisTemplate, we’ll create a REST controller and use it to  perform some operations against our Redis instance.`}</p>\n    <p>{`We will add the controller under the src/main/java/com/redislabs/edu/redi2read/controllers folder, which means it’ll live in the com.redislabs.edu.redi2read.controllers package.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`package com.redislabs.edu.redi2read.controllers;\n\npublic class HelloRedisController {\n\n}\n`}</code></pre>\n    <p>{`Next, let’s annotate the class with the `}<inlineCode parentName=\"p\">{`@RestController`}</inlineCode>{` and the `}<inlineCode parentName=\"p\">{`@RequestMapping`}</inlineCode>{` annotations. The controller will now listen to requests rooted at http://localhost:8080/api/redis.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`@RestController\n@RequestMapping(\"/api/redis\")\npublic class HelloRedisController {\n\n}\n`}</code></pre>\n    <p>{`Add the necessary import as shown next:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n`}</code></pre>\n    <p>{`Next, let’s inject an `}<inlineCode parentName=\"p\">{`@Autowired`}</inlineCode>{` instance of `}<inlineCode parentName=\"p\">{`RedisTemplate`}</inlineCode>{`. Notice that we will use concrete classes for the `}<inlineCode parentName=\"p\">{`K`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`V`}</inlineCode>{` parameter classes in `}<inlineCode parentName=\"p\">{`RedisTemplate<K,V>`}</inlineCode>{`. `}<inlineCode parentName=\"p\">{`K`}</inlineCode>{` is the Redis key type (usually a `}<inlineCode parentName=\"p\">{`String`}</inlineCode>{`) and `}<inlineCode parentName=\"p\">{`V`}</inlineCode>{`, the Redis value type (i.e., something that maps to a Redis data structure).`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`@RestController\n@RequestMapping(\"/api/redis\")\npublic class HelloRedisController {\n\n  @Autowired\n  private RedisTemplate<String, String> template;\n}\n`}</code></pre>\n    <p>{`Add the necessary import as shown next:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.data.redis.core.RedisTemplate;\n`}</code></pre>\n    <p>{`Now, all we need is a controller method to run some Redis commands. We will use the Redis SET command (`}<a parentName=\"p\" {...{\n        \"href\": \"https://redis.io/commands/set\"\n      }}>{`https://redis.io/commands/set`}</a>{`) as we previously demonstrated using the Redis CLI.`}</p>\n    <p>{`First, we’ll create a String that will serve to prefix the keys that we write to Redis:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`private static final String STRING_KEY_PREFIX = \"redi2read:strings:\";\n`}</code></pre>\n    <p>{`The method is annotated with the `}<inlineCode parentName=\"p\">{`@PostMapping`}</inlineCode>{` with a path of `}<inlineCode parentName=\"p\">{`/strings`}</inlineCode>{`, making the effective path for our post `}<inlineCode parentName=\"p\">{`/api/redis/strings`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`@Request`}</inlineCode>{` body and the return value of the method is a `}<inlineCode parentName=\"p\">{`Map.Entry<String, String>`}</inlineCode>{` which is convenient when dealing with name-value pairs.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`@PostMapping(\"/strings\")\n@ResponseStatus(HttpStatus.CREATED)\npublic Map.Entry<String, String> setString(@RequestBody Map.Entry<String, String> kvp) {\n  return kvp;\n}\n`}</code></pre>\n    <p>{`Add the necessary import as shown next:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.ResponseStatus;\n`}</code></pre>\n    <p>{`If we launch the application now with:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`./mvnw clean spring-boot:run\n`}</code></pre>\n    <p>{`We can use curl to invoke our `}<inlineCode parentName=\"p\">{`api/redis/strings`}</inlineCode>{` endpoint:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$ curl --location --request POST 'http://localhost:8080/api/redis/strings' \\\\\n  --header 'Content-Type: application/json' \\\\\n  --data-raw '{ \"database:redis:creator\": \"Salvatore Sanfilippo\" }'\n{\"database:redis:creator\":\"Salvatore Sanfilippo\"}\n`}</code></pre>\n    <p>{`This results in the JSON payload being echoed back. Let's complete the implementation of the setString method so that we can write a Redis string to the database:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`@PostMapping(\"/strings\")\n@ResponseStatus(HttpStatus.CREATED)\npublic Map.Entry<String, String> setString(@RequestBody Map.Entry<String, String> kvp) {\n  template.opsForValue().set(STRING_KEY_PREFIX + kvp.getKey(), kvp.getValue());\n\n  return kvp;\n}\n`}</code></pre>\n    <p>{`We will use the `}<inlineCode parentName=\"p\">{`RedisTemplate `}</inlineCode>{`instance template `}<inlineCode parentName=\"p\">{`opsForValue()`}</inlineCode>{` method to get an instance of `}<inlineCode parentName=\"p\">{`ValueOperations`}</inlineCode>{`, which provides methods to execute operations performed on simple values (or `}<inlineCode parentName=\"p\">{`Strings`}</inlineCode>{` in Redis terminology).\nThe Redis SET method is implemented using the (you guessed it!) `}<inlineCode parentName=\"p\">{`set()`}</inlineCode>{` method, which takes a key name and a value. We are prepending the KEY_SPACE_PREFIX to the key that's provided as an argument.\nBefore you fire up another curl request, let’s start a Redis CLI instance with the MONITOR flag so that we can watch what transpires when we hit the server.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$ redis-cli MONITOR\n`}</code></pre>\n    <p>{`Now, when you issue the POST request again, you should see output similar to:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`1617346602.221390 [0 172.19.0.1:58396] \"SET\" \"redi2read:strings:database:redis:creator\" \"Salvatore Sanfilippo\"\n`}</code></pre>\n    <p>{`We can launch another Redis CLI to query Redis ourselves:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`127.0.0.1:6379> KEYS *\n1) \"redi2read:strings:database:redis:creator\"\n127.0.0.1:6379> TYPE \"redi2read:strings:database:redis:creator\"\nstring\n127.0.0.1:6379> GET \"redi2read:strings:database:redis:creator\"\n\"Salvatore Sanfilippo\"\n127.0.0.1:6379>\n`}</code></pre>\n    <p>{`If we use the KEYS * command, we can see all of the keys stored in Redis (don’t do this on a production box with a lot of data,\nas you’ll block your Redis instance while serving a massive response).\nThe `}<inlineCode parentName=\"p\">{`redi2read:strings:database:redis:creator`}</inlineCode>{` key has been created, and it is a Redis String with a value of `}<inlineCode parentName=\"p\">{`Salvatore Sanfilipo`}</inlineCode>{`\nWe can now write strings to Redis through our REST controller.\nNext, let’s add a corresponding GET method to our controller to read string values:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`@GetMapping(\"/strings/{key}\")\npublic Map.Entry<String, String> getString(@PathVariable(\"key\") String key) {\n  String value = template.opsForValue().get(STRING_KEY_PREFIX + key);\n\n  if (value == null) {\n    throw new ResponseStatusException(HttpStatus.NOT_FOUND, \"key not found\");\n  }\n\n  return new SimpleEntry<String, String>(key, value);\n}\n`}</code></pre>\n    <p>{`With imports:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`import java.util.AbstractMap.SimpleEntry;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.server.ResponseStatusException;\n`}</code></pre>\n    <p>{`We can now issue a GET request to retrieve String keys:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`$ curl --location --request GET 'http://localhost:8080/api/redis/strings/database:redis:creator'\n{\"database:redis:creator\":\"Salvatore Sanfilippo\"}\n`}</code></pre>\n    <p>{`On the Redis CLI monitor you should see:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`1617347871.901585 [0 172.19.0.1:58284] \"GET\" \"redi2read:strings:database:redis:creator\"\n`}</code></pre>\n    <p>{`Note that in order to return an error on a key not found, we have to check the result for null and throw an appropriate exception.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`{\n  \"timestamp\": \"2021-04-02T07:45:10.303+00:00\",\n  \"status\": 404,\n  \"error\": \"Not Found\",\n  \"trace\": \"org.springframework.web.server.ResponseStatusException: 404...\\\\n\",\n  \"message\": \"key not found\",\n  \"path\": \"/api/redis/strings/database:neo4j:creator\"\n}\n`}</code></pre>\n    <p>{`Keep in mind that this is a “development time” exception, appropriate to be shown on an error page meant for developers.\nLikely, we would intercept this exception and create an API appropriate response (likely just the status and error fields above).`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}