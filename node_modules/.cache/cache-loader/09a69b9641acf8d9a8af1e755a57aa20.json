{"remainingRequest":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/develop/java/spring/redis-and-spring-course/lesson_5/index-lesson_5.mdx","dependencies":[{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/develop/java/spring/redis-and-spring-course/lesson_5/index-lesson_5.mdx","mtime":1631077488446},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-develop-java-spring-redis-and-spring-course-lesson-5-index-lesson-5-mdx-c1a.json","mtime":1631077870285},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1631077703630},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/babel-loader/lib/index.js","mtime":1631077703341},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1631077777797},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1631077776334}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/develop/java/spring/redis-and-spring-course/lesson_5/index-lesson_5.mdx"],"names":["React","mdx","frontMatter","id","title","sidebar_label","slug","metadata","useBaseUrl","toc","value","children","layoutProps","MDXLayout","MDXContent","components","props","require","default","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'index-lesson_5',\n\ttitle: 'Books, Categories & The Catalog',\n\tsidebar_label: 'Books, Categories & The Catalog',\n\tslug: '/develop/java/redis-and-spring-course/lesson_5'\n};\nexport const metadata = {\n  \"unversionedId\": \"develop/java/spring/redis-and-spring-course/lesson_5/index-lesson_5\",\n  \"id\": \"develop/java/spring/redis-and-spring-course/lesson_5/index-lesson_5\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Books, Categories & The Catalog\",\n  \"description\": \"Objectives\",\n  \"source\": \"@site/docs/develop/java/spring/redis-and-spring-course/lesson_5/index-lesson_5.mdx\",\n  \"slug\": \"/develop/java/redis-and-spring-course/lesson_5\",\n  \"permalink\": \"/develop/java/redis-and-spring-course/lesson_5\",\n  \"editUrl\": \"https://github.com/redis-developer/redis-developer/edit/master/docs/develop/java/spring/redis-and-spring-course/lesson_5/index-lesson_5.mdx\",\n  \"version\": \"current\",\n  \"sidebar_label\": \"Books, Categories & The Catalog\",\n  \"sidebar\": \"docs\",\n  \"previous\": {\n    \"title\": \"User/Roles & Secondary Indexes\",\n    \"permalink\": \"/develop/java/redis-and-spring-course/lesson_4\"\n  },\n  \"next\": {\n    \"title\": \"Domain Models with RedisJSON\",\n    \"permalink\": \"/develop/java/redis-and-spring-course/lesson_6\"\n  }\n};\n  /* @jsxRuntime classic */\n/* @jsx mdx */\nimport useBaseUrl from '@docusaurus/useBaseUrl';\nexport const toc = [{\n  value: 'Objectives',\n  id: 'objectives',\n  children: []\n}, {\n  value: 'Agenda',\n  id: 'agenda',\n  children: []\n}, {\n  value: 'Books, Categories, and Book Ratings',\n  id: 'books-categories-and-book-ratings',\n  children: []\n}, {\n  value: 'The Category Repository',\n  id: 'the-category-repository',\n  children: []\n}, {\n  value: 'The Book Model',\n  id: 'the-book-model',\n  children: []\n}, {\n  value: 'The Book Repository',\n  id: 'the-book-repository',\n  children: []\n}, {\n  value: 'The Book Rating Repository',\n  id: 'the-book-rating-repository',\n  children: []\n}, {\n  value: 'Loading Books',\n  id: 'loading-books',\n  children: []\n}, {\n  value: 'Book Controller',\n  id: 'book-controller',\n  children: []\n}, {\n  value: 'Get all Books',\n  id: 'get-all-books',\n  children: []\n}, {\n  value: 'Get a book by ISBN',\n  id: 'get-a-book-by-isbn',\n  children: []\n}, {\n  value: 'Get all Categories',\n  id: 'get-all-categories',\n  children: []\n}, {\n  value: 'Generate Book Ratings',\n  id: 'generate-book-ratings',\n  children: []\n}, {\n  value: 'Implementing Pagination with All Books',\n  id: 'implementing-pagination-with-all-books',\n  children: []\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h3 {...{\n      \"id\": \"objectives\"\n    }}>{`Objectives`}</h3>\n    <p>{`Create the Book-Category-Book-Ratings domain, load and transform JSON data, and implement the Books API.`}</p>\n    <h3 {...{\n      \"id\": \"agenda\"\n    }}>{`Agenda`}</h3>\n    <p>{`In this lesson, students will learn:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`How to load JSON data using Jackson`}</li>\n      <li parentName=\"ul\">{`How to create and work with secondary indexes`}</li>\n      <li parentName=\"ul\">{`How to use the repositories with a REST controller\nIf you get stuck:`}</li>\n      <li parentName=\"ul\">{`The progress made in this lesson is available on the redi2read github repository at `}<a parentName=\"li\" {...{\n          \"href\": \"https://github.com/redis-developer/redi2read/tree/course/milestone-5\"\n        }}>{`https://github.com/redis-developer/redi2read/tree/course/milestone-5`}</a></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"books-categories-and-book-ratings\"\n    }}>{`Books, Categories, and Book Ratings`}</h3>\n    <p>{`This lesson will start by fleshing out the Book, Category, and BookRating models with their respective Spring Repositories.`}</p>\n    <p><img alt={\"Books, Categories, and Book Ratings\"} src={require(\"!url-loader?limit=10000&name=assets/images/[name]-[hash].[ext]&fallback=file-loader!./images/books_categories_ratings.png\").default} /></p>\n    <h4 {...{\n      \"id\": \"the-category-model\"\n    }}>{`The Category Model`}</h4>\n    <p>{`We’ll start with the `}<inlineCode parentName=\"p\">{`Category`}</inlineCode>{`. A `}<inlineCode parentName=\"p\">{`Book`}</inlineCode>{` belongs to one or more categories. The `}<inlineCode parentName=\"p\">{`Category`}</inlineCode>{` has a name that we will derive from the JSON data\nfiles in `}<inlineCode parentName=\"p\">{`src/main/resources/data/books`}</inlineCode>{`. As we’ve done previously, we will map the class to a Redis Hash.\nAdd the file `}<inlineCode parentName=\"p\">{`src/main/java/com/redislabs/edu/redi2read/models/Category.java`}</inlineCode>{` with the following contents:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package com.redislabs.edu.redi2read.models;\n\nimport org.springframework.data.annotation.Id;\nimport org.springframework.data.redis.core.RedisHash;\n\nimport lombok.Builder;\nimport lombok.Data;\n\n@Data\n@Builder\n@RedisHash\npublic class Category {\n  @Id\n  private String id;\n  private String name;\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"the-category-repository\"\n    }}>{`The Category Repository`}</h3>\n    <p>{`The corresponding repository extends Spring’s CrudRepository. Add the file `}<inlineCode parentName=\"p\">{`src/main/java/com/redislabs/edu/redi2read/repositories/CategoryRepository.java`}</inlineCode>{` with the following contents:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package com.redislabs.edu.redi2read.repositories;\n\nimport com.redislabs.edu.redi2read.models.Category;\n\nimport org.springframework.data.repository.CrudRepository;\nimport org.springframework.stereotype.Repository;\n\n@Repository\npublic interface CategoryRepository extends CrudRepository<Category, String> {\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"the-book-model\"\n    }}>{`The Book Model`}</h3>\n    <p>{`The Book model maps directly to the JSON payload in the *.json files in `}<inlineCode parentName=\"p\">{`src/main/resources/data/books`}</inlineCode>{`.\nFor example, the JSON object shown below came from the the file redis_0.json:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`{\n   \"pageCount\": 228,\n   \"thumbnail\": \"http://books.google.com/books/content?id=NsseEAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api\",\n   \"price\": 9.95,\n   \"subtitle\": \"Explore Redis - Its Architecture, Data Structures and Modules like Search, JSON, AI, Graph, Timeseries (English Edition)\",\n   \"description\": \"Complete reference guide to Redis KEY FEATURES ● Complete coverage of Redis Modules.\",\n   \"language\": \"en\",\n   \"currency\": \"USD\",\n   \"id\": \"8194837766\",\n   \"title\": \"Redis(r) Deep Dive\",\n   \"infoLink\": \"https://play.google.com/store/books/details?id=NsseEAAAQBAJ&source=gbs_api\",\n   \"authors\": [\"Suyog Dilip Kale\", \"Chinmay Kulkarni\"]\n },\n...\n}\n`}</code></pre>\n    <p>{`The category name is extracted from the file name as \"redis\". The same applies to any book from the files: `}<inlineCode parentName=\"p\">{`redis_0.json`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`redis_1.json`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`redis_2.json`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`redis_3.json`}</inlineCode>{`.\nThe Book class contains a `}<inlineCode parentName=\"p\">{`Set<Category>`}</inlineCode>{` which will for now contain the single category extracted from the filename. The `}<inlineCode parentName=\"p\">{`Set<String>`}</inlineCode>{` for authors gets mapped from the \"authors\" JSON array in the payload.\nAdd the file `}<inlineCode parentName=\"p\">{`src/main/java/com/redislabs/edu/redi2read/repositories/Book.java`}</inlineCode>{` with the following contents:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package com.redislabs.edu.redi2read.models;\n\nimport java.util.HashSet;\nimport java.util.Set;\n\nimport org.springframework.data.annotation.Id;\nimport org.springframework.data.annotation.Reference;\nimport org.springframework.data.redis.core.RedisHash;\n\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\n\n@Data\n@EqualsAndHashCode(onlyExplicitlyIncluded = true)\n@RedisHash\npublic class Book {\n\n  @Id\n  @EqualsAndHashCode.Include\n  private String id;\n\n  private String title;\n  private String subtitle;\n  private String description;\n  private String language;\n  private Long pageCount;\n  private String thumbnail;\n  private Double price;\n  private String currency;\n  private String infoLink;\n\n  private Set<String> authors;\n\n  @Reference\n  private Set<Category> categories = new HashSet<Category>();\n\n  public void addCategory(Category category) {\n    categories.add(category);\n  }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"the-book-repository\"\n    }}>{`The Book Repository`}</h3>\n    <p>{`In the `}<inlineCode parentName=\"p\">{`BookRepository`}</inlineCode>{` we introduce the usage of the `}<inlineCode parentName=\"p\">{`PaginationAndSortingRepository`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`PaginationAndSortingRepository`}</inlineCode>{` extends the `}<inlineCode parentName=\"p\">{`CrudRepository`}</inlineCode>{` interface\nand adds additional methods to ease paginated access to entities.\nWe will learn more about the usage of the `}<inlineCode parentName=\"p\">{`PagingAndSortingRepository`}</inlineCode>{` when we implement the `}<inlineCode parentName=\"p\">{`BookController`}</inlineCode>{`.\nAdd the file `}<inlineCode parentName=\"p\">{`src/main/java/com/redislabs/edu/redi2read/repositories/BookRepository.java`}</inlineCode>{` with the following contents:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package com.redislabs.edu.redi2read.repositories;\n\nimport com.redislabs.edu.redi2read.models.Book;\n\nimport org.springframework.data.repository.PagingAndSortingRepository;\nimport org.springframework.stereotype.Repository;\n\n@Repository\npublic interface BookRepository extends PagingAndSortingRepository<Book, String> {\n}\n`}</code></pre>\n    <h4 {...{\n      \"id\": \"the-bookrating-model\"\n    }}>{`The BookRating Model`}</h4>\n    <p>{`The `}<inlineCode parentName=\"p\">{`BookRating`}</inlineCode>{` model represents a rating of a book by a user. We implement a traditional 5 star rating system as a many-to-many relationship.\nThe `}<inlineCode parentName=\"p\">{`BookRating`}</inlineCode>{` model plays a role equivalent to that of a joining table or bridging table in a relational model.\n`}<inlineCode parentName=\"p\">{`BookRating`}</inlineCode>{` sits between the two other entities of a many-to-many relationship. Its purpose is to store a record for each of the combinations\nof these other two entities (Book and User).\nWe keep the links to the Book and User models using the `}<inlineCode parentName=\"p\">{`@Reference`}</inlineCode>{` annotation (the equivalent of having foreign keys in a relational database)\nAdd the file `}<inlineCode parentName=\"p\">{`src/main/java/com/redislabs/edu/redi2read/models/BookRating.java`}</inlineCode>{` with the following contents:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package com.redislabs.edu.redi2read.models;\n\nimport javax.validation.constraints.NotNull;\n\nimport org.springframework.data.annotation.Id;\nimport org.springframework.data.annotation.Reference;\nimport org.springframework.data.redis.core.RedisHash;\n\nimport lombok.Builder;\nimport lombok.Data;\n\n@Data\n@Builder\n@RedisHash\npublic class BookRating {\n  @Id\n  private String id;\n\n  @NotNull\n  @Reference\n  private User user;\n\n  @NotNull\n  @Reference\n  private Book book;\n\n  @NotNull\n  private Integer rating;\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"the-book-rating-repository\"\n    }}>{`The Book Rating Repository`}</h3>\n    <p>{`The corresponding Repository simply extends Spring’s CrudRepository. Add the file `}<inlineCode parentName=\"p\">{`src/main/java/com/redislabs/edu/redi2read/repositories/BookRatingRepository.java`}</inlineCode>{` with the following contents:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package com.redislabs.edu.redi2read.repositories;\n\nimport com.redislabs.edu.redi2read.models.BookRating;\n\nimport org.springframework.data.repository.CrudRepository;\nimport org.springframework.stereotype.Repository;\n\n@Repository\npublic interface BookRatingRepository extends CrudRepository<BookRating, String> {\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"loading-books\"\n    }}>{`Loading Books`}</h3>\n    <p>{`Now that we have our models and repositories defined, let’s load the books from the provided JSON data in the `}<inlineCode parentName=\"p\">{`src/main/resources/data/books`}</inlineCode>{` directory.\nWe’ll create a `}<inlineCode parentName=\"p\">{`CommandLineRunner`}</inlineCode>{` to iterate over every .json file in the `}<inlineCode parentName=\"p\">{`data/books`}</inlineCode>{` directory.  We will map the content of each file to a Book object using Jackson.\nWe'll create a category using the characters in the filename up to the last underscore. If there is no category with that name already, we will create one.\nThe category is then added to the set of categories for the book.\nAdd the file `}<inlineCode parentName=\"p\">{`src/main/java/com/redislabs/edu/redi2read/boot/CreateBooks.java`}</inlineCode>{` with the following contents:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package com.redislabs.edu.redi2read.boot;\n\nimport java.io.File;\nimport java.io.FileInputStream;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\nimport java.util.stream.Collectors;\n\nimport com.fasterxml.jackson.core.type.TypeReference;\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport com.redislabs.edu.redi2read.models.Book;\nimport com.redislabs.edu.redi2read.models.Category;\nimport com.redislabs.edu.redi2read.repositories.BookRepository;\nimport com.redislabs.edu.redi2read.repositories.CategoryRepository;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.CommandLineRunner;\nimport org.springframework.core.annotation.Order;\nimport org.springframework.stereotype.Component;\n\nimport lombok.extern.slf4j.Slf4j;\n\n@Component\n@Order(3)\n@Slf4j\npublic class CreateBooks implements CommandLineRunner {\n  @Autowired\n  private BookRepository bookRepository;\n\n  @Autowired\n  private CategoryRepository categoryRepository;\n\n  @Override\n  public void run(String... args) throws Exception {\n    if (bookRepository.count() == 0) {\n    ObjectMapper mapper = new ObjectMapper();\n    TypeReference<List<Book>> typeReference = new TypeReference<List<Book>>() {\n    };\n\n    List<File> files = //\n        Files.list(Paths.get(getClass().getResource(\"/data/books\").toURI())) //\n            .filter(Files::isRegularFile) //\n            .filter(path -> path.toString().endsWith(\".json\")) //\n            .map(java.nio.file.Path::toFile) //\n            .collect(Collectors.toList());\n\n    Map<String, Category> categories = new HashMap<String, Category>();\n\n    files.forEach(file -> {\n          try {\n            log.info(\">>>> Processing Book File: \" + file.getPath());\n            String categoryName = file.getName().substring(0, file.getName().lastIndexOf(\"_\"));\n            log.info(\">>>> Category: \" + categoryName);\n\n            Category category;\n            if (!categories.containsKey(categoryName)) {\n            category = Category.builder().name(categoryName).build();\n            categoryRepository.save(category);\n            categories.put(categoryName, category);\n            } else {\n            category = categories.get(categoryName);\n            }\n\n            InputStream inputStream = new FileInputStream(file);\n            List<Book> books = mapper.readValue(inputStream, typeReference);\n            books.stream().forEach((book) -> {\n            book.addCategory(category);\n            bookRepository.save(book);\n            });\n            log.info(\">>>> \" + books.size() + \" Books Saved!\");\n          } catch (IOException e) {\n            log.info(\"Unable to import books: \" + e.getMessage());\n          }\n    });\n\n    log.info(\">>>> Loaded Book Data and Created books...\");\n    }\n  }\n}\n`}</code></pre>\n    <p>{`There's a lot to unpack here, so let’s take it from the top:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`As done previously, we only execute if there are no books in the repository.`}</li>\n      <li parentName=\"ul\">{`We use Jackson `}<inlineCode parentName=\"li\">{`ObjectMapper`}</inlineCode>{` and a `}<inlineCode parentName=\"li\">{`TypeReference `}</inlineCode>{`to perform the mapping.`}</li>\n      <li parentName=\"ul\">{`We collect the paths of all the files with the .json extension in the target directory.`}</li>\n      <li parentName=\"ul\">{`We create a `}<inlineCode parentName=\"li\">{`Map`}</inlineCode>{` of `}<inlineCode parentName=\"li\">{`String`}</inlineCode>{`s to `}<inlineCode parentName=\"li\">{`Category `}</inlineCode>{`objects to collect the categories as we process\nthe files and quickly determine whether we have already created a category.`}</li>\n      <li parentName=\"ul\">{`For each book, we assign the category and save it to Redis.`}</li>\n    </ul>\n    <h3 {...{\n      \"id\": \"book-controller\"\n    }}>{`Book Controller`}</h3>\n    <p>{`Now we can implement the initial version of the `}<inlineCode parentName=\"p\">{`BookController`}</inlineCode>{`: our Bookstore Catalog API. This first version of the `}<inlineCode parentName=\"p\">{`BookController`}</inlineCode>{`\nwill have three endpoints:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Get all books`}</li>\n      <li parentName=\"ul\">{`Get a book by ISBN (id)`}</li>\n      <li parentName=\"ul\">{`Get all categories\nAdd the file `}<inlineCode parentName=\"li\">{`src/main/java/com/redislabs/edu/redi2read/controllers/BookController.java`}</inlineCode>{` with the following contents:`}</li>\n    </ul>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package com.redislabs.edu.redi2read.controllers;\n\nimport com.redislabs.edu.redi2read.models.Book;\nimport com.redislabs.edu.redi2read.models.Category;\nimport com.redislabs.edu.redi2read.repositories.BookRepository;\nimport com.redislabs.edu.redi2read.repositories.CategoryRepository;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\n@RequestMapping(\"/api/books\")\npublic class BookController {\n  @Autowired\n  private BookRepository bookRepository;\n\n  @Autowired\n  private CategoryRepository categoryRepository;\n\n  @GetMapping\n  public Iterable<Book> all() {\n    return bookRepository.findAll();\n  }\n\n  @GetMapping(\"/categories\")\n  public Iterable<Category> getCategories() {\n    return categoryRepository.findAll();\n  }\n\n  @GetMapping(\"/{isbn}\")\n  public Book get(@PathVariable(\"isbn\") String isbn) {\n    return bookRepository.findById(isbn).get();\n  }\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"get-all-books\"\n    }}>{`Get all Books`}</h3>\n    <p>{`To get all books, we issue a GET request to `}<inlineCode parentName=\"p\">{`http://localhost:8080/api/books/`}</inlineCode>{`. This endpoint is implemented in the all method, which calls the BookRepository findAll method. Using curl:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location --request GET 'http://localhost:8080/api/books/'\n`}</code></pre>\n    <p>{`The result is an array of JSON objects containing the books:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`[\n    {\n        \"id\": \"1783980117\",\n        \"title\": \"RESTful Java Web Services Security\",\n        \"subtitle\": null,\n        \"description\": \"A sequential and easy-to-follow guide which allows you to understand the concepts related to securing web apps/services quickly and efficiently, since each topic is explained and described with the help of an example and in a step-by-step manner, helping you to easily implement the examples in your own projects. This book is intended for web application developers who use RESTful web services to power their websites. Prior knowledge of RESTful is not mandatory, but would be advisable.\",\n        \"language\": \"en\",\n        \"pageCount\": 144,\n        \"thumbnail\": \"http://books.google.com/books/content?id=Dh8ZBAAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api\",\n        \"price\": 11.99,\n        \"currency\": \"USD\",\n        \"infoLink\": \"https://play.google.com/store/books/details?id=Dh8ZBAAAQBAJ&source=gbs_api\",\n        \"authors\": [\n            \"Andrés Salazar C.\",\n            \"René Enríquez\"\n        ],\n        \"categories\": [\n            {\n                \"id\": \"f2ada1e2-7c18-4d90-bfe7-e321b650c0a3\",\n                \"name\": \"redis\"\n            }\n        ]\n    },\n...\n]\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"get-a-book-by-isbn\"\n    }}>{`Get a book by ISBN`}</h3>\n    <p>{`To get a specific book, we issue a GET request to `}<inlineCode parentName=\"p\">{`http://localhost:8080/api/books/{isbn}`}</inlineCode>{`. This endpoint is implemented in the get method, which calls the BookRepository findById method. Using curl:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location --request GET 'http://localhost:8080/api/books/1680503545'\n`}</code></pre>\n    <p>{`The result is a JSON object containing the book:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"id\": \"1680503545\",\n    \"title\": \"Functional Programming in Java\",\n    \"subtitle\": \"Harnessing the Power Of Java 8 Lambda Expressions\",\n    \"description\": \"Intermediate level, for programmers fairly familiar with Java, but new to the functional style of programming and lambda expressions. Get ready to program in a whole new way. ...\",\n    \"language\": \"en\",\n    \"pageCount\": 196,\n    \"thumbnail\": \"http://books.google.com/books/content?id=_g5QDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api\",\n    \"price\": 28.99,\n    \"currency\": \"USD\",\n    \"infoLink\": \"https://play.google.com/store/books/details?id=_g5QDwAAQBAJ&source=gbs_api\",\n    \"authors\": [\n        \"Venkat Subramaniam\"\n    ],\n    \"categories\": [\n        {\n            \"id\": \"9d5c025e-bf38-4b50-a971-17e0b7408385\",\n            \"name\": \"java\"\n        }\n    ]\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"get-all-categories\"\n    }}>{`Get all Categories`}</h3>\n    <p>{`To get all categories, we issue a GET request to `}<inlineCode parentName=\"p\">{`http://localhost:8080/api/books/categories`}</inlineCode>{`. It’s implemented in the `}<inlineCode parentName=\"p\">{`getCategories`}</inlineCode>{` method, which calls the `}<inlineCode parentName=\"p\">{`CategoriesRepository`}</inlineCode>{` `}<inlineCode parentName=\"p\">{`findAll`}</inlineCode>{` method. Using curl:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location --request GET 'http://localhost:8080/api/books/categories'\n`}</code></pre>\n    <p>{`The result is an array of JSON objects containing the categories:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`[\n    {\n        \"id\": \"2fd916fe-7ff8-44c7-9f86-ca388565256c\",\n        \"name\": \"mongodb\"\n    },\n    {\n        \"id\": \"9615a135-7472-48fc-b8ac-a5516a2c8b22\",\n        \"name\": \"dynamodb\"\n    },\n    {\n        \"id\": \"f2ada1e2-7c18-4d90-bfe7-e321b650c0a3\",\n        \"name\": \"redis\"\n    },\n    {\n        \"id\": \"08fc8148-d924-4d2e-af7e-f5fe6f2861f0\",\n        \"name\": \"elixir\"\n    },\n    {\n        \"id\": \"b6a0b57b-ebb8-4d98-9352-8236256dbc27\",\n        \"name\": \"microservices\"\n    },\n    {\n        \"id\": \"7821fd6a-ec94-4ac6-8089-a480a7c7f2ee\",\n        \"name\": \"elastic_search\"\n    },\n    {\n        \"id\": \"f2be1bc3-1700-45f5-a300-2c4cf2f90583\",\n        \"name\": \"hbase\"\n    },\n    {\n        \"id\": \"31c8ea64-cad2-40d9-b0f6-30b8ea6fcbfb\",\n        \"name\": \"reactjs\"\n    },\n    {\n        \"id\": \"5e527af7-93a1-4c00-8f20-f89e89a213e8\",\n        \"name\": \"apache_spark\"\n    },\n    {\n        \"id\": \"9d5c025e-bf38-4b50-a971-17e0b7408385\",\n        \"name\": \"java\"\n    },\n    {\n        \"id\": \"bcb2a01c-9b0a-4846-b1be-670168b5d768\",\n        \"name\": \"clojure\"\n    },\n    {\n        \"id\": \"aba53bb9-7cfa-4b65-8900-8c7e857311c6\",\n        \"name\": \"couchbase\"\n    },\n    {\n        \"id\": \"bd1b2877-1564-4def-b3f7-18871165ff10\",\n        \"name\": \"riak\"\n    },\n    {\n        \"id\": \"47d9a769-bbc2-4068-b27f-2b800bec1565\",\n        \"name\": \"kotlin\"\n    },\n    {\n        \"id\": \"400c8f5a-953b-4b8b-b21d-045535d8084d\",\n        \"name\": \"nosql_big_data\"\n    },\n    {\n        \"id\": \"06bc25ff-f2ab-481b-a4d9-819552dea0e0\",\n        \"name\": \"javascript\"\n    }\n]\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"generate-book-ratings\"\n    }}>{`Generate Book Ratings`}</h3>\n    <p>{`Next, we will create a random set of book ratings. Later in the course, we’ll use these for an example. Following the same recipe we used to seed Redis with a `}<inlineCode parentName=\"p\">{`CommandLineRunner`}</inlineCode>{`, add the file `}<inlineCode parentName=\"p\">{`src/main/java/com/redislabs/edu/redi2read/boot/CreateBookRatings.java`}</inlineCode>{` with the following contents:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`package com.redislabs.edu.redi2read.boot;\n\nimport java.util.Random;\nimport java.util.stream.IntStream;\n\nimport com.redislabs.edu.redi2read.models.Book;\nimport com.redislabs.edu.redi2read.models.BookRating;\nimport com.redislabs.edu.redi2read.models.User;\nimport com.redislabs.edu.redi2read.repositories.BookRatingRepository;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.beans.factory.annotation.Value;\nimport org.springframework.boot.CommandLineRunner;\nimport org.springframework.core.annotation.Order;\nimport org.springframework.data.redis.core.RedisTemplate;\nimport org.springframework.stereotype.Component;\n\nimport lombok.extern.slf4j.Slf4j;\n\n@Component\n@Order(4)\n@Slf4j\npublic class CreateBookRatings implements CommandLineRunner {\n\n  @Value(\"\\${app.numberOfRatings}\")\n  private Integer numberOfRatings;\n\n  @Value(\"\\${app.ratingStars}\")\n  private Integer ratingStars;\n\n  @Autowired\n  private RedisTemplate<String, String> redisTemplate;\n\n  @Autowired\n  private BookRatingRepository bookRatingRepo;\n\n  @Override\n  public void run(String... args) throws Exception {\n    if (bookRatingRepo.count() == 0) {\n    Random random = new Random();\n    IntStream.range(0, numberOfRatings).forEach(n -> {\n          String bookId = redisTemplate.opsForSet().randomMember(Book.class.getName());\n          String userId = redisTemplate.opsForSet().randomMember(User.class.getName());\n          int stars = random.nextInt(ratingStars) + 1;\n\n          User user = new User();\n          user.setId(userId);\n\n          Book book = new Book();\n          book.setId(bookId);\n\n          BookRating rating = BookRating.builder() //\n            .user(user) //\n            .book(book) //\n            .rating(stars).build();\n          bookRatingRepo.save(rating);\n    });\n\n    log.info(\">>>> BookRating created...\");\n    }\n  }\n}\n`}</code></pre>\n    <p>{`This `}<inlineCode parentName=\"p\">{`CommandLineRunner`}</inlineCode>{` creates a configurable number of random ratings for a random set of books and users. We use `}<inlineCode parentName=\"p\">{`RedisTemplate.opsForSet().randomMember()`}</inlineCode>{` to request a random ID from the set of users and books.\nThen we choose a random integer between 1 and the total number of stars in our rating system to create the rating.\nThis class introduces the use of the `}<inlineCode parentName=\"p\">{`@Value`}</inlineCode>{` annotation, which will grab the property inside the String param `}<inlineCode parentName=\"p\">{`\\${foo}`}</inlineCode>{` from the application’s property file.\nIn the file `}<inlineCode parentName=\"p\">{`src/main/resources/application.properties`}</inlineCode>{` add the following values:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`app.numberOfRatings=5000\napp.ratingStars=5\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"implementing-pagination-with-all-books\"\n    }}>{`Implementing Pagination with All Books`}</h3>\n    <p>{`Pagination is helpful when we have a large dataset and want to present it to the user in smaller chunks. As we learned earlier in the lesson, the `}<inlineCode parentName=\"p\">{`BookRepository `}</inlineCode>{`extends the `}<inlineCode parentName=\"p\">{`PagingAndSortingRepository`}</inlineCode>{`, which is built on top of the `}<inlineCode parentName=\"p\">{`CrudRepository`}</inlineCode>{`.\nIn this section, we will refactor the `}<inlineCode parentName=\"p\">{`BookController`}</inlineCode>{` all method to work with the pagination features of the `}<inlineCode parentName=\"p\">{`PagingAndSortingRepository`}</inlineCode>{`. Replace the previously created all method with the following contents:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`  @GetMapping\n  public ResponseEntity<Map<String, Object>> all( //\n    @RequestParam(defaultValue = \"0\") Integer page, //\n    @RequestParam(defaultValue = \"10\") Integer size //\n  ) {\n    Pageable paging = PageRequest.of(page, size);\n    Page<Book> pagedResult = bookRepository.findAll(paging);\n    List<Book> books = pagedResult.hasContent() ? pagedResult.getContent() : Collections.emptyList();\n\n    Map<String, Object> response = new HashMap<>();\n    response.put(\"books\", books);\n    response.put(\"page\", pagedResult.getNumber());\n    response.put(\"pages\", pagedResult.getTotalPages());\n    response.put(\"total\", pagedResult.getTotalElements());\n\n    return new ResponseEntity<>(response, new HttpHeaders(), HttpStatus.OK);\n  }\n`}</code></pre>\n    <p>{`Let’s break down the refactoring:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`We want to control the method return value so we’ll use a `}<inlineCode parentName=\"li\">{`ResponseEntity`}</inlineCode>{`, which is an extension of `}<inlineCode parentName=\"li\">{`HttpEntity`}</inlineCode>{` and gives us control over the HTTP status code, headers, and body.`}</li>\n      <li parentName=\"ul\">{`For the return type, we wrap a `}<inlineCode parentName=\"li\">{`Map<String,Object>`}</inlineCode>{` to return the collection of books as well as pagination data.`}</li>\n      <li parentName=\"ul\">{`We’ve added two request parameters (HTTP query params) of type integer for the page number being retrieved and the size of the page.\nThe page number defaults to 0 and the size of the page defaults to 10.`}</li>\n      <li parentName=\"ul\">{`In the body of the method, we use the `}<inlineCode parentName=\"li\">{`Pageable`}</inlineCode>{` and `}<inlineCode parentName=\"li\">{`PageRequest`}</inlineCode>{` abstractions to construct the paging request.`}</li>\n      <li parentName=\"ul\">{`We get a `}<inlineCode parentName=\"li\">{`Page<Book>`}</inlineCode>{` result by invoking the `}<inlineCode parentName=\"li\">{`findAll`}</inlineCode>{` method, passing the `}<inlineCode parentName=\"li\">{`Pageable`}</inlineCode>{` paging request.`}</li>\n      <li parentName=\"ul\">{`If the returned page contains any items, we add them to the response object. Otherwise, we add an empty list.`}</li>\n      <li parentName=\"ul\">{`The response is constructed by instantiating a Map and adding the books, current page, total number of pages, and total number of books.`}</li>\n      <li parentName=\"ul\">{`Finally we package the response map into a `}<inlineCode parentName=\"li\">{`ResponseEntity`}</inlineCode>{`.`}</li>\n    </ul>\n    <p>{`Let’s fire up a pagination request with curl as shown next:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`curl --location --request GET 'http://localhost:8080/api/books/?size=25&page=2'\n`}</code></pre>\n    <p>{`Passing a page size of 25 and requesting page number 2, we get the following:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-json\"\n      }}>{`{\n    \"total\": 2403,\n    \"books\": [\n        {\n            \"id\": \"1786469960\",\n            \"title\": \"Data Visualization with D3 4.x Cookbook\",\n            \"subtitle\": null,\n            \"description\": \"Discover over 65 recipes to help you create breathtaking data visualizations using the latest features of D3...\",\n            \"language\": \"en\",\n            \"pageCount\": 370,\n            \"thumbnail\": \"http://books.google.com/books/content?id=DVQoDwAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api\",\n            \"price\": 22.39,\n            \"currency\": \"USD\",\n            \"infoLink\": \"https://play.google.com/store/books/details?id=DVQoDwAAQBAJ&source=gbs_api\",\n            \"authors\": [\n                \"Nick Zhu\"\n            ],\n            \"categories\": [\n                {\n                    \"id\": \"f2ada1e2-7c18-4d90-bfe7-e321b650c0a3\",\n                    \"name\": \"redis\"\n                }\n            ]\n        },\n        {\n            \"id\": \"111871735X\",\n            \"title\": \"Android Programming\",\n            \"subtitle\": \"Pushing the Limits\",\n            \"description\": \"Unleash the power of the Android OS and build the kinds ofbrilliant, innovative apps users love to use ...\",\n            \"language\": \"en\",\n            \"pageCount\": 432,\n            \"thumbnail\": \"http://books.google.com/books/content?id=SUWPAQAAQBAJ&printsec=frontcover&img=1&zoom=1&edge=curl&source=gbs_api\",\n            \"price\": 30.0,\n            \"currency\": \"USD\",\n            \"infoLink\": \"https://play.google.com/store/books/details?id=SUWPAQAAQBAJ&source=gbs_api\",\n            \"authors\": [\n                \"Erik Hellman\"\n            ],\n            \"categories\": [\n                {\n                    \"id\": \"47d9a769-bbc2-4068-b27f-2b800bec1565\",\n                    \"name\": \"kotlin\"\n                }\n            ]\n        },\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}