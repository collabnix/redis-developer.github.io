{"remainingRequest":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/guides/security/how-to-use-tls-with-redis-enterprise/how-to-use-ssl-tls-with-redis-enterprise.mdx","dependencies":[{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/guides/security/how-to-use-tls-with-redis-enterprise/how-to-use-ssl-tls-with-redis-enterprise.mdx","mtime":1631077488783},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-guides-security-how-to-use-tls-with-redis-enterprise-how-to-use-ssl-tls-with-redis-enterprise-mdx-e49.json","mtime":1631077870286},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/cache-loader/dist/cjs.js","mtime":1631077703630},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/babel-loader/lib/index.js","mtime":1631077703341},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1631077777797},{"path":"/Users/ajeetraina/projects/8sep/redis-developer.github.io/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1631077776334}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/ajeetraina/projects/8sep/redis-developer.github.io/docs/guides/security/how-to-use-tls-with-redis-enterprise/how-to-use-ssl-tls-with-redis-enterprise.mdx"],"names":["React","mdx","frontMatter","id","title","slug","description","keywords","metadata","toc","value","children","layoutProps","MDXLayout","MDXContent","components","props","require","default","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'how-to-use-ssl-tls-with-redis-enterprise',\n\ttitle: 'How to Use SSL/TLS With Redis Enterprise',\n\tslug: '/guide/security/how-to-use-ssl-tls-with-redis-enterprise/',\n\tdescription: 'Learn how to secure your Redis databases using SSL',\n\tkeywords: [\n\t\t'java',\n\t\t'node.js',\n\t\t'python',\n\t\t'ssl',\n\t\t'tls'\n\t]\n};\nexport const metadata = {\n  \"unversionedId\": \"guides/security/how-to-use-tls-with-redis-enterprise/how-to-use-ssl-tls-with-redis-enterprise\",\n  \"id\": \"guides/security/how-to-use-tls-with-redis-enterprise/how-to-use-ssl-tls-with-redis-enterprise\",\n  \"isDocsHomePage\": false,\n  \"title\": \"How to Use SSL/TLS With Redis Enterprise\",\n  \"description\": \"Learn how to secure your Redis databases using SSL\",\n  \"source\": \"@site/docs/guides/security/how-to-use-tls-with-redis-enterprise/how-to-use-ssl-tls-with-redis-enterprise.mdx\",\n  \"slug\": \"/guide/security/how-to-use-ssl-tls-with-redis-enterprise/\",\n  \"permalink\": \"/guide/security/how-to-use-ssl-tls-with-redis-enterprise/\",\n  \"editUrl\": \"https://github.com/redis-developer/redis-developer/edit/master/docs/guides/security/how-to-use-tls-with-redis-enterprise/how-to-use-ssl-tls-with-redis-enterprise.mdx\",\n  \"version\": \"current\"\n};\n  /* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const toc = [{\n  value: '1- Get the Certificate from Redis Cluster',\n  id: '1--get-the-certificate-from-redis-cluster',\n  children: []\n}, {\n  value: '2- Generate a New Client Certificate',\n  id: '2--generate-a-new-client-certificate',\n  children: []\n}, {\n  value: '3- Configure the Redis Database',\n  id: '3--configure-the-redis-database',\n  children: []\n}, {\n  value: '4- Connect to the Database using the Certificate',\n  id: '4--connect-to-the-database-using-the-certificate',\n  children: [{\n    value: '4.1 Using Redis-CLI',\n    id: '41-using-redis-cli',\n    children: []\n  }, {\n    value: '4.2 Using Python',\n    id: '42-using-python',\n    children: []\n  }, {\n    value: '4.3 Using Node.JS',\n    id: '43-using-nodejs',\n    children: []\n  }, {\n    value: '4.4 Using Java',\n    id: '44-using-java',\n    children: []\n  }]\n}, {\n  value: 'Conclusion',\n  id: 'conclusion',\n  children: []\n}];\n\nconst layoutProps = {\n  toc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p><img alt={\"Header\"} src={require(\"!url-loader?limit=10000&name=assets/images/[name]-[hash].[ext]&fallback=file-loader!/Users/ajeetraina/projects/8sep/redis-developer.github.io/static/img/guides/security/how-to-use-tls-with-redis-enterprise/000_header.jpeg\").default} /></p>\n    <ul>\n      <li parentName=\"ul\">{`Date: 19-JAN-2021`}</li>\n      <li parentName=\"ul\">{`Author: `}<a parentName=\"li\" {...{\n          \"href\": \"https://twitter.com/tgrall\"\n        }}>{`Tug Grall`}</a></li>\n    </ul>\n    <p>{`In this article, I will explain how to secure your Redis databases using SSL (Secure Sockets Layer). In production, it is a good practice to use SSL to protect the data that are moving between various computers (client applications and Redis servers). Transport Level Security (TLS) guarantees that only allowed applications/computers are connected to the database, and also that data is not viewed or altered by a middle man process.`}</p>\n    <p>{`You can secure the connections between your client applications and Redis cluster using:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`One-Way SSL: the client (your application) get the certificate from the server (Redis cluster), validate it, and then all communications are encrypted`}</li>\n      <li parentName=\"ul\">{`Two-Way SSL: (aka mutual SSL) here both the client and the server authenticate each other and validate that both ends are trusted.`}</li>\n    </ul>\n    <p>{`In this article, I will focus on the Two-Way SSL, and using Redis Enterprise.`}</p>\n    <p>{`Prerequisites:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`A Redis Enterprise 6.0.x database, (my database is protected by the password `}<inlineCode parentName=\"li\">{`secretdb01`}</inlineCode>{`, and listening on port `}<inlineCode parentName=\"li\">{`12000`}</inlineCode>{`)`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`redis-cli`}</inlineCode>{` to run basic commands`}</li>\n      <li parentName=\"ul\">{`Python, Node, and Java installed if you want to test various languages.`}</li>\n    </ul>\n    <p><strong parentName=\"p\">{`Simple  Test`}</strong></p>\n    <p>{`Let's make sure that the database is available:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`redis-cli -p 12000 -a secretdb01 INFO SERVER\n`}</code></pre>\n    <p>{`This should print the Server information.`}</p>\n    <h2 {...{\n      \"id\": \"1--get-the-certificate-from-redis-cluster\"\n    }}>{`1- Get the Certificate from Redis Cluster`}</h2>\n    <p>{`You have access to the Redis Enterprise Cluster, you go to one of the nodes to retrieve the certificate (that is a self-generated one by default).`}</p>\n    <p>{`The cluster certificate is located at: `}<inlineCode parentName=\"p\">{`/etc/opt/redislabs/proxy_cert.pem`}</inlineCode>{`.`}</p>\n    <p>{`You have to copy it on each client machine; note that once it is done you can use this certificate to connect using \"One-Way SSL\", but not the purpose of this article.`}</p>\n    <p>{`In my demonstration I am using Docker and copy the certificate using this command from my host:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`docker cp redis-node1:/etc/opt/redislabs/proxy_cert.pem ./certificates\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"2--generate-a-new-client-certificate\"\n    }}>{`2- Generate a New Client Certificate`}</h2>\n    <p>{`Using the Two-Way SSL you need to have a certificate for the client that will be used by Redis database proxy to trust the client.`}</p>\n    <p>{`In this article I will use a self-signed certificate using OpenSSL, in this example, we are creating a certificate for an application named `}<inlineCode parentName=\"p\">{`app_001`}</inlineCode>{`.`}</p>\n    <p>{`You can create as many certificates as you want, or reuse this one for all servers/applications.`}</p>\n    <p>{`Open a terminal and run the following commands:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`\nopenssl req \\\\\n  -nodes \\\\\n -newkey rsa:2048 \\\\\n -keyout client_key_app_001.pem \\\\\n -x509 \\\\\n -days 36500 \\\\\n -out client_cert_app_001.pem\n\n`}</code></pre>\n    <p>{`This command generate a new client key (`}<inlineCode parentName=\"p\">{`client_key_001.pem`}</inlineCode>{`) and certificate (`}<inlineCode parentName=\"p\">{`client_cert_001.pem`}</inlineCode>{`) with no passphrase.`}</p>\n    <h2 {...{\n      \"id\": \"3--configure-the-redis-database\"\n    }}>{`3- Configure the Redis Database`}</h2>\n    <p>{`The next step is to take the certificate and add it to the database you want to protect. `}</p>\n    <p>{`Let's copy the certificate and paste it into the Redis Enterprise Web Console.`}</p>\n    <p>{`Copy the certificate in your clipboard:`}</p>\n    <p>{`Mac:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`pbcopy < client_cert_app_001.pem\n`}</code></pre>\n    <p>{`Linux:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{` xclip -sel clip < client_cert_app_001.pem\n`}</code></pre>\n    <p>{`Windows:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`clip < client_cert_app_001.pem\n`}</code></pre>\n    <p>{`Go to the Redis Enterprise Admin Web Console and enable TLS on your database:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Edit the database configuration`}</li>\n      <li parentName=\"ol\">{`Check TLS`}</li>\n      <li parentName=\"ol\">{`Select \"Require TLS for All communications\"`}</li>\n      <li parentName=\"ol\">{`Check \"Enforce client authentication\"`}</li>\n      <li parentName=\"ol\">{`Paste the certificate in the text area`}</li>\n      <li parentName=\"ol\">{`Click the Save button to save the certificate`}</li>\n      <li parentName=\"ol\">{`Click the Update button to save the configuration.`}</li>\n    </ol>\n    <p><img alt={\"Security Configuration\"} src={require(\"!url-loader?limit=10000&name=assets/images/[name]-[hash].[ext]&fallback=file-loader!/Users/ajeetraina/projects/8sep/redis-developer.github.io/static/img/guides/security/how-to-use-tls-with-redis-enterprise/001-tls-configuration.png\").default} /></p>\n    <p>{`The database is now protected, and it is mandatory to use the SSL certificate to connect to it.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`redis-cli -p 12000 -a secretdb01 INFO SERVER\n(error) ERR unencrypted connection is prohibited\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"4--connect-to-the-database-using-the-certificate\"\n    }}>{`4- Connect to the Database using the Certificate`}</h2>\n    <p>{`In all following examples, I am using a \"self-signed\" certificate, so I do not check the validity of the hostname.\nYou should adapt the connections/TLS information based on your certificate configuration.`}</p>\n    <h3 {...{\n      \"id\": \"41-using-redis-cli\"\n    }}>{`4.1 Using Redis-CLI`}</h3>\n    <p>{`To connect to a SSL protected database using `}<inlineCode parentName=\"p\">{`redis-cli`}</inlineCode>{` you have to use `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.stunnel.org/index.html\"\n      }}><inlineCode parentName=\"a\">{`stunnel`}</inlineCode></a>{`.`}</p>\n    <p>{`Create a `}<inlineCode parentName=\"p\">{`stunnel.conf`}</inlineCode>{` file with the following content:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`cert = /path_to/certificates/client_cert_app_001.pem\nkey = /path_to/certificates/client_key_app_001.pem\ncafile = /path_to/certificates/proxy_cert.pem\nclient = yes\n\n[redislabs]\naccept = 127.0.0.1:6380\nconnect = 127.0.0.1:12000\n\n`}</code></pre>\n    <p>{`Start stunnel using the command`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`stunnel ./stunnel.conf\n`}</code></pre>\n    <p>{`This will start a process that listen to port `}<inlineCode parentName=\"p\">{`6380`}</inlineCode>{` and used as a proxy to the Redis Enterprise database on port `}<inlineCode parentName=\"p\">{`12000`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`redis-cli -p 6380 -a secretdb01 INFO SERVER\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"42-using-python\"\n    }}>{`4.2 Using Python`}</h3>\n    <p>{`Using Python, you have to set the SSL connection parameters:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-python\"\n      }}>{`#!/usr/local/bin/python3\n\nimport redis\nimport pprint\n\ntry:\n  r = redis.StrictRedis(\n    password='secretdb01',\n    decode_responses=True,\n    host='localhost',\n    port=12000,\n    ssl=True, \n    ssl_keyfile='./client_key_app_001.pem', \n    ssl_certfile='./client_cert_app_001.pem', \n    ssl_cert_reqs='required', \n    ssl_ca_certs='./proxy_cert.pem',\n    )\n\n  info = r.info()\n  pprint.pprint(info)\n\nexcept Exception as err:\n  print(\"Error connecting to Redis: {}\".format(err))\n`}</code></pre>\n    <p>{`More information in the documentation \"`}<a parentName=\"p\" {...{\n        \"href\": \"https://redislabs.com/lp/python-redis/\"\n      }}>{`Using Redis with Python`}</a>{`\".`}</p>\n    <h3 {...{\n      \"id\": \"43-using-nodejs\"\n    }}>{`4.3 Using Node.JS`}</h3>\n    <p>{`For `}<a parentName=\"p\" {...{\n        \"href\": \"http://redis.js.org/\"\n      }}>{`Node Redis`}</a>{`, use the `}<a parentName=\"p\" {...{\n        \"href\": \"https://nodejs.org/api/tls.html\"\n      }}>{`TLS`}</a>{` library to configure the client connection:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`var redis = require(\"redis\");\nvar tls = require('tls');\nvar fs = require('fs');\n\nvar ssl = {\n    key: fs.readFileSync('../certificates/client_key_app_001.pem',encoding='ascii'),\n    cert: fs.readFileSync('../certificates/client_cert_app_001.pem',encoding='ascii'),\n    ca: [ fs.readFileSync('../certificates/proxy_cert.pem',encoding='ascii') ],\n    checkServerIdentity: () => { return null; },\n};\n\nvar client = redis.createClient(12000,'127.0.0.1', \n    {\n      password : 'secretdb01',\n      tls: ssl\n    }\n);\n        \nclient.info( \"SERVER\", function (err, reply) {\n    console.log(reply);\n} );\n\n`}</code></pre>\n    <p>{`More information in the documentation \"`}<a parentName=\"p\" {...{\n        \"href\": \"https://redislabs.com/lp/node-js-redis/\"\n      }}>{`Using Redis with Node.js`}</a>{`\".`}</p>\n    <h3 {...{\n      \"id\": \"44-using-java\"\n    }}>{`4.4 Using Java`}</h3>\n    <p>{`In Java, to be able to connect using SSL, you have to install all the certificates in the Java environment using the `}<a parentName=\"p\" {...{\n        \"href\": \"https://docs.oracle.com/en/java/javase/11/tools/keytool.html\"\n      }}>{`keytool`}</a>{` utility.`}</p>\n    <p>{`Create a `}<strong parentName=\"p\">{`keystore`}</strong>{` file that stores the key and certificate you have created earlier:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`openssl pkcs12 -export \\\\\n  -in ./client_cert_app_001.pem \\\\\n  -inkey ./client_key_app_001.pem \\\\\n  -out client-keystore.p12 \\\\\n  -name \"APP_01_P12\"\n`}</code></pre>\n    <p>{`As you can see the keystore is used to store the credentials associated with you client; it will be used later with the `}<inlineCode parentName=\"p\">{`-javax.net.ssl.keyStore`}</inlineCode>{` system property in the Java application.`}</p>\n    <p>{`In addition to the keys tore, you also have to create a trust store, that is used to store other credentials for example in our case the redis cluster certificate.`}</p>\n    <p>{`Create a `}<strong parentName=\"p\">{`trust store`}</strong>{` file and add the Redis cluster certificate to it`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`keytool -genkey \\\\\n  -dname \"cn=CLIENT_APP_01\" \\\\\n  -alias truststorekey \\\\\n  -keyalg RSA \\\\\n  -keystore ./client-truststore.p12 \\\\\n  -keypass secret\n  -storepass secret\n  -storetype pkcs12\n`}</code></pre>\n    <pre><code parentName=\"pre\" {...{}}>{`keytool -import \\\\\n  -keystore ./client-truststore.p12 \\\\\n  -file ./proxy_cert.pem \\\\\n  -alias redis-cluster-crt\n`}</code></pre>\n    <p>{`The trustore will be used later with the `}<inlineCode parentName=\"p\">{`-javax.net.ssl.trustStore`}</inlineCode>{` system property in the Java application.`}</p>\n    <p>{`You can now run the Java application with the following environment variables:`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`java -Djavax.net.ssl.keyStore=/path_to/certificates/java/client-keystore.p12 \\\\\n-Djavax.net.ssl.keyStorePassword=secret \\\\\n-Djavax.net.ssl.trustStore=/path_to/certificates/java/client-truststore.p12 \\\\\n-Djavax.net.ssl.trustStorePassword=secret \\\\\n-jar MyApp.jar\n`}</code></pre>\n    <p>{`For this example and simplicity, I will hard code these property in the Java code itself:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`\nimport redis.clients.jedis.Jedis;\nimport java.net.URI;\n\npublic class SSLTest {\n\n    public static void main(String[] args) {\n\n        System.setProperty(\"javax.net.ssl.keyStore\", \"/path_to/certificates/client-keystore.p12\");\n        System.setProperty(\"javax.net.ssl.keyStorePassword\", \"secret\");\n\n        System.setProperty(\"javax.net.ssl.trustStore\",\"/path_to/certificates/client-truststore.p12\");\n        System.setProperty(\"javax.net.ssl.trustStorePassword\",\"secret\");\n\n        URI uri = URI.create(\"rediss://127.0.0.1:12000\");\n\n        Jedis jedis = new Jedis(uri);\n        jedis.auth(\"secretdb01\");\n\n\n        System.out.println(jedis.info(\"SERVER\"));\n        jedis.close();\n    }\n\n}\n`}</code></pre>\n    <ul>\n      <li parentName=\"ul\">{`line 8-12, the system environment variables are set to point to the keystore and trust store (this should be externalized)`}</li>\n      <li parentName=\"ul\">{`line 14, the Redis URL start with `}<inlineCode parentName=\"li\">{`rediss`}</inlineCode>{` with 2 s to indicate that the connection should be encrypted`}</li>\n      <li parentName=\"ul\">{`line 17, set the database password`}</li>\n    </ul>\n    <p>{`More information in the documentation \"`}<a parentName=\"p\" {...{\n        \"href\": \"https://redislabs.com/lp/redis-java/\"\n      }}>{`Using Redis with Java`}</a>{`\".`}</p>\n    <h2 {...{\n      \"id\": \"conclusion\"\n    }}>{`Conclusion`}</h2>\n    <p>{`In this article, you have learned how to:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`retrieve the Redis Server certificate`}</li>\n      <li parentName=\"ul\">{`generate a client certificate`}</li>\n      <li parentName=\"ul\">{`protect your database to enforce transport level security (TLS) with 2 ways authentication`}</li>\n      <li parentName=\"ul\">{`connect to the database from `}<inlineCode parentName=\"li\">{`redis-cli`}</inlineCode>{`, Python, Node and Java`}</li>\n    </ul>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}