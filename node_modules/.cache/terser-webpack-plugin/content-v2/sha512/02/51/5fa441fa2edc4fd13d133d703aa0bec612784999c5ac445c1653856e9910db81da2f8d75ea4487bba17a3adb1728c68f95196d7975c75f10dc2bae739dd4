{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{114:function(e,t,a){\"use strict\";a.r(t),a.d(t,\"frontMatter\",(function(){return s})),a.d(t,\"metadata\",(function(){return l})),a.d(t,\"toc\",(function(){return c})),a.d(t,\"default\",(function(){return d}));var n=a(3),i=a(7),r=(a(0),a(237)),o=[\"components\"],s={id:\"index-create\",title:\"3. Create Index\",sidebar_label:\"3. Create Index\",slug:\"/howtos/moviesdatabase/create\"},l={unversionedId:\"howtos/moviesdatabase/create/index-create\",id:\"howtos/moviesdatabase/create/index-create\",isDocsHomePage:!1,title:\"3. Create Index\",description:\"Before creating the index let's describe the dataset and insert entries.\",source:\"@site/docs/howtos/moviesdatabase/create/index-create.mdx\",slug:\"/howtos/moviesdatabase/create\",permalink:\"/howtos/moviesdatabase/create\",editUrl:\"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/moviesdatabase/create/index-create.mdx\",version:\"current\",sidebar_label:\"3. Create Index\",sidebar:\"docs\",previous:{title:\"2. Install Redisearch\",permalink:\"/howtos/moviesdatabase/install\"},next:{title:\"4. Query Data\",permalink:\"/howtos/moviesdatabase/query\"}},c=[{value:\"Sample Dataset\",id:\"sample-dataset\",children:[{value:\"Key and Data structure\",id:\"key-and-data-structure\",children:[]}]},{value:\"Insert Movies\",id:\"insert-movies\",children:[]},{value:\"RediSearch &amp; Indexing\",id:\"redisearch--indexing\",children:[{value:\"Create the Index\",id:\"create-the-index\",children:[]}]}],b={toc:c};function d(e){var t=e.components,a=Object(i.a)(e,o);return Object(r.b)(\"wrapper\",Object(n.a)({},b,a,{components:t,mdxType:\"MDXLayout\"}),Object(r.b)(\"p\",null,\"Before creating the index let's describe the dataset and insert entries.\"),Object(r.b)(\"h2\",{id:\"sample-dataset\"},\"Sample Dataset\"),Object(r.b)(\"p\",null,\"In this project you will use a simple dataset describing movies, for now, all records are in English. You will learn more about other languages in another tutorial.\"),Object(r.b)(\"p\",null,\"A movie is represented by the following attributes:\"),Object(r.b)(\"ul\",null,Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"strong\",{parentName:\"li\"},Object(r.b)(\"inlineCode\",{parentName:\"strong\"},\"movie_id\")),\" : The unique ID of the movie, internal to this database\"),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"strong\",{parentName:\"li\"},Object(r.b)(\"inlineCode\",{parentName:\"strong\"},\"title\")),\" : The title of the movie.\"),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"strong\",{parentName:\"li\"},Object(r.b)(\"inlineCode\",{parentName:\"strong\"},\"plot\")),\" : A summary of the movie.\"),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"strong\",{parentName:\"li\"},Object(r.b)(\"inlineCode\",{parentName:\"strong\"},\"genre\")),\" : The genre of the movie, for now a movie will only have a single genre.\"),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"strong\",{parentName:\"li\"},Object(r.b)(\"inlineCode\",{parentName:\"strong\"},\"release_year\")),\" : The year the movie was released as a numerical value.\"),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"strong\",{parentName:\"li\"},Object(r.b)(\"inlineCode\",{parentName:\"strong\"},\"rating\")),\" : A numeric value representing the public's rating for this movie.\"),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"strong\",{parentName:\"li\"},Object(r.b)(\"inlineCode\",{parentName:\"strong\"},\"votes\")),\" : Number of votes.\"),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"strong\",{parentName:\"li\"},Object(r.b)(\"inlineCode\",{parentName:\"strong\"},\"poster\")),\" : Link to the movie poster.\"),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"strong\",{parentName:\"li\"},Object(r.b)(\"inlineCode\",{parentName:\"strong\"},\"imdb_id\")),\" : id of the movie in the \",Object(r.b)(\"a\",{parentName:\"li\",href:\"https://imdb.com\"},\"IMDB\"),\" database.\")),Object(r.b)(\"h3\",{id:\"key-and-data-structure\"},\"Key and Data structure\"),Object(r.b)(\"p\",null,\"As a Redis developer, one of the first things to look when building your application is to define the structure of the key and data (data design/data modeling).\"),Object(r.b)(\"p\",null,\"A common way of defining the keys in Redis is to use specific patterns in them. For example in this application where the database will probably deal with various business objects: movies, actors, theaters, users, ... we can use the following pattern:\"),Object(r.b)(\"ul\",null,Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"business_object:key\"))),Object(r.b)(\"p\",null,\"For example:\"),Object(r.b)(\"ul\",null,Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"movie:001\"),\" for the movie with the id 001\"),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"user:001\"),\" the user with the id 001\")),Object(r.b)(\"p\",null,\"and for the movies information you should use a Redis \",Object(r.b)(\"a\",{parentName:\"p\",href:\"https://redis.io/topics/data-types#hashes\"},\"Hash\"),\". \"),Object(r.b)(\"p\",null,\"A Redis Hash allows the application to structure all the movie attributes in individual fields; also RediSearch will index the fields based on the index definition.\"),Object(r.b)(\"h2\",{id:\"insert-movies\"},\"Insert Movies\"),Object(r.b)(\"p\",null,\"It is time now to add some data into your database, let's insert a few movies, using \",Object(r.b)(\"inlineCode\",{parentName:\"p\"},\"redis-cli\"),\" or \",Object(r.b)(\"a\",{parentName:\"p\",href:\"https://redislabs.com/redisinsight/\"},\"Redis Insight\"),\".\"),Object(r.b)(\"p\",null,\"Once you are connected to your Redis instance run the following commands:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",{parentName:\"pre\"},'\\n> HSET movie:11002 title \"Star Wars: Episode V - The Empire Strikes Back\" plot \"After the Rebels are brutally overpowered by the Empire on the ice planet Hoth, Luke Skywalker begins Jedi training with Yoda, while his friends are pursued by Darth Vader and a bounty hunter named Boba Fett all over the galaxy.\" release_year 1980 genre \"Action\" rating 8.7 votes 1127635 imdb_id tt0080684\\n\\n> HSET movie:11003 title \"The Godfather\" plot \"The aging patriarch of an organized crime dynasty transfers control of his clandestine empire to his reluctant son.\" release_year 1972 genre \"Drama\" rating 9.2 votes 1563839 imdb_id tt0068646\\n\\n> HSET movie:11004 title \"Heat\" plot \"A group of professional bank robbers start to feel the heat from police when they unknowingly leave a clue at their latest heist.\" release_year 1995 genre \"Thriller\" rating 8.2 votes 559490 imdb_id tt0113277\\n\\n> HSET \"movie:11005\" title \"Star Wars: Episode VI - Return of the Jedi\" genre \"Action\" votes 906260 rating 8.3 release_year 1983  plot \"The Rebels dispatch to Endor to destroy the second Empire\\'s Death Star.\" ibmdb_id \"tt0086190\" \\n\\n')),Object(r.b)(\"p\",null,\"Now it is possible to get information from the hash using the movie ID. For example if you want to get the title, and rating execute the following command:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",{parentName:\"pre\"},'> HMGET movie:11002 title rating\\n\\n1) \"Star Wars: Episode V - The Empire Strikes Back\"\\n2) \"8.7\"\\n')),Object(r.b)(\"p\",null,\"And you can increment the rating of this movie using:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",{parentName:\"pre\"},'> HINCRBYFLOAT movie:11002 rating 0.1\\n\"8.8\"\\n')),Object(r.b)(\"p\",null,\"But how do you get a movie or list of movies by year of release, rating or title?\"),Object(r.b)(\"p\",null,\"One option, would be to read all the movies, check all fields and then return only matching movies; no need to say that this is a really bad idea.\"),Object(r.b)(\"p\",null,\"Nevertheless this is where Redis developers often create custom secondary indexes using SET/SORTED SET structures that point back to the movie hash. This needs some heavy design and implementation.\"),Object(r.b)(\"p\",null,\"This is where the RediSearch module can help, and why it was created.\"),Object(r.b)(\"h2\",{id:\"redisearch--indexing\"},\"RediSearch & Indexing\"),Object(r.b)(\"p\",null,\"RediSearch greatly simplifies this by offering a simple and automatic way to create secondary indices on Redis Hashes. (more datastructure will eventually come)\"),Object(r.b)(\"p\",null,Object(r.b)(\"img\",{parentName:\"p\",src:\"https://github.com/RediSearch/redisearch-getting-started/blob/master/docs/images/secondary-index.png?raw=true\",alt:\"Secondary Index\"})),Object(r.b)(\"p\",null,\"Using RediSearch if you want to query on a field, you must first index that field. Let's start by indexing the following fields for our movies:\"),Object(r.b)(\"ul\",null,Object(r.b)(\"li\",{parentName:\"ul\"},\"Title\"),Object(r.b)(\"li\",{parentName:\"ul\"},\"Release Year\"),Object(r.b)(\"li\",{parentName:\"ul\"},\"Rating\"),Object(r.b)(\"li\",{parentName:\"ul\"},\"Genre\")),Object(r.b)(\"p\",null,\"When creating a index you define:\"),Object(r.b)(\"ul\",null,Object(r.b)(\"li\",{parentName:\"ul\"},\"which data you want to index: all \",Object(r.b)(\"em\",{parentName:\"li\"},\"hashes\"),\" with a key starting with \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"movies\"),\" \"),Object(r.b)(\"li\",{parentName:\"ul\"},\"which fields in the hashes you want to index using a Schema definition.\")),Object(r.b)(\"blockquote\",null,Object(r.b)(\"p\",{parentName:\"blockquote\"},Object(r.b)(\"strong\",{parentName:\"p\"},Object(r.b)(\"em\",{parentName:\"strong\"},\"Warning: Do not index all fields\"))),Object(r.b)(\"p\",{parentName:\"blockquote\"},\"Indexes take space in memory, and must be updated when the primary data is updated. So create the index carefully and keep the definition up to date with your needs.\")),Object(r.b)(\"h3\",{id:\"create-the-index\"},\"Create the Index\"),Object(r.b)(\"p\",null,\"Create the index with the following command:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",{parentName:\"pre\"},'> FT.CREATE idx:movie ON hash PREFIX 1 \"movie:\" SCHEMA title TEXT SORTABLE release_year NUMERIC SORTABLE rating NUMERIC SORTABLE genre TAG SORTABLE\\n')),Object(r.b)(\"p\",null,\"Before running some queries let's look at the command in detail:\"),Object(r.b)(\"ul\",null,Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"a\",{parentName:\"li\",href:\"https://oss.redislabs.com/redisearch/master/Commands/#ftcreate\"},Object(r.b)(\"inlineCode\",{parentName:\"a\"},\"FT.CREATE\")),\" : creates an index with the given spec. The index name will be used in all the key names so keep it short.\"),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"idx:movie\"),\" : the name of the index\"),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"ON hash\"),\" : the type of structure to be indexed. \",Object(r.b)(\"em\",{parentName:\"li\"},\"Note that in RediSearch 2.0 only hash structures are supported, this parameter will accept other Redis data types in future as RediSearch is updated to index them\"),\" \"),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"inlineCode\",{parentName:\"li\"},'PREFIX 1 \"movie:\"'),\" : the prefix of the keys that should be indexed. This is a list, so since we want to only index movie:* keys the number is 1. Suppose you want to index movies and tv_show that have the same fields, you can use: \",Object(r.b)(\"inlineCode\",{parentName:\"li\"},'PREFIX 2 \"movie:\" \"tv_show:\"'),\" \"),Object(r.b)(\"li\",{parentName:\"ul\"},Object(r.b)(\"inlineCode\",{parentName:\"li\"},\"SCHEMA ...\"),\": defines the schema, the fields and their type, to index, as you can see in the command, we are using \",Object(r.b)(\"a\",{parentName:\"li\",href:\"https://oss.redislabs.com/redisearch/Query_Syntax/#a_few_query_examples\"},\"TEXT\"),\", \",Object(r.b)(\"a\",{parentName:\"li\",href:\"https://oss.redislabs.com/redisearch/Query_Syntax/#numeric_filters_in_query\"},\"NUMERIC\"),\" and \",Object(r.b)(\"a\",{parentName:\"li\",href:\"https://oss.redislabs.com/redisearch/Query_Syntax/#tag_filters\"},\"TAG\"),\", and \",Object(r.b)(\"a\",{parentName:\"li\",href:\"https://oss.redislabs.com/redisearch/Sorting/\"},\"SORTABLE\"),\" parameters.\")),Object(r.b)(\"p\",null,\"You can find information about the \",Object(r.b)(\"a\",{parentName:\"p\",href:\"https://oss.redislabs.com/redisearch/Commands/#ftcreate\"},\"FT.CREATE\"),\" command in the \",Object(r.b)(\"a\",{parentName:\"p\",href:\"https://oss.redislabs.com/redisearch/Commands/#ftcreate\"},\"documentation\"),\".\"),Object(r.b)(\"p\",null,\"You can look at the index information with the following command:\"),Object(r.b)(\"pre\",null,Object(r.b)(\"code\",{parentName:\"pre\"},\"> FT.INFO idx:movie\\n\")))}d.isMDXComponent=!0},237:function(e,t,a){\"use strict\";a.d(t,\"a\",(function(){return d})),a.d(t,\"b\",(function(){return u}));var n=a(0),i=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var c=i.a.createContext({}),b=function(e){var t=i.a.useContext(c),a=t;return e&&(a=\"function\"==typeof e?e(t):s(s({},t),e)),a},d=function(e){var t=b(e.components);return i.a.createElement(c.Provider,{value:t},e.children)},m={inlineCode:\"code\",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},p=i.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,o=e.parentName,c=l(e,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),d=b(a),p=n,u=d[\"\".concat(o,\".\").concat(p)]||d[p]||m[p]||r;return a?i.a.createElement(u,s(s({ref:t},c),{},{components:a})):i.a.createElement(u,s({ref:t},c))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if(\"string\"==typeof e||n){var r=a.length,o=new Array(r);o[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType=\"string\"==typeof e?e:n,o[1]=s;for(var c=2;c<r;c++)o[c]=a[c];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,a)}p.displayName=\"MDXCreateElement\"}}]);","name":"389b810a.f9c3f17a.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[46],{\n\n/***/ 114:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frontMatter\", function() { return frontMatter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metadata\", function() { return metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toc\", function() { return toc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MDXContent; });\n/* harmony import */ var _Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);\n/* harmony import */ var _Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(237);\nvar _excluded=[\"components\"];var frontMatter={id:'index-create',title:'3. Create Index',sidebar_label:'3. Create Index',slug:'/howtos/moviesdatabase/create'};var metadata={\"unversionedId\":\"howtos/moviesdatabase/create/index-create\",\"id\":\"howtos/moviesdatabase/create/index-create\",\"isDocsHomePage\":false,\"title\":\"3. Create Index\",\"description\":\"Before creating the index let's describe the dataset and insert entries.\",\"source\":\"@site/docs/howtos/moviesdatabase/create/index-create.mdx\",\"slug\":\"/howtos/moviesdatabase/create\",\"permalink\":\"/howtos/moviesdatabase/create\",\"editUrl\":\"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/moviesdatabase/create/index-create.mdx\",\"version\":\"current\",\"sidebar_label\":\"3. Create Index\",\"sidebar\":\"docs\",\"previous\":{\"title\":\"2. Install Redisearch\",\"permalink\":\"/howtos/moviesdatabase/install\"},\"next\":{\"title\":\"4. Query Data\",\"permalink\":\"/howtos/moviesdatabase/query\"}};/* @jsxRuntime classic */ /* @jsx mdx */var toc=[{value:'Sample Dataset',id:'sample-dataset',children:[{value:'Key and Data structure',id:'key-and-data-structure',children:[]}]},{value:'Insert Movies',id:'insert-movies',children:[]},{value:'RediSearch &amp; Indexing',id:'redisearch--indexing',children:[{value:'Create the Index',id:'create-the-index',children:[]}]}];var layoutProps={toc:toc};var MDXLayout=\"wrapper\";function MDXContent(_ref){var components=_ref.components,props=Object(_Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[/* default */ \"a\"])(_ref,_excluded);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(MDXLayout,Object(_Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({},layoutProps,props,{components:components,mdxType:\"MDXLayout\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Before creating the index let's describe the dataset and insert entries.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"sample-dataset\"},\"Sample Dataset\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"In this project you will use a simple dataset describing movies, for now, all records are in English. You will learn more about other languages in another tutorial.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"A movie is represented by the following attributes:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"strong\"},\"movie_id\")),\" : The unique ID of the movie, internal to this database\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"strong\"},\"title\")),\" : The title of the movie.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"strong\"},\"plot\")),\" : A summary of the movie.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"strong\"},\"genre\")),\" : The genre of the movie, for now a movie will only have a single genre.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"strong\"},\"release_year\")),\" : The year the movie was released as a numerical value.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"strong\"},\"rating\")),\" : A numeric value representing the public's rating for this movie.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"strong\"},\"votes\")),\" : Number of votes.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"strong\"},\"poster\")),\" : Link to the movie poster.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"li\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"strong\"},\"imdb_id\")),\" : id of the movie in the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"li\",\"href\":\"https://imdb.com\"},\"IMDB\"),\" database.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"key-and-data-structure\"},\"Key and Data structure\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"As a Redis developer, one of the first things to look when building your application is to define the structure of the key and data (data design/data modeling).\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"A common way of defining the keys in Redis is to use specific patterns in them. For example in this application where the database will probably deal with various business objects: movies, actors, theaters, users, ... we can use the following pattern:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"business_object:key\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"For example:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"movie:001\"),\" for the movie with the id 001\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"user:001\"),\" the user with the id 001\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"and for the movies information you should use a Redis \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"p\",\"href\":\"https://redis.io/topics/data-types#hashes\"},\"Hash\"),\". \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"A Redis Hash allows the application to structure all the movie attributes in individual fields; also RediSearch will index the fields based on the index definition.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"insert-movies\"},\"Insert Movies\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"It is time now to add some data into your database, let's insert a few movies, using \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"redis-cli\"),\" or \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"p\",\"href\":\"https://redislabs.com/redisinsight/\"},\"Redis Insight\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Once you are connected to your Redis instance run the following commands:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\"},\"\\n> HSET movie:11002 title \\\"Star Wars: Episode V - The Empire Strikes Back\\\" plot \\\"After the Rebels are brutally overpowered by the Empire on the ice planet Hoth, Luke Skywalker begins Jedi training with Yoda, while his friends are pursued by Darth Vader and a bounty hunter named Boba Fett all over the galaxy.\\\" release_year 1980 genre \\\"Action\\\" rating 8.7 votes 1127635 imdb_id tt0080684\\n\\n> HSET movie:11003 title \\\"The Godfather\\\" plot \\\"The aging patriarch of an organized crime dynasty transfers control of his clandestine empire to his reluctant son.\\\" release_year 1972 genre \\\"Drama\\\" rating 9.2 votes 1563839 imdb_id tt0068646\\n\\n> HSET movie:11004 title \\\"Heat\\\" plot \\\"A group of professional bank robbers start to feel the heat from police when they unknowingly leave a clue at their latest heist.\\\" release_year 1995 genre \\\"Thriller\\\" rating 8.2 votes 559490 imdb_id tt0113277\\n\\n> HSET \\\"movie:11005\\\" title \\\"Star Wars: Episode VI - Return of the Jedi\\\" genre \\\"Action\\\" votes 906260 rating 8.3 release_year 1983  plot \\\"The Rebels dispatch to Endor to destroy the second Empire's Death Star.\\\" ibmdb_id \\\"tt0086190\\\" \\n\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Now it is possible to get information from the hash using the movie ID. For example if you want to get the title, and rating execute the following command:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\"},\"> HMGET movie:11002 title rating\\n\\n1) \\\"Star Wars: Episode V - The Empire Strikes Back\\\"\\n2) \\\"8.7\\\"\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"And you can increment the rating of this movie using:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\"},\"> HINCRBYFLOAT movie:11002 rating 0.1\\n\\\"8.8\\\"\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"But how do you get a movie or list of movies by year of release, rating or title?\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"One option, would be to read all the movies, check all fields and then return only matching movies; no need to say that this is a really bad idea.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Nevertheless this is where Redis developers often create custom secondary indexes using SET/SORTED SET structures that point back to the movie hash. This needs some heavy design and implementation.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"This is where the RediSearch module can help, and why it was created.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"redisearch--indexing\"},\"RediSearch & Indexing\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"RediSearch greatly simplifies this by offering a simple and automatic way to create secondary indices on Redis Hashes. (more datastructure will eventually come)\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"img\",{parentName:\"p\",\"src\":\"https://github.com/RediSearch/redisearch-getting-started/blob/master/docs/images/secondary-index.png?raw=true\",\"alt\":\"Secondary Index\"})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Using RediSearch if you want to query on a field, you must first index that field. Let's start by indexing the following fields for our movies:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"Title\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"Release Year\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"Rating\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"Genre\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"When creating a index you define:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"which data you want to index: all \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"hashes\"),\" with a key starting with \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"movies\"),\" \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"which fields in the hashes you want to index using a Schema definition.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"blockquote\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",{parentName:\"blockquote\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"strong\",{parentName:\"p\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"strong\"},\"Warning: Do not index all fields\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",{parentName:\"blockquote\"},\"Indexes take space in memory, and must be updated when the primary data is updated. So create the index carefully and keep the definition up to date with your needs.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"create-the-index\"},\"Create the Index\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Create the index with the following command:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\"},\"> FT.CREATE idx:movie ON hash PREFIX 1 \\\"movie:\\\" SCHEMA title TEXT SORTABLE release_year NUMERIC SORTABLE rating NUMERIC SORTABLE genre TAG SORTABLE\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Before running some queries let's look at the command in detail:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"li\",\"href\":\"https://oss.redislabs.com/redisearch/master/Commands/#ftcreate\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"a\"},\"FT.CREATE\")),\" : creates an index with the given spec. The index name will be used in all the key names so keep it short.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"idx:movie\"),\" : the name of the index\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"ON hash\"),\" : the type of structure to be indexed. \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"em\",{parentName:\"li\"},\"Note that in RediSearch 2.0 only hash structures are supported, this parameter will accept other Redis data types in future as RediSearch is updated to index them\"),\" \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"PREFIX 1 \\\"movie:\\\"\"),\" : the prefix of the keys that should be indexed. This is a list, so since we want to only index movie:* keys the number is 1. Suppose you want to index movies and tv_show that have the same fields, you can use: \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"PREFIX 2 \\\"movie:\\\" \\\"tv_show:\\\"\"),\" \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"SCHEMA ...\"),\": defines the schema, the fields and their type, to index, as you can see in the command, we are using \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"li\",\"href\":\"https://oss.redislabs.com/redisearch/Query_Syntax/#a_few_query_examples\"},\"TEXT\"),\", \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"li\",\"href\":\"https://oss.redislabs.com/redisearch/Query_Syntax/#numeric_filters_in_query\"},\"NUMERIC\"),\" and \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"li\",\"href\":\"https://oss.redislabs.com/redisearch/Query_Syntax/#tag_filters\"},\"TAG\"),\", and \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"li\",\"href\":\"https://oss.redislabs.com/redisearch/Sorting/\"},\"SORTABLE\"),\" parameters.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"You can find information about the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"p\",\"href\":\"https://oss.redislabs.com/redisearch/Commands/#ftcreate\"},\"FT.CREATE\"),\" command in the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"p\",\"href\":\"https://oss.redislabs.com/redisearch/Commands/#ftcreate\"},\"documentation\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"You can look at the index information with the following command:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\"},\"> FT.INFO idx:movie\\n\")));};MDXContent.isMDXComponent=true;\n\n/***/ }),\n\n/***/ 237:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export MDXContext */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MDXProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return createElement; });\n/* unused harmony export useMDXComponents */\n/* unused harmony export withMDXComponents */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0___default.a.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, createElementArgArray);\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, args);\n}\n\n\n\n\n/***/ })\n\n}]);","inputSourceMap":null}