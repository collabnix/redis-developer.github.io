{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{237:function(e,r,t){\"use strict\";t.d(r,\"a\",(function(){return u})),t.d(r,\"b\",(function(){return m}));var n=t(0),i=t.n(n);function s(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){s(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function d(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},s=Object.keys(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)t=s[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=i.a.createContext({}),c=function(e){var r=i.a.useContext(l),t=r;return e&&(t=\"function\"==typeof e?e(r):o(o({},r),e)),t},u=function(e){var r=c(e.components);return i.a.createElement(l.Provider,{value:r},e.children)},p={inlineCode:\"code\",wrapper:function(e){var r=e.children;return i.a.createElement(i.a.Fragment,{},r)}},b=i.a.forwardRef((function(e,r){var t=e.components,n=e.mdxType,s=e.originalType,a=e.parentName,l=d(e,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),u=c(t),b=n,m=u[\"\".concat(a,\".\").concat(b)]||u[b]||p[b]||s;return t?i.a.createElement(m,o(o({ref:r},l),{},{components:t})):i.a.createElement(m,o({ref:r},l))}));function m(e,r){var t=arguments,n=r&&r.mdxType;if(\"string\"==typeof e||n){var s=t.length,a=new Array(s);a[0]=b;var o={};for(var d in r)hasOwnProperty.call(r,d)&&(o[d]=r[d]);o.originalType=e,o.mdxType=\"string\"==typeof e?e:n,a[1]=o;for(var l=2;l<s;l++)a[l]=t[l];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,t)}b.displayName=\"MDXCreateElement\"},95:function(e,r,t){\"use strict\";t.r(r),t.d(r,\"frontMatter\",(function(){return o})),t.d(r,\"metadata\",(function(){return d})),t.d(r,\"toc\",(function(){return l})),t.d(r,\"default\",(function(){return u}));var n=t(3),i=t(7),s=(t(0),t(237)),a=[\"components\"],o={id:\"index-redisgears\",title:\"RedisGears Tutorial\",sidebar_label:\"RedisGears Tutorial\",slug:\"/howtos/redisgears\"},d={unversionedId:\"howtos/redisgears/index-redisgears\",id:\"howtos/redisgears/index-redisgears\",isDocsHomePage:!1,title:\"RedisGears Tutorial\",description:\"RedisGears is an engine for data processing in Redis. RedisGears supports batch and event-driven processing for Redis data. To use RedisGears, you write functions that describe how your data should be processed. You then submit this code to your Redis deployment for remote execution.\",source:\"@site/docs/howtos/redisgears/index-redisgears.mdx\",slug:\"/howtos/redisgears\",permalink:\"/howtos/redisgears\",editUrl:\"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/redisgears/index-redisgears.mdx\",version:\"current\",sidebar_label:\"RedisGears Tutorial\",sidebar:\"docs\",previous:{title:\"RedisBloom Tutorial\",permalink:\"/howtos/redisbloom\"},next:{title:\"RedisAI  Tutorial\",permalink:\"/howtos/redisai\"}},l=[{value:\"Step 1. Installing RedisGears\",id:\"step-1-installing-redisgears\",children:[]},{value:\"Step 2. Verifying if RedisGears module is enabled:\",id:\"step-2-verifying-if-redisgears-module-is-enabled\",children:[]},{value:\"Step 3. Create a &quot;wordcount&quot; Python script\",id:\"step-3-create-a-wordcount-python-script\",children:[]},{value:\"Step 4. Execute the CLI\",id:\"step-4-execute-the-cli\",children:[]},{value:\"References\",id:\"references\",children:[]}],c={toc:l};function u(e){var r=e.components,t=Object(i.a)(e,a);return Object(s.b)(\"wrapper\",Object(n.a)({},c,t,{components:r,mdxType:\"MDXLayout\"}),Object(s.b)(\"p\",null,Object(s.b)(\"a\",{parentName:\"p\",href:\"https://redis.com/modules/redis-gears/\"},\"RedisGears\"),\" is an engine for data processing in Redis. RedisGears supports batch and event-driven processing for Redis data. To use RedisGears, you write functions that describe how your data should be processed. You then submit this code to your Redis deployment for remote execution.\"),Object(s.b)(\"p\",null,\"RedisGears is implemented by a Redis module. To use RedisGears, you\\u2019ll need to make sure that your Redis deployment has the module installed.\"),Object(s.b)(\"h3\",{id:\"step-1-installing-redisgears\"},\"Step 1. Installing RedisGears\"),Object(s.b)(\"p\",null,\"Before you can use RedisGears, you have to install the RedisGears module. We will be using redislabs/redismod Docker image for this demonsration\"),Object(s.b)(\"pre\",null,Object(s.b)(\"code\",{parentName:\"pre\",className:\"language-bash\"},\" docker run -d -p 6379:6379 redislabs/redismod\\n\")),Object(s.b)(\"h3\",{id:\"step-2-verifying-if-redisgears-module-is-enabled\"},\"Step 2. Verifying if RedisGears module is enabled:\"),Object(s.b)(\"p\",null,\"You can directly use \",Object(s.b)(\"inlineCode\",{parentName:\"p\"},\"redis-cli\"),' CLI to verify if RedisGears module(\"rg\") is properly loaded or not.'),Object(s.b)(\"pre\",null,Object(s.b)(\"code\",{parentName:\"pre\",className:\"language-bash\"},\" redis-cli\\n redis-cli\\n 127.0.0.1:6379> info modules\\n # Modules\\n ..\\n module:name=rg,ver=10006,api=1,filters=0,usedby=[],using=[ai],options=[]\\n\")),Object(s.b)(\"h3\",{id:\"step-3-create-a-wordcount-python-script\"},'Step 3. Create a \"wordcount\" Python script'),Object(s.b)(\"p\",null,\"To demonstrate RedisGears functionality, we will be performing a unique word count on the existing strings.\\nWe will be writing a RedisGears function to do this. \"),Object(s.b)(\"p\",null,\"Open a file called wordcount.py, and add the following code:\"),Object(s.b)(\"pre\",null,Object(s.b)(\"code\",{parentName:\"pre\",className:\"language-python\"},\" gb = GearsBuilder()\\n gb.map(lambda x: x['value'])     # map each key object to its string value\\n gb.flatmap(lambda x: x.split())  # split each string into a list of words\\n gb.countby()                     # run a count-unique on these words\\n gb.run()\\n\")),Object(s.b)(\"h3\",{id:\"step-4-execute-the-cli\"},\"Step 4. Execute the CLI\"),Object(s.b)(\"pre\",null,Object(s.b)(\"code\",{parentName:\"pre\",className:\"language-bash\"},\" redis-cli rg.pyexecute \\\"`cat wordcount.py`\\\"\\n  1) 1) \\\"{'key': 'world', 'value': 1}\\\"\\n  2) \\\"{'key': 'galaxy', 'value': 1}\\\"\\n  3) \\\"{'key': 'hello', 'value': 3}\\\"\\n  4) \\\"{'key': 'universe', 'value': 1}\\\"\\n 2) (empty array)\\n\")),Object(s.b)(\"p\",null,\"The results here show the number of occurences of each word in all of our strings. So, we\\u2019ve effectively processed the data in our Redis database all at once, in a batch.\"),Object(s.b)(\"h3\",{id:\"references\"},\"References\"),Object(s.b)(\"ul\",null,Object(s.b)(\"li\",{parentName:\"ul\"},Object(s.b)(\"a\",{parentName:\"li\",href:\"/howtos/frauddetection\"},\"How to build a Fraud Detection System using RedisGears and RedisBloom\")),Object(s.b)(\"li\",{parentName:\"ul\"},Object(s.b)(\"a\",{parentName:\"li\",href:\"/explore/redisinsight/redisgears\"},\"Writing Your Serverless function using RedisGears Browser Tool\")),Object(s.b)(\"li\",{parentName:\"ul\"},Object(s.b)(\"a\",{parentName:\"li\",href:\"https://redis.com/modules/redis-gears/\"},\"RedisGears Module\"))))}u.isMDXComponent=!0}}]);","name":"1900cdc0.702a2226.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[28],{\n\n/***/ 237:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export MDXContext */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MDXProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return createElement; });\n/* unused harmony export useMDXComponents */\n/* unused harmony export withMDXComponents */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0___default.a.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, createElementArgArray);\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, args);\n}\n\n\n\n\n/***/ }),\n\n/***/ 95:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frontMatter\", function() { return frontMatter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metadata\", function() { return metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toc\", function() { return toc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MDXContent; });\n/* harmony import */ var _Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);\n/* harmony import */ var _Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(237);\nvar _excluded=[\"components\"];var frontMatter={id:'index-redisgears',title:'RedisGears Tutorial',sidebar_label:'RedisGears Tutorial',slug:'/howtos/redisgears'};var metadata={\"unversionedId\":\"howtos/redisgears/index-redisgears\",\"id\":\"howtos/redisgears/index-redisgears\",\"isDocsHomePage\":false,\"title\":\"RedisGears Tutorial\",\"description\":\"RedisGears is an engine for data processing in Redis. RedisGears supports batch and event-driven processing for Redis data. To use RedisGears, you write functions that describe how your data should be processed. You then submit this code to your Redis deployment for remote execution.\",\"source\":\"@site/docs/howtos/redisgears/index-redisgears.mdx\",\"slug\":\"/howtos/redisgears\",\"permalink\":\"/howtos/redisgears\",\"editUrl\":\"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/redisgears/index-redisgears.mdx\",\"version\":\"current\",\"sidebar_label\":\"RedisGears Tutorial\",\"sidebar\":\"docs\",\"previous\":{\"title\":\"RedisBloom Tutorial\",\"permalink\":\"/howtos/redisbloom\"},\"next\":{\"title\":\"RedisAI  Tutorial\",\"permalink\":\"/howtos/redisai\"}};/* @jsxRuntime classic */ /* @jsx mdx */var toc=[{value:'Step 1. Installing RedisGears',id:'step-1-installing-redisgears',children:[]},{value:'Step 2. Verifying if RedisGears module is enabled:',id:'step-2-verifying-if-redisgears-module-is-enabled',children:[]},{value:'Step 3. Create a &quot;wordcount&quot; Python script',id:'step-3-create-a-wordcount-python-script',children:[]},{value:'Step 4. Execute the CLI',id:'step-4-execute-the-cli',children:[]},{value:'References',id:'references',children:[]}];var layoutProps={toc:toc};var MDXLayout=\"wrapper\";function MDXContent(_ref){var components=_ref.components,props=Object(_Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[/* default */ \"a\"])(_ref,_excluded);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(MDXLayout,Object(_Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({},layoutProps,props,{components:components,mdxType:\"MDXLayout\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"p\",\"href\":\"https://redis.com/modules/redis-gears/\"},\"RedisGears\"),\" is an engine for data processing in Redis. RedisGears supports batch and event-driven processing for Redis data. To use RedisGears, you write functions that describe how your data should be processed. You then submit this code to your Redis deployment for remote execution.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"RedisGears is implemented by a Redis module. To use RedisGears, you\\u2019ll need to make sure that your Redis deployment has the module installed.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"step-1-installing-redisgears\"},\"Step 1. Installing RedisGears\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Before you can use RedisGears, you have to install the RedisGears module. We will be using redislabs/redismod Docker image for this demonsration\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},\" docker run -d -p 6379:6379 redislabs/redismod\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"step-2-verifying-if-redisgears-module-is-enabled\"},\"Step 2. Verifying if RedisGears module is enabled:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"You can directly use \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"redis-cli\"),\" CLI to verify if RedisGears module(\\\"rg\\\") is properly loaded or not.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},\" redis-cli\\n redis-cli\\n 127.0.0.1:6379> info modules\\n # Modules\\n ..\\n module:name=rg,ver=10006,api=1,filters=0,usedby=[],using=[ai],options=[]\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"step-3-create-a-wordcount-python-script\"},\"Step 3. Create a \\\"wordcount\\\" Python script\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"To demonstrate RedisGears functionality, we will be performing a unique word count on the existing strings.\\nWe will be writing a RedisGears function to do this. \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Open a file called wordcount.py, and add the following code:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-python\"},\" gb = GearsBuilder()\\n gb.map(lambda x: x['value'])     # map each key object to its string value\\n gb.flatmap(lambda x: x.split())  # split each string into a list of words\\n gb.countby()                     # run a count-unique on these words\\n gb.run()\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"step-4-execute-the-cli\"},\"Step 4. Execute the CLI\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},\" redis-cli rg.pyexecute \\\"`cat wordcount.py`\\\"\\n  1) 1) \\\"{'key': 'world', 'value': 1}\\\"\\n  2) \\\"{'key': 'galaxy', 'value': 1}\\\"\\n  3) \\\"{'key': 'hello', 'value': 3}\\\"\\n  4) \\\"{'key': 'universe', 'value': 1}\\\"\\n 2) (empty array)\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"The results here show the number of occurences of each word in all of our strings. So, we\\u2019ve effectively processed the data in our Redis database all at once, in a batch.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"references\"},\"References\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"li\",\"href\":\"/howtos/frauddetection\"},\"How to build a Fraud Detection System using RedisGears and RedisBloom\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"li\",\"href\":\"/explore/redisinsight/redisgears\"},\"Writing Your Serverless function using RedisGears Browser Tool\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"li\",\"href\":\"https://redis.com/modules/redis-gears/\"},\"RedisGears Module\"))));};MDXContent.isMDXComponent=true;\n\n/***/ })\n\n}]);","inputSourceMap":null}