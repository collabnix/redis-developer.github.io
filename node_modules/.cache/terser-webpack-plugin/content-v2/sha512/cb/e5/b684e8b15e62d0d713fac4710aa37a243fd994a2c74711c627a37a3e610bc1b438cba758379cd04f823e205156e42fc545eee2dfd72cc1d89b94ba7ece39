{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[160],{228:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"frontMatter\",(function(){return s})),n.d(t,\"metadata\",(function(){return l})),n.d(t,\"toc\",(function(){return c})),n.d(t,\"default\",(function(){return b}));var a=n(3),r=n(7),o=(n(0),n(237)),i=[\"components\"],s={id:\"index-usingjava\",title:\"How to cache JSON data in Redis with Java\",sidebar_label:\"RedisJSON with Java\",slug:\"/howtos/redisjson/using-java\"},l={unversionedId:\"howtos/redisjson/using-java/index-usingjava\",id:\"howtos/redisjson/using-java/index-usingjava\",isDocsHomePage:!1,title:\"How to cache JSON data in Redis with Java\",description:\"JRedisJSON is a Java client library for RedisJSON. This client provides access to RedisJSON's Redis API, and provides back-and-forth serialization between Java's and its objects. This client supports the core RedisJSON commands at the moment.\",source:\"@site/docs/howtos/redisjson/using-java/index-usingjava.mdx\",slug:\"/howtos/redisjson/using-java\",permalink:\"/howtos/redisjson/using-java\",editUrl:\"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/redisjson/using-java/index-usingjava.mdx\",version:\"current\",sidebar_label:\"RedisJSON with Java\",sidebar:\"docs\",previous:{title:\"How to cache JSON data in Redis with Go\",permalink:\"/howtos/redisjson/using-go\"},next:{title:\"How to visualize JSON data using RedisInsight\",permalink:\"/howtos/redisjson/using-redisinsight\"}},c=[{value:\"Step 1. Run RedisMod Docker container\",id:\"step-1-run-redismod-docker-container\",children:[]},{value:\"Step 2. Clone the repository\",id:\"step-2-clone-the-repository\",children:[]},{value:\"Step 3. Install Maven\",id:\"step-3-install-maven\",children:[]},{value:\"Step 4. Create a file\",id:\"step-4-create-a-file\",children:[]},{value:\"Step 5. Run the maven executables\",id:\"step-5-run-the-maven-executables\",children:[]},{value:\"References\",id:\"references\",children:[]}],d={toc:c};function b(e){var t=e.components,n=Object(r.a)(e,i);return Object(o.b)(\"wrapper\",Object(a.a)({},d,n,{components:t,mdxType:\"MDXLayout\"}),Object(o.b)(\"p\",null,Object(o.b)(\"a\",{parentName:\"p\",href:\"https://github.com/RedisJSON/JRedisJSON\"},\"JRedisJSON\"),\" is a Java client library for RedisJSON. This client provides access to RedisJSON's Redis API, and provides back-and-forth serialization between Java's and its objects. This client supports the core RedisJSON commands at the moment.\"),Object(o.b)(\"p\",null,\"Follow the below steps to get started with RedisJSON and Java:\"),Object(o.b)(\"h3\",{id:\"step-1-run-redismod-docker-container\"},\"Step 1. Run RedisMod Docker container\"),Object(o.b)(\"p\",null,\"This simple container image bundles together the latest stable releases of Redis and select Redis modules from Redis Lab. \"),Object(o.b)(\"pre\",null,Object(o.b)(\"code\",{parentName:\"pre\",className:\"language-bash\"},\" docker run -d -p 6379:6379 redislabs/redismod:latest\\n\")),Object(o.b)(\"h3\",{id:\"step-2-clone-the-repository\"},\"Step 2. Clone the repository\"),Object(o.b)(\"pre\",null,Object(o.b)(\"code\",{parentName:\"pre\",className:\"language-bash\"},\" git clone https://github.com/RedisJSON/JRedisJSON\\n\")),Object(o.b)(\"h3\",{id:\"step-3-install-maven\"},\"Step 3. Install Maven\"),Object(o.b)(\"p\",null,\"If you have already installed Maven, then it will show that maven 3.8.1 is already installed and up-to-date.\\nIf not, then run the below command:\"),Object(o.b)(\"pre\",null,Object(o.b)(\"code\",{parentName:\"pre\",className:\"language-bash\"},\" brew install mvn\\n\")),Object(o.b)(\"h3\",{id:\"step-4-create-a-file\"},\"Step 4. Create a file\"),Object(o.b)(\"p\",null,\"Copy the below content and save a file name redisdeveloper.java\"),Object(o.b)(\"pre\",null,Object(o.b)(\"code\",{parentName:\"pre\",className:\"language-java\"},' import redis.clients.jedis.Jedis;\\nimport com.redislabs.modules.rejson.JReJSON;\\n\\n// First get a connection\\nJReJSON client = new JReJSON(\"localhost\", 6379);\\n\\n// Setting a Redis key name _foo_ to the string _\"bar\"_, and reading it back\\nclient.set(\"foo\", \"bar\");\\nString s0 = (String) client.get(\"foo\");\\n\\n// Omitting the path (usually) defaults to the root path, so the call above to\\n// `get()` and the following ones // are basically interchangeable\\nString s1 = (String) client.get(\"foo\", new Path(\".\"));\\nString s2 = (String) client.get(\"foo\", Path.ROOT_PATH);\\n\\n// Any Gson-able object can be set and updated\\nclient.set(\"obj\", new Object());             // just an empty object\\nclient.set(\"obj\", null, new Path(\".zilch\"));\\nPath p = new Path(\".whatevs\");\\nclient.set(\"obj\", true, p);\\nclient.set(\"obj\", 42, p);\\nclient.del(\"obj\", p);                        // back to almost nothing\\n')),Object(o.b)(\"h3\",{id:\"step-5-run-the-maven-executables\"},\"Step 5. Run the maven executables\"),Object(o.b)(\"p\",null,'Use the \"clean\" command to delete all previously compiled Java .class files and resources (like .properties) in your project. Let your build start from a clean slate. Also, you can pass \"install\" to let it compile, test & package your Java project and even install/copy your built .jar/.war file into your local Maven repository.'),Object(o.b)(\"pre\",null,Object(o.b)(\"code\",{parentName:\"pre\",className:\"language-bash\"},\" mvn clean install -Dmaven.test.skip=true\\n\")),Object(o.b)(\"pre\",null,Object(o.b)(\"code\",{parentName:\"pre\"},' 1628854852.903490 [0 172.17.0.1:60194] \"JSON.SET\" \"obj\" \".\" \"{\\\\\"str\\\\\":\\\\\"string\\\\\",\\\\\"bTrue\\\\\":true}\"\\n 1628854852.905266 [0 172.17.0.1:60194] \"JSON.GET\" \"obj\" \"bTrue\" \"str\"\\n 1628854852.909629 [0 172.17.0.1:60198] \"FLUSHDB\"\\n 1628854852.911907 [0 172.17.0.1:60202] \"JSON.SET\" \"foobar\" \".\" \"{\\\\\"foo\\\\\":\\\\\"bar\\\\\"}\"\\n 1628854852.913345 [0 172.17.0.1:60202] \"JSON.TYPE\" \"foobar\" \".foo[1]\"\\n 1628854852.918301 [0 172.17.0.1:60206] \"FLUSHDB\"\\n 1628854852.920702 [0 172.17.0.1:60210] \"JSON.SET\" \"obj\" \".\" \"{\\\\\"str\\\\\":\\\\\"string\\\\\",\\\\\"bTrue\\\\\":true}\"\\n 1628854852.922083 [0 172.17.0.1:60210] \"JSON.SET\" \"obj\" \".none\" \"\\\\\"strangle\\\\\"\" \"XX\"\\n 1628854852.926862 [0 172.17.0.1:60214] \"FLUSHDB\"\\n 1628854852.930541 [0 172.17.0.1:60218] \"JSON.SET\" \"test\" \".\" \"\\\\\"foo\\\\\"\"\\n 1628854852.932374 [0 172.17.0.1:60218] \"JSON.GET\" \"test\" \".bar\"\\n 1628854852.937640 [0 172.17.0.1:60222] \"FLUSHDB\"\\n 1628854852.940467 [0 172.17.0.1:60226] \"JSON.SET\" \"obj\" \".\" \"{\\\\\"str\\\\\":\\\\\"string\\\\\",\\\\\"bTrue\\\\\":true}\"\\n 1628854852.941928 [0 172.17.0.1:60226] \"JSON.SET\" \"obj\" \".none\" \"\\\\\"strangle\\\\\"\" \"NX\"\\n 1628854852.943441 [0 172.17.0.1:60226] \"JSON.GET\" \"obj\" \".none\"\\n')),Object(o.b)(\"h3\",{id:\"references\"},\"References\"),Object(o.b)(\"ul\",null,Object(o.b)(\"li\",{parentName:\"ul\"},Object(o.b)(\"a\",{parentName:\"li\",href:\"/howtos/redisjson/using-python\"},\"RedisJSON and Python\")),Object(o.b)(\"li\",{parentName:\"ul\"},Object(o.b)(\"a\",{parentName:\"li\",href:\"/howtos/redisjson/storing-complex-json-document\"},\"How to store and retrieve nested JSON document\")),Object(o.b)(\"li\",{parentName:\"ul\"},Object(o.b)(\"a\",{parentName:\"li\",href:\"/howtos/redisjson/using-nodejs\"},\"Importing JSON data into Redis using NodeJS\"),\" \"),Object(o.b)(\"li\",{parentName:\"ul\"},\"Learn more about \",Object(o.b)(\"a\",{parentName:\"li\",href:\"https://oss.redis.com/redisjson/\"},\"RedisJSON\"),\" in the Quickstart tutorial.\"),Object(o.b)(\"li\",{parentName:\"ul\"},Object(o.b)(\"a\",{parentName:\"li\",href:\"/howtos/shoppingcart\"},\"How to build shopping cart app using NodeJS and RedisJSON\")),Object(o.b)(\"li\",{parentName:\"ul\"},Object(o.b)(\"a\",{parentName:\"li\",href:\"https://redislabs.com/blog/index-and-query-json-docs-with-redis/\"},\"Indexing, Querying, and Full-Text Search of JSON Documents with Redis\"))))}b.isMDXComponent=!0},237:function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return b})),n.d(t,\"b\",(function(){return h}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),d=function(e){var t=r.a.useContext(c),n=t;return e&&(n=\"function\"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=d(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:\"code\",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),b=d(n),p=a,h=b[\"\".concat(i,\".\").concat(p)]||b[p]||u[p]||o;return n?r.a.createElement(h,s(s({ref:t},c),{},{components:n})):r.a.createElement(h,s({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if(\"string\"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType=\"string\"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}p.displayName=\"MDXCreateElement\"}}]);","name":"fa8b3f88.7b29fa1e.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[160],{\n\n/***/ 228:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frontMatter\", function() { return frontMatter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metadata\", function() { return metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toc\", function() { return toc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MDXContent; });\n/* harmony import */ var _Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);\n/* harmony import */ var _Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(237);\nvar _excluded=[\"components\"];var frontMatter={id:'index-usingjava',title:'How to cache JSON data in Redis with Java',sidebar_label:'RedisJSON with Java',slug:'/howtos/redisjson/using-java'};var metadata={\"unversionedId\":\"howtos/redisjson/using-java/index-usingjava\",\"id\":\"howtos/redisjson/using-java/index-usingjava\",\"isDocsHomePage\":false,\"title\":\"How to cache JSON data in Redis with Java\",\"description\":\"JRedisJSON is a Java client library for RedisJSON. This client provides access to RedisJSON's Redis API, and provides back-and-forth serialization between Java's and its objects. This client supports the core RedisJSON commands at the moment.\",\"source\":\"@site/docs/howtos/redisjson/using-java/index-usingjava.mdx\",\"slug\":\"/howtos/redisjson/using-java\",\"permalink\":\"/howtos/redisjson/using-java\",\"editUrl\":\"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/redisjson/using-java/index-usingjava.mdx\",\"version\":\"current\",\"sidebar_label\":\"RedisJSON with Java\",\"sidebar\":\"docs\",\"previous\":{\"title\":\"How to cache JSON data in Redis with Go\",\"permalink\":\"/howtos/redisjson/using-go\"},\"next\":{\"title\":\"How to visualize JSON data using RedisInsight\",\"permalink\":\"/howtos/redisjson/using-redisinsight\"}};/* @jsxRuntime classic */ /* @jsx mdx */var toc=[{value:'Step 1. Run RedisMod Docker container',id:'step-1-run-redismod-docker-container',children:[]},{value:'Step 2. Clone the repository',id:'step-2-clone-the-repository',children:[]},{value:'Step 3. Install Maven',id:'step-3-install-maven',children:[]},{value:'Step 4. Create a file',id:'step-4-create-a-file',children:[]},{value:'Step 5. Run the maven executables',id:'step-5-run-the-maven-executables',children:[]},{value:'References',id:'references',children:[]}];var layoutProps={toc:toc};var MDXLayout=\"wrapper\";function MDXContent(_ref){var components=_ref.components,props=Object(_Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[/* default */ \"a\"])(_ref,_excluded);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(MDXLayout,Object(_Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({},layoutProps,props,{components:components,mdxType:\"MDXLayout\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"p\",\"href\":\"https://github.com/RedisJSON/JRedisJSON\"},\"JRedisJSON\"),\" is a Java client library for RedisJSON. This client provides access to RedisJSON's Redis API, and provides back-and-forth serialization between Java's and its objects. This client supports the core RedisJSON commands at the moment.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Follow the below steps to get started with RedisJSON and Java:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"step-1-run-redismod-docker-container\"},\"Step 1. Run RedisMod Docker container\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"This simple container image bundles together the latest stable releases of Redis and select Redis modules from Redis Lab. \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},\" docker run -d -p 6379:6379 redislabs/redismod:latest\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"step-2-clone-the-repository\"},\"Step 2. Clone the repository\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},\" git clone https://github.com/RedisJSON/JRedisJSON\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"step-3-install-maven\"},\"Step 3. Install Maven\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"If you have already installed Maven, then it will show that maven 3.8.1 is already installed and up-to-date.\\nIf not, then run the below command:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},\" brew install mvn\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"step-4-create-a-file\"},\"Step 4. Create a file\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Copy the below content and save a file name redisdeveloper.java\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-java\"},\" import redis.clients.jedis.Jedis;\\nimport com.redislabs.modules.rejson.JReJSON;\\n\\n// First get a connection\\nJReJSON client = new JReJSON(\\\"localhost\\\", 6379);\\n\\n// Setting a Redis key name _foo_ to the string _\\\"bar\\\"_, and reading it back\\nclient.set(\\\"foo\\\", \\\"bar\\\");\\nString s0 = (String) client.get(\\\"foo\\\");\\n\\n// Omitting the path (usually) defaults to the root path, so the call above to\\n// `get()` and the following ones // are basically interchangeable\\nString s1 = (String) client.get(\\\"foo\\\", new Path(\\\".\\\"));\\nString s2 = (String) client.get(\\\"foo\\\", Path.ROOT_PATH);\\n\\n// Any Gson-able object can be set and updated\\nclient.set(\\\"obj\\\", new Object());             // just an empty object\\nclient.set(\\\"obj\\\", null, new Path(\\\".zilch\\\"));\\nPath p = new Path(\\\".whatevs\\\");\\nclient.set(\\\"obj\\\", true, p);\\nclient.set(\\\"obj\\\", 42, p);\\nclient.del(\\\"obj\\\", p);                        // back to almost nothing\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"step-5-run-the-maven-executables\"},\"Step 5. Run the maven executables\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Use the \\\"clean\\\" command to delete all previously compiled Java .class files and resources (like .properties) in your project. Let your build start from a clean slate. Also, you can pass \\\"install\\\" to let it compile, test & package your Java project and even install/copy your built .jar/.war file into your local Maven repository.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},\" mvn clean install -Dmaven.test.skip=true\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\"},\" 1628854852.903490 [0 172.17.0.1:60194] \\\"JSON.SET\\\" \\\"obj\\\" \\\".\\\" \\\"{\\\\\\\"str\\\\\\\":\\\\\\\"string\\\\\\\",\\\\\\\"bTrue\\\\\\\":true}\\\"\\n 1628854852.905266 [0 172.17.0.1:60194] \\\"JSON.GET\\\" \\\"obj\\\" \\\"bTrue\\\" \\\"str\\\"\\n 1628854852.909629 [0 172.17.0.1:60198] \\\"FLUSHDB\\\"\\n 1628854852.911907 [0 172.17.0.1:60202] \\\"JSON.SET\\\" \\\"foobar\\\" \\\".\\\" \\\"{\\\\\\\"foo\\\\\\\":\\\\\\\"bar\\\\\\\"}\\\"\\n 1628854852.913345 [0 172.17.0.1:60202] \\\"JSON.TYPE\\\" \\\"foobar\\\" \\\".foo[1]\\\"\\n 1628854852.918301 [0 172.17.0.1:60206] \\\"FLUSHDB\\\"\\n 1628854852.920702 [0 172.17.0.1:60210] \\\"JSON.SET\\\" \\\"obj\\\" \\\".\\\" \\\"{\\\\\\\"str\\\\\\\":\\\\\\\"string\\\\\\\",\\\\\\\"bTrue\\\\\\\":true}\\\"\\n 1628854852.922083 [0 172.17.0.1:60210] \\\"JSON.SET\\\" \\\"obj\\\" \\\".none\\\" \\\"\\\\\\\"strangle\\\\\\\"\\\" \\\"XX\\\"\\n 1628854852.926862 [0 172.17.0.1:60214] \\\"FLUSHDB\\\"\\n 1628854852.930541 [0 172.17.0.1:60218] \\\"JSON.SET\\\" \\\"test\\\" \\\".\\\" \\\"\\\\\\\"foo\\\\\\\"\\\"\\n 1628854852.932374 [0 172.17.0.1:60218] \\\"JSON.GET\\\" \\\"test\\\" \\\".bar\\\"\\n 1628854852.937640 [0 172.17.0.1:60222] \\\"FLUSHDB\\\"\\n 1628854852.940467 [0 172.17.0.1:60226] \\\"JSON.SET\\\" \\\"obj\\\" \\\".\\\" \\\"{\\\\\\\"str\\\\\\\":\\\\\\\"string\\\\\\\",\\\\\\\"bTrue\\\\\\\":true}\\\"\\n 1628854852.941928 [0 172.17.0.1:60226] \\\"JSON.SET\\\" \\\"obj\\\" \\\".none\\\" \\\"\\\\\\\"strangle\\\\\\\"\\\" \\\"NX\\\"\\n 1628854852.943441 [0 172.17.0.1:60226] \\\"JSON.GET\\\" \\\"obj\\\" \\\".none\\\"\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h3\",{\"id\":\"references\"},\"References\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"li\",\"href\":\"/howtos/redisjson/using-python\"},\"RedisJSON and Python\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"li\",\"href\":\"/howtos/redisjson/storing-complex-json-document\"},\"How to store and retrieve nested JSON document\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"li\",\"href\":\"/howtos/redisjson/using-nodejs\"},\"Importing JSON data into Redis using NodeJS\"),\" \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"Learn more about \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"li\",\"href\":\"https://oss.redis.com/redisjson/\"},\"RedisJSON\"),\" in the Quickstart tutorial.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"li\",\"href\":\"/howtos/shoppingcart\"},\"How to build shopping cart app using NodeJS and RedisJSON\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"li\",\"href\":\"https://redislabs.com/blog/index-and-query-json-docs-with-redis/\"},\"Indexing, Querying, and Full-Text Search of JSON Documents with Redis\"))));};MDXContent.isMDXComponent=true;\n\n/***/ }),\n\n/***/ 237:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export MDXContext */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MDXProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return createElement; });\n/* unused harmony export useMDXComponents */\n/* unused harmony export withMDXComponents */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0___default.a.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, createElementArgArray);\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, args);\n}\n\n\n\n\n/***/ })\n\n}]);","inputSourceMap":null}