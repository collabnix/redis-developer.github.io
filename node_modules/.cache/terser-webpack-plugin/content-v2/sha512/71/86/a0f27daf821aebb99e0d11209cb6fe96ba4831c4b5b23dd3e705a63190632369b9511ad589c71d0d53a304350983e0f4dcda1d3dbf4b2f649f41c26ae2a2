{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{119:function(e,t,n){\"use strict\";n.r(t),n.d(t,\"frontMatter\",(function(){return o})),n.d(t,\"metadata\",(function(){return c})),n.d(t,\"toc\",(function(){return l})),n.d(t,\"default\",(function(){return u}));var r=n(3),a=n(7),i=(n(0),n(237)),s=(n(238),[\"components\"]),o={id:\"index-redisearch\",title:\"Indexing and Querying with RediSearch\",sidebar_label:\"RediSearch\",slug:\"/develop/node/nodecrashcourse/redisearch\"},c={unversionedId:\"develop/node/node-crash-course/redisearch/index-redisearch\",id:\"develop/node/node-crash-course/redisearch/index-redisearch\",isDocsHomePage:!1,title:\"Indexing and Querying with RediSearch\",description:\"We chose to store our user and location data in Redis Hashes.  Hashes are a great fit for storing domain objects.  Recall that we've chosen to store each user in a Hash whose key contains the user ID.  For example, here's user 852 as seen in RedisInsight:\",source:\"@site/docs/develop/node/node-crash-course/redisearch/index-redisearch.mdx\",slug:\"/develop/node/nodecrashcourse/redisearch\",permalink:\"/develop/node/nodecrashcourse/redisearch\",editUrl:\"https://github.com/redis-developer/redis-developer/edit/master/docs/develop/node/node-crash-course/redisearch/index-redisearch.mdx\",version:\"current\",sidebar_label:\"RediSearch\",sidebar:\"docs\",previous:{title:\"Managing Document Data with RedisJSON\",permalink:\"/develop/node/nodecrashcourse/redisjson\"},next:{title:\"Processing Checkins with Redis Streams\",permalink:\"/develop/node/nodecrashcourse/checkinswithstreams\"}},l=[{value:\"Coding Exercise\",id:\"coding-exercise\",children:[]},{value:\"External Resources\",id:\"external-resources\",children:[]}],d={toc:l};function u(e){var t=e.components,o=Object(a.a)(e,s);return Object(i.b)(\"wrapper\",Object(r.a)({},d,o,{components:t,mdxType:\"MDXLayout\"}),Object(i.b)(\"div\",{class:\"text--center\"},Object(i.b)(\"iframe\",{width:\"560\",height:\"315\",src:\"https://www.youtube.com/embed/HPvP_OJ7h2Q\",frameborder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowfullscreen:!0})),Object(i.b)(\"p\",null,\"We chose to store our user and location data in Redis Hashes.  Hashes are a great fit for storing domain objects.  Recall that we've chosen to store each user in a Hash whose key contains the user ID.  For example, here's user 852 as seen in RedisInsight:\"),Object(i.b)(\"p\",null,Object(i.b)(\"img\",{alt:\"User 852 viewed with RedisInsight\",src:n(487).default})),Object(i.b)(\"p\",null,\"If you're using redis-cli, you can look at user 852 with the \",Object(i.b)(\"inlineCode\",{parentName:\"p\"},\"HGETALL\"),\" command:\"),Object(i.b)(\"pre\",null,Object(i.b)(\"code\",{parentName:\"pre\",className:\"language-bash\"},'127.0.0.1:6379> hgetall ncc:users:852\\n 1) \"id\"\\n 2) \"852\"\\n 3) \"firstName\"\\n 4) \"Dominik\"\\n 5) \"lastName\"\\n 6) \"Schiffmann\"\\n 7) \"email\"\\n 8) \"dominik.schiffmann@example.com\"\\n 9) \"password\"\\n10) \"$2b$05$xbkSwODz1tWqdE7xWb393eiYIQcdiEdbbvhK88.Xr9sW7WxdI26qi\"\\n11) \"numCheckins\"\\n12) \"9353\"\\n13) \"lastCheckin\"\\n14) \"1488517098363\"\\n15) \"lastSeenAt\"\\n16) \"124\"\\n')),Object(i.b)(\"p\",null,\"Storing data in Hashes means that we can easily and efficiently retrieve the contents of the Hash, provided that we know the key.  So it's trivial to look up user 852, but how can we perform any of the following operations?\"),Object(i.b)(\"ul\",null,Object(i.b)(\"li\",{parentName:\"ul\"},\"Get the user whose email address is \",Object(i.b)(\"inlineCode\",{parentName:\"li\"},\"dominik.schiffmann@example.com\"),\".\"),Object(i.b)(\"li\",{parentName:\"ul\"},\"Find all users that were last seen at location 124.\"),Object(i.b)(\"li\",{parentName:\"ul\"},\"Find all the users who have between 1000 and 3000 checkins.\"),Object(i.b)(\"li\",{parentName:\"ul\"},\"Find all locations within a 10 mile radius of a given latitude / longitude coordinate and which have at least a 3 star rating.\")),Object(i.b)(\"p\",null,\"Redis is a key/value database.  This means that its data model is optimized for retrieval by key.  The queries above can't be resolved by knowing just the Hash key - we need some other mechanism to index our data.  \"),Object(i.b)(\"p\",null,'Traditionally in a key/value database, this has meant adding code to create and manually update indexes.  For example to resolve the query \"which user has the email address ',Object(i.b)(\"inlineCode\",{parentName:\"p\"},\"dominik.schiffmann@example.com\"),\"\\\", we might create a new String key containing that email address, with the value being the user's ID:\"),Object(i.b)(\"pre\",null,Object(i.b)(\"code\",{parentName:\"pre\",className:\"language-bash\"},\"127.0.0.1:6379> set ncc:users:byemail:dominik.schiffmann@example.com 852\\nOK\\n\")),Object(i.b)(\"p\",null,\"Now, if we want to get Dominik's user details given only his email address, we have a two step process to follow:\"),Object(i.b)(\"ol\",null,Object(i.b)(\"li\",{parentName:\"ol\"},\"Look up the user ID for the user associated with the email address we have.\"),Object(i.b)(\"li\",{parentName:\"ol\"},\"Use that user ID to retrieve the values from the user's Hash.\")),Object(i.b)(\"pre\",null,Object(i.b)(\"code\",{parentName:\"pre\",className:\"language-bash\"},'127.0.0.1:6379> get ncc:users:byemail:dominik.schiffmann@example.com\\n\"852\"\\n127.0.0.1:6379> hgetall ncc:users:852\\n 1) \"id\"\\n 2) \"852\"\\n 3) \"firstName\"\\n 4) \"Dominik\"\\n 5) \"lastName\"\\n 6) \"Schiffmann\"\\n 7) \"email\"\\n 8) \"dominik.schiffmann@example.com\"\\n 9) \"password\"\\n10) \"$2b$05$xbkSwODz1tWqdE7xWb393eiYIQcdiEdbbvhK88.Xr9sW7WxdI26qi\"\\n11) \"numCheckins\"\\n12) \"9353\"\\n13) \"lastCheckin\"\\n14) \"1488517098363\"\\n15) \"lastSeenAt\"\\n16) \"124\"\\n')),Object(i.b)(\"p\",null,\"We'd also need to keep this information up to date and in sync with changes to the Hash at \",Object(i.b)(\"inlineCode\",{parentName:\"p\"},\"ncc:users:852\"),\" ourselves in our application code. \"),Object(i.b)(\"p\",null,\"Other sorts of secondary indexes can be created using other Redis data types.  For example, we might \",Object(i.b)(\"a\",{parentName:\"p\",href:\"https://redis.io/topics/indexes\"},\"use a Redis Sorted Set as a secondary index\"),', allowing us to perform range queries such as \"Find all the users who have between 1000 and 3000 checkins\".  Again, we\\'d have to populate and maintain this extra data structure ourselves in the application code.'),Object(i.b)(\"p\",null,'The RediSearch module solves all of these problems for us and more.  It is an indexing, querying and full-text search engine for Redis that automatically keeps track of changes to data in indexed Hashes.  RediSearch provides a flexible query language to answer questions such as \"Find me all the gyms with at least a 3 star rating and more than 200 checkins within 10 miles of Oakland, California\" without adding code to build or maintain secondary data structures in our application.'),Object(i.b)(\"p\",null,\"Watch the video to see how RediSearch is used in our example Node.js application.\"),Object(i.b)(\"h2\",{id:\"coding-exercise\"},\"Coding Exercise\"),Object(i.b)(\"p\",null,\"In this exercise, you'll finish implementing a route that uses RediSearch to return all users whose last checkin was at a given location.\"),Object(i.b)(\"p\",null,\"Open the \",Object(i.b)(\"inlineCode\",{parentName:\"p\"},\"node-js-crash-course\"),\" folder with your IDE, and find the file \",Object(i.b)(\"inlineCode\",{parentName:\"p\"},\"src/routes/user_routes.js\"),\".\"),Object(i.b)(\"p\",null,\"In this file, you'll see a partly implemented route \",Object(i.b)(\"inlineCode\",{parentName:\"p\"},\"/users/at/:locationId\"),\".  To complete this exercise, you'll need to replace this line:\"),Object(i.b)(\"pre\",null,Object(i.b)(\"code\",{parentName:\"pre\",className:\"language-javascript\"},\"const searchResults = await redis.performSearch(\\n  redis.getKeyName('usersidx'),\\n  'TODO... YOUR QUERY HERE',\\n);\\n\")),Object(i.b)(\"p\",null,'with one containing the correct RediSearch query to return users whose \"lastSeenAt\" field is set to the value of locationId.  You\\'ll need to use the \"numeric range\" syntax for this, as the \"lastSeenAt\" field was indexed as a number.  Be sure to check out the ',Object(i.b)(\"a\",{parentName:\"p\",href:\"https://oss.redis.com/redisearch/Query_Syntax/\"},\"Query Syntax documentation\"),\" for RediSearch to get help with this.\"),Object(i.b)(\"p\",null,\"To try your code, ensure that the API Server component is running:\"),Object(i.b)(\"pre\",null,Object(i.b)(\"code\",{parentName:\"pre\",className:\"language-javascript\"},\"$ npm run dev\\n\")),Object(i.b)(\"p\",null,\"(remember, this will use nodemon to restart the server any time you save a code change).\"),Object(i.b)(\"p\",null,\"Then, point your browser at \",Object(i.b)(\"inlineCode\",{parentName:\"p\"},\"http://localhost:8081/api/users/at/33\"),\".  If your query is correct, you should see output similar to the following (actual users may differ, just ensure that the value of \",Object(i.b)(\"inlineCode\",{parentName:\"p\"},\"lastSeenAt\"),\" for each matches the location ID you provided - 33 in this case):\"),Object(i.b)(\"pre\",null,Object(i.b)(\"code\",{parentName:\"pre\",className:\"language-json\"},'[\\n  {\\n    \"id\": \"238\",\\n    \"firstName\": \"Jonas\",\\n    \"lastName\": \"Nielsen\",\\n    \"numCheckins\": \"7149\",\\n    \"lastCheckin\": \"1515248028256\",\\n    \"lastSeenAt\": \"33\"\\n  },\\n  {\\n    \"id\": \"324\",\\n    \"firstName\": \"Frans\",\\n    \"lastName\": \"Potze\",\\n    \"numCheckins\": \"8623\",\\n    \"lastCheckin\": \"1515976232073\",\\n    \"lastSeenAt\": \"33\"\\n  },\\n  ...\\n]\\n')),Object(i.b)(\"p\",null,\"To help you develop your query, use the RediSearch view in RedisInsight, or the FT.SEARCH command in redis-cli.  Here's an example of how to enter a query with RedisInsight (I'm looking for users with the first name \\\"Laura\\\"):\"),Object(i.b)(\"p\",null,Object(i.b)(\"img\",{alt:\"RediSearch Query Example\",src:n(488).default})),Object(i.b)(\"p\",null,\"Remember to select the \",Object(i.b)(\"inlineCode\",{parentName:\"p\"},\"ncc:usersidx\"),\" index, as you're working with users data here.\"),Object(i.b)(\"h2\",{id:\"external-resources\"},\"External Resources\"),Object(i.b)(\"p\",null,\"Querying, Index, and Full-Text Search in Redis:\"),Object(i.b)(\"div\",{class:\"text--center\"},Object(i.b)(\"iframe\",{width:\"560\",height:\"315\",src:\"https://www.youtube.com/embed/B10nHEdW3NA\",frameborder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowfullscreen:!0})),Object(i.b)(\"p\",null,\"Finding Bigfoot RESTfuly with Express + RediSearch:\"),Object(i.b)(\"div\",{class:\"text--center\"},Object(i.b)(\"iframe\",{width:\"560\",height:\"315\",src:\"https://www.youtube.com/embed/eJFwsNfi_MI\",frameborder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowfullscreen:!0})),Object(i.b)(\"p\",null,\"Other resources:\"),Object(i.b)(\"ul\",null,Object(i.b)(\"li\",{parentName:\"ul\"},Object(i.b)(\"a\",{parentName:\"li\",href:\"https://university.redis.com/courses/ru203/\"},\"RU203, Querying, Indexing, and Full-Text Search\"),\" at Redis University \"),Object(i.b)(\"li\",{parentName:\"ul\"},Object(i.b)(\"a\",{parentName:\"li\",href:\"https://redisearch.io/\"},\"RediSearch\"),\", official home page\"),Object(i.b)(\"li\",{parentName:\"ul\"},Object(i.b)(\"a\",{parentName:\"li\",href:\"https://github.com/RediSearch/redisearch-getting-started\"},\"RediSearch Getting Started Tutorial\"))))}u.isMDXComponent=!0},237:function(e,t,n){\"use strict\";n.d(t,\"a\",(function(){return u})),n.d(t,\"b\",(function(){return b}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),d=function(e){var t=a.a.useContext(l),n=t;return e&&(n=\"function\"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=d(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:\"code\",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},p=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),u=d(n),p=r,b=u[\"\".concat(s,\".\").concat(p)]||u[p]||h[p]||i;return n?a.a.createElement(b,o(o({ref:t},l),{},{components:n})):a.a.createElement(b,o({ref:t},l))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if(\"string\"==typeof e||r){var i=n.length,s=new Array(i);s[0]=p;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType=\"string\"==typeof e?e:r,s[1]=o;for(var l=2;l<i;l++)s[l]=n[l];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,n)}p.displayName=\"MDXCreateElement\"},238:function(e,t,n){\"use strict\";n.d(t,\"b\",(function(){return i})),n.d(t,\"a\",(function(){return s}));var r=n(20),a=n(246);function i(){var e=Object(r.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?\"/\":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,r){var i=void 0===r?{}:r,s=i.forcePrependBaseUrl,o=void 0!==s&&s,c=i.absolute,l=void 0!==c&&c;if(!n)return n;if(n.startsWith(\"#\"))return n;if(Object(a.b)(n))return n;if(o)return t+n;var d=n.startsWith(t)?n:t+n.replace(/^\\//,\"\");return l?e+d:d}(i,n,e,t)}}}function s(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},246:function(e,t,n){\"use strict\";function r(e){return!0===/^(\\w*:|\\/\\/)/.test(e)}function a(e){return void 0!==e&&!r(e)}n.d(t,\"b\",(function(){return r})),n.d(t,\"a\",(function(){return a}))},487:function(e,t,n){\"use strict\";n.r(t),t.default=n.p+\"assets/images/insight_user_852-a8c42050d96696573fac10e960edb705.png\"},488:function(e,t,n){\"use strict\";n.r(t),t.default=n.p+\"assets/images/redisearch_redis_insight-3d7b8c7eb4f04839f36ddfced33c908c.png\"}}]);","name":"4141cbdd.6fb0d772.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[51],{\n\n/***/ 119:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frontMatter\", function() { return frontMatter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metadata\", function() { return metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toc\", function() { return toc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MDXContent; });\n/* harmony import */ var _Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);\n/* harmony import */ var _Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(237);\n/* harmony import */ var _docusaurus_useBaseUrl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(238);\nvar _excluded=[\"components\"];var frontMatter={id:'index-redisearch',title:'Indexing and Querying with RediSearch',sidebar_label:'RediSearch',slug:'/develop/node/nodecrashcourse/redisearch'};var metadata={\"unversionedId\":\"develop/node/node-crash-course/redisearch/index-redisearch\",\"id\":\"develop/node/node-crash-course/redisearch/index-redisearch\",\"isDocsHomePage\":false,\"title\":\"Indexing and Querying with RediSearch\",\"description\":\"We chose to store our user and location data in Redis Hashes.  Hashes are a great fit for storing domain objects.  Recall that we've chosen to store each user in a Hash whose key contains the user ID.  For example, here's user 852 as seen in RedisInsight:\",\"source\":\"@site/docs/develop/node/node-crash-course/redisearch/index-redisearch.mdx\",\"slug\":\"/develop/node/nodecrashcourse/redisearch\",\"permalink\":\"/develop/node/nodecrashcourse/redisearch\",\"editUrl\":\"https://github.com/redis-developer/redis-developer/edit/master/docs/develop/node/node-crash-course/redisearch/index-redisearch.mdx\",\"version\":\"current\",\"sidebar_label\":\"RediSearch\",\"sidebar\":\"docs\",\"previous\":{\"title\":\"Managing Document Data with RedisJSON\",\"permalink\":\"/develop/node/nodecrashcourse/redisjson\"},\"next\":{\"title\":\"Processing Checkins with Redis Streams\",\"permalink\":\"/develop/node/nodecrashcourse/checkinswithstreams\"}};/* @jsxRuntime classic */ /* @jsx mdx */var toc=[{value:'Coding Exercise',id:'coding-exercise',children:[]},{value:'External Resources',id:'external-resources',children:[]}];var layoutProps={toc:toc};var MDXLayout=\"wrapper\";function MDXContent(_ref){var components=_ref.components,props=Object(_Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[/* default */ \"a\"])(_ref,_excluded);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(MDXLayout,Object(_Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({},layoutProps,props,{components:components,mdxType:\"MDXLayout\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",{class:\"text--center\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"iframe\",{width:\"560\",height:\"315\",src:\"https://www.youtube.com/embed/HPvP_OJ7h2Q\",frameborder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowfullscreen:true})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"We chose to store our user and location data in Redis Hashes.  Hashes are a great fit for storing domain objects.  Recall that we've chosen to store each user in a Hash whose key contains the user ID.  For example, here's user 852 as seen in RedisInsight:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"img\",{alt:\"User 852 viewed with RedisInsight\",src:__webpack_require__(487).default})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"If you're using redis-cli, you can look at user 852 with the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"HGETALL\"),\" command:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},\"127.0.0.1:6379> hgetall ncc:users:852\\n 1) \\\"id\\\"\\n 2) \\\"852\\\"\\n 3) \\\"firstName\\\"\\n 4) \\\"Dominik\\\"\\n 5) \\\"lastName\\\"\\n 6) \\\"Schiffmann\\\"\\n 7) \\\"email\\\"\\n 8) \\\"dominik.schiffmann@example.com\\\"\\n 9) \\\"password\\\"\\n10) \\\"$2b$05$xbkSwODz1tWqdE7xWb393eiYIQcdiEdbbvhK88.Xr9sW7WxdI26qi\\\"\\n11) \\\"numCheckins\\\"\\n12) \\\"9353\\\"\\n13) \\\"lastCheckin\\\"\\n14) \\\"1488517098363\\\"\\n15) \\\"lastSeenAt\\\"\\n16) \\\"124\\\"\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Storing data in Hashes means that we can easily and efficiently retrieve the contents of the Hash, provided that we know the key.  So it's trivial to look up user 852, but how can we perform any of the following operations?\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"Get the user whose email address is \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"dominik.schiffmann@example.com\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"Find all users that were last seen at location 124.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"Find all the users who have between 1000 and 3000 checkins.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"Find all locations within a 10 mile radius of a given latitude / longitude coordinate and which have at least a 3 star rating.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Redis is a key/value database.  This means that its data model is optimized for retrieval by key.  The queries above can't be resolved by knowing just the Hash key - we need some other mechanism to index our data.  \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Traditionally in a key/value database, this has meant adding code to create and manually update indexes.  For example to resolve the query \\\"which user has the email address \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"dominik.schiffmann@example.com\"),\"\\\", we might create a new String key containing that email address, with the value being the user's ID:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},\"127.0.0.1:6379> set ncc:users:byemail:dominik.schiffmann@example.com 852\\nOK\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Now, if we want to get Dominik's user details given only his email address, we have a two step process to follow:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ol\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},\"Look up the user ID for the user associated with the email address we have.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ol\"},\"Use that user ID to retrieve the values from the user's Hash.\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},\"127.0.0.1:6379> get ncc:users:byemail:dominik.schiffmann@example.com\\n\\\"852\\\"\\n127.0.0.1:6379> hgetall ncc:users:852\\n 1) \\\"id\\\"\\n 2) \\\"852\\\"\\n 3) \\\"firstName\\\"\\n 4) \\\"Dominik\\\"\\n 5) \\\"lastName\\\"\\n 6) \\\"Schiffmann\\\"\\n 7) \\\"email\\\"\\n 8) \\\"dominik.schiffmann@example.com\\\"\\n 9) \\\"password\\\"\\n10) \\\"$2b$05$xbkSwODz1tWqdE7xWb393eiYIQcdiEdbbvhK88.Xr9sW7WxdI26qi\\\"\\n11) \\\"numCheckins\\\"\\n12) \\\"9353\\\"\\n13) \\\"lastCheckin\\\"\\n14) \\\"1488517098363\\\"\\n15) \\\"lastSeenAt\\\"\\n16) \\\"124\\\"\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"We'd also need to keep this information up to date and in sync with changes to the Hash at \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"ncc:users:852\"),\" ourselves in our application code. \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Other sorts of secondary indexes can be created using other Redis data types.  For example, we might \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"p\",\"href\":\"https://redis.io/topics/indexes\"},\"use a Redis Sorted Set as a secondary index\"),\", allowing us to perform range queries such as \\\"Find all the users who have between 1000 and 3000 checkins\\\".  Again, we'd have to populate and maintain this extra data structure ourselves in the application code.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"The RediSearch module solves all of these problems for us and more.  It is an indexing, querying and full-text search engine for Redis that automatically keeps track of changes to data in indexed Hashes.  RediSearch provides a flexible query language to answer questions such as \\\"Find me all the gyms with at least a 3 star rating and more than 200 checkins within 10 miles of Oakland, California\\\" without adding code to build or maintain secondary data structures in our application.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Watch the video to see how RediSearch is used in our example Node.js application.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"coding-exercise\"},\"Coding Exercise\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"In this exercise, you'll finish implementing a route that uses RediSearch to return all users whose last checkin was at a given location.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Open the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"node-js-crash-course\"),\" folder with your IDE, and find the file \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"src/routes/user_routes.js\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"In this file, you'll see a partly implemented route \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"/users/at/:locationId\"),\".  To complete this exercise, you'll need to replace this line:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-javascript\"},\"const searchResults = await redis.performSearch(\\n  redis.getKeyName('usersidx'),\\n  'TODO... YOUR QUERY HERE',\\n);\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"with one containing the correct RediSearch query to return users whose \\\"lastSeenAt\\\" field is set to the value of locationId.  You'll need to use the \\\"numeric range\\\" syntax for this, as the \\\"lastSeenAt\\\" field was indexed as a number.  Be sure to check out the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"p\",\"href\":\"https://oss.redis.com/redisearch/Query_Syntax/\"},\"Query Syntax documentation\"),\" for RediSearch to get help with this.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"To try your code, ensure that the API Server component is running:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-javascript\"},\"$ npm run dev\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"(remember, this will use nodemon to restart the server any time you save a code change).\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Then, point your browser at \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"http://localhost:8081/api/users/at/33\"),\".  If your query is correct, you should see output similar to the following (actual users may differ, just ensure that the value of \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"lastSeenAt\"),\" for each matches the location ID you provided - 33 in this case):\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-json\"},\"[\\n  {\\n    \\\"id\\\": \\\"238\\\",\\n    \\\"firstName\\\": \\\"Jonas\\\",\\n    \\\"lastName\\\": \\\"Nielsen\\\",\\n    \\\"numCheckins\\\": \\\"7149\\\",\\n    \\\"lastCheckin\\\": \\\"1515248028256\\\",\\n    \\\"lastSeenAt\\\": \\\"33\\\"\\n  },\\n  {\\n    \\\"id\\\": \\\"324\\\",\\n    \\\"firstName\\\": \\\"Frans\\\",\\n    \\\"lastName\\\": \\\"Potze\\\",\\n    \\\"numCheckins\\\": \\\"8623\\\",\\n    \\\"lastCheckin\\\": \\\"1515976232073\\\",\\n    \\\"lastSeenAt\\\": \\\"33\\\"\\n  },\\n  ...\\n]\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"To help you develop your query, use the RediSearch view in RedisInsight, or the FT.SEARCH command in redis-cli.  Here's an example of how to enter a query with RedisInsight (I'm looking for users with the first name \\\"Laura\\\"):\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"img\",{alt:\"RediSearch Query Example\",src:__webpack_require__(488).default})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Remember to select the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"ncc:usersidx\"),\" index, as you're working with users data here.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"external-resources\"},\"External Resources\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Querying, Index, and Full-Text Search in Redis:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",{class:\"text--center\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"iframe\",{width:\"560\",height:\"315\",src:\"https://www.youtube.com/embed/B10nHEdW3NA\",frameborder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowfullscreen:true})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Finding Bigfoot RESTfuly with Express + RediSearch:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",{class:\"text--center\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"iframe\",{width:\"560\",height:\"315\",src:\"https://www.youtube.com/embed/eJFwsNfi_MI\",frameborder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowfullscreen:true})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Other resources:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"li\",\"href\":\"https://university.redis.com/courses/ru203/\"},\"RU203, Querying, Indexing, and Full-Text Search\"),\" at Redis University \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"li\",\"href\":\"https://redisearch.io/\"},\"RediSearch\"),\", official home page\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"li\",\"href\":\"https://github.com/RediSearch/redisearch-getting-started\"},\"RediSearch Getting Started Tutorial\"))));};MDXContent.isMDXComponent=true;\n\n/***/ }),\n\n/***/ 237:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export MDXContext */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MDXProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return createElement; });\n/* unused harmony export useMDXComponents */\n/* unused harmony export withMDXComponents */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0___default.a.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, createElementArgArray);\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, args);\n}\n\n\n\n\n/***/ }),\n\n/***/ 238:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return useBaseUrlUtils; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return useBaseUrl; });\n/* harmony import */ var _useDocusaurusContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(20);\n/* harmony import */ var _isInternalUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(246);\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */function addBaseUrl(siteUrl,baseUrl,url,_temp){var _ref=_temp===void 0?{}:_temp,_ref$forcePrependBase=_ref.forcePrependBaseUrl,forcePrependBaseUrl=_ref$forcePrependBase===void 0?false:_ref$forcePrependBase,_ref$absolute=_ref.absolute,absolute=_ref$absolute===void 0?false:_ref$absolute;if(!url){return url;}// it never makes sense to add a base url to a local anchor url\nif(url.startsWith('#')){return url;}// it never makes sense to add a base url to an url with a protocol\nif(Object(_isInternalUrl__WEBPACK_IMPORTED_MODULE_1__[/* hasProtocol */ \"b\"])(url)){return url;}if(forcePrependBaseUrl){return baseUrl+url;}// We should avoid adding the baseurl twice if it's already there\nvar shouldAddBaseUrl=!url.startsWith(baseUrl);var basePath=shouldAddBaseUrl?baseUrl+url.replace(/^\\//,''):url;return absolute?siteUrl+basePath:basePath;}function useBaseUrlUtils(){var _useDocusaurusContext=Object(_useDocusaurusContext__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(),_useDocusaurusContext2=_useDocusaurusContext.siteConfig;_useDocusaurusContext2=_useDocusaurusContext2===void 0?{}:_useDocusaurusContext2;var _useDocusaurusContext3=_useDocusaurusContext2.baseUrl,baseUrl=_useDocusaurusContext3===void 0?'/':_useDocusaurusContext3,siteUrl=_useDocusaurusContext2.url;return{withBaseUrl:function withBaseUrl(url,options){return addBaseUrl(siteUrl,baseUrl,url,options);}};}function useBaseUrl(url,options){if(options===void 0){options={};}var _useBaseUrlUtils=useBaseUrlUtils(),withBaseUrl=_useBaseUrlUtils.withBaseUrl;return withBaseUrl(url,options);}\n\n/***/ }),\n\n/***/ 246:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return hasProtocol; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return isInternalUrl; });\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */function hasProtocol(url){return /^(\\w*:|\\/\\/)/.test(url)===true;}function isInternalUrl(url){return typeof url!=='undefined'&&!hasProtocol(url);}\n\n/***/ }),\n\n/***/ 487:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (__webpack_require__.p + \"assets/images/insight_user_852-a8c42050d96696573fac10e960edb705.png\");\n\n/***/ }),\n\n/***/ 488:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (__webpack_require__.p + \"assets/images/redisearch_redis_insight-3d7b8c7eb4f04839f36ddfced33c908c.png\");\n\n/***/ })\n\n}]);","inputSourceMap":null}