{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{237:function(e,n,t){\"use strict\";t.d(n,\"a\",(function(){return u})),t.d(n,\"b\",(function(){return d}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var b=o.a.createContext({}),c=function(e){var n=o.a.useContext(b),t=n;return e&&(t=\"function\"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=c(e.components);return o.a.createElement(b.Provider,{value:n},e.children)},m={inlineCode:\"code\",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},p=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,b=s(e,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),u=c(t),p=r,d=u[\"\".concat(i,\".\").concat(p)]||u[p]||m[p]||a;return t?o.a.createElement(d,l(l({ref:n},b),{},{components:t})):o.a.createElement(d,l({ref:n},b))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if(\"string\"==typeof e||r){var a=t.length,i=new Array(a);i[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType=\"string\"==typeof e?e:r,i[1]=l;for(var b=2;b<a;b++)i[b]=t[b];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,t)}p.displayName=\"MDXCreateElement\"},83:function(e,n,t){\"use strict\";t.r(n),t.d(n,\"frontMatter\",(function(){return l})),t.d(n,\"metadata\",(function(){return s})),t.d(n,\"toc\",(function(){return b})),t.d(n,\"default\",(function(){return u}));var r=t(3),o=t(7),a=(t(0),t(237)),i=[\"components\"],l={id:\"index-aggregation\",title:\"8. Aggregations\",sidebar_label:\"8. Aggregation\",slug:\"/howtos/moviesdatabase/aggregation\"},s={unversionedId:\"howtos/moviesdatabase/aggregation/index-aggregation\",id:\"howtos/moviesdatabase/aggregation/index-aggregation\",isDocsHomePage:!1,title:\"8. Aggregations\",description:'A common need for applications, in addition to retrieving information as a document list, like you have done with the \"FT.SEARCH\" command, is to do some \"aggregation\".',source:\"@site/docs/howtos/moviesdatabase/aggregation/index-aggregation.mdx\",slug:\"/howtos/moviesdatabase/aggregation\",permalink:\"/howtos/moviesdatabase/aggregation\",editUrl:\"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/moviesdatabase/aggregation/index-aggregation.mdx\",version:\"current\",sidebar_label:\"8. Aggregation\",sidebar:\"docs\",previous:{title:\"7. Query Movies\",permalink:\"/howtos/moviesdatabase/querymovies\"},next:{title:\"9. Advanced Option\",permalink:\"/howtos/moviesdatabase/advancedoption\"}},b=[{value:\"Group By &amp; Sort By\",id:\"group-by--sort-by\",children:[]},{value:\"Apply Functions\",id:\"apply-functions\",children:[]},{value:\"Filter\",id:\"filter\",children:[]}],c={toc:b};function u(e){var n=e.components,t=Object(o.a)(e,i);return Object(a.b)(\"wrapper\",Object(r.a)({},c,t,{components:n,mdxType:\"MDXLayout\"}),Object(a.b)(\"p\",null,'A common need for applications, in addition to retrieving information as a document list, like you have done with the \"',Object(a.b)(\"inlineCode\",{parentName:\"p\"},\"FT.SEARCH\"),'\" command, is to do some \"aggregation\".'),Object(a.b)(\"p\",null,\"For example if we look at the movie documents, you may want to retrieve the number of movies grouped by release year starting with the most recent ones.\"),Object(a.b)(\"p\",null,\"For this, RediSearch provides the FT.AGGREGATE command, with aggregations described as a data processing pipeline.\"),Object(a.b)(\"p\",null,\"Let's check out some examples.\"),Object(a.b)(\"h2\",{id:\"group-by--sort-by\"},\"Group By & Sort By\"),Object(a.b)(\"details\",null,Object(a.b)(\"summary\",null,Object(a.b)(\"i\",null,Object(a.b)(\"b\",null,\"Number of movies by year\"))),Object(a.b)(\"pre\",null,Object(a.b)(\"code\",{parentName:\"pre\"},'> FT.AGGREGATE \"idx:movie\" \"*\" GROUPBY 1 @release_year REDUCE COUNT 0 AS nb_of_movies\\n\\n 1) (integer) 60\\n 2) 1) \"release_year\"\\n    2) \"1964\"\\n    3) \"nb_of_movies\"\\n    4) \"9\"\\n ...   \\n 61) 1) \"release_year\"\\n    2) \"2010\"\\n    3) \"nb_of_movies\"\\n    4) \"15\"\\n')),Object(a.b)(\"hr\",null)),Object(a.b)(\"details\",null,Object(a.b)(\"summary\",null,Object(a.b)(\"i\",null,Object(a.b)(\"b\",null,\"Number of movies by year from the most recent to the oldest\"))),Object(a.b)(\"pre\",null,Object(a.b)(\"code\",{parentName:\"pre\"},'> FT.AGGREGATE \"idx:movie\" \"*\" GROUPBY 1 @release_year REDUCE COUNT 0 AS nb_of_movies SORTBY 2 @release_year DESC \\n\\n1) (integer) 60\\n 2) 1) \"release_year\"\\n    2) \"2019\"\\n    3) \"nb_of_movies\"\\n    4) \"14\"\\n ...   \\n11) 1) \"release_year\"\\n    2) \"2010\"\\n    3) \"nb_of_movies\"\\n    4) \"15\"\\n')),Object(a.b)(\"hr\",null)),Object(a.b)(\"details\",null,Object(a.b)(\"summary\",null,Object(a.b)(\"i\",null,Object(a.b)(\"b\",null,\"Number of movies by genre, with the total number of votes, and average rating\"))),Object(a.b)(\"pre\",null,Object(a.b)(\"code\",{parentName:\"pre\"},'> FT.AGGREGATE idx:movie \"*\" GROUPBY 1 @genre REDUCE COUNT 0 AS nb_of_movies REDUCE SUM 1 votes AS nb_of_votes REDUCE AVG 1 rating AS avg_rating SORTBY 4 @avg_rating DESC @nb_of_votes DESC\\n\\n\\n 1) (integer) 26\\n 2) 1) \"genre\"\\n    2) \"fantasy\"\\n    3) \"nb_of_movies\"\\n    4) \"1\"\\n    5) \"nb_of_votes\"\\n    6) \"1500090\"\\n    7) \"avg_rating\"\\n    8) \"8.8\"\\n...\\n11) 1) \"genre\"\\n    2) \"romance\"\\n    3) \"nb_of_movies\"\\n    4) \"2\"\\n    5) \"nb_of_votes\"\\n    6) \"746\"\\n    7) \"avg_rating\"\\n    8) \"6.65\"\\n')),Object(a.b)(\"hr\",null)),Object(a.b)(\"details\",null,Object(a.b)(\"summary\",null,Object(a.b)(\"i\",null,Object(a.b)(\"b\",null,\"Count the number of females by country sorted from the biggest to smallest number.\"))),Object(a.b)(\"pre\",null,Object(a.b)(\"code\",{parentName:\"pre\"},'> FT.AGGREGATE idx:user \"@gender:{female}\" GROUPBY 1 @country REDUCE COUNT 0 AS nb_of_users SORTBY 2 @nb_of_users DESC\\n\\n 1) (integer) 193\\n 2) 1) \"country\"\\n    2) \"china\"\\n    3) \"nb_of_users\"\\n    4) \"537\"\\n...\\n11) 1) \"country\"\\n    2) \"ukraine\"\\n    3) \"nb_of_users\"\\n    4) \"72\"\\n')),Object(a.b)(\"hr\",null)),Object(a.b)(\"h2\",{id:\"apply-functions\"},\"Apply Functions\"),Object(a.b)(\"details\",null,Object(a.b)(\"summary\",null,Object(a.b)(\"i\",null,Object(a.b)(\"b\",null,\"Number of logins per year and month\"))),Object(a.b)(\"p\",null,\"The \",Object(a.b)(\"inlineCode\",{parentName:\"p\"},\"idx:user\"),\" index contains the last_login field. This field stores the last login time as an EPOC timestamp.\"),Object(a.b)(\"p\",null,\"RediSearch aggregation allows you to apply transformations to each record. This is done using the \",Object(a.b)(\"a\",{parentName:\"p\",href:\"https://oss.redislabs.com/redisearch/Aggregations/#apply_expressions\"},\"APPLY\"),\" parameter.\"),Object(a.b)(\"p\",null,\"For this example you have to use a \",Object(a.b)(\"a\",{parentName:\"p\",href:\"https://oss.redislabs.com/redisearch/Aggregations/#list_of_datetime_apply_functions\"},\"date/time\"),\" function to extract the month and year from the timestamp.\"),Object(a.b)(\"pre\",null,Object(a.b)(\"code\",{parentName:\"pre\"},'> FT.AGGREGATE idx:user * APPLY year(@last_login) AS year APPLY \"monthofyear(@last_login) + 1\" AS month GROUPBY 2 @year @month REDUCE count 0 AS num_login SORTBY 4 @year ASC @month ASC\\n\\n 1) (integer) 13\\n 2) 1) \"year\"\\n    2) \"2019\"\\n    3) \"month\"\\n    4) \"9\"\\n    5) \"num_login\"\\n    6) \"230\"\\n...\\n14) 1) \"year\"\\n    2) \"2020\"\\n    3) \"month\"\\n    4) \"9\"\\n    5) \"num_login\"\\n    6) \"271\"\\n\\n')),Object(a.b)(\"hr\",null)),Object(a.b)(\"details\",null,Object(a.b)(\"summary\",null,Object(a.b)(\"i\",null,Object(a.b)(\"b\",null,\"Number of logins per weekday\"))),Object(a.b)(\"p\",null,\"Using the date/time Apply functions it is possible to extract the day of the week from the timestamp, so let's see how the logins are distributed over the week.\"),Object(a.b)(\"pre\",null,Object(a.b)(\"code\",{parentName:\"pre\"},'> FT.AGGREGATE idx:user * APPLY \"dayofweek(@last_login) +1\" AS dayofweek GROUPBY 1 @dayofweek REDUCE count 0 AS num_login SORTBY 2 @dayofweek ASC\\n\\n1) (integer) 7\\n2) 1) \"dayofweek\"\\n   2) \"1\"\\n   3) \"num_login\"\\n   4) \"815\"\\n...\\n8) 1) \"dayofweek\"\\n   2) \"7\"\\n   3) \"num_login\"\\n   4) \"906\"\\n\\n')),Object(a.b)(\"hr\",null)),Object(a.b)(\"h2\",{id:\"filter\"},\"Filter\"),Object(a.b)(\"p\",null,\"In the previous example you used the \",Object(a.b)(\"inlineCode\",{parentName:\"p\"},\"query string\"),\" parameter to select all documents (\",Object(a.b)(\"inlineCode\",{parentName:\"p\"},'\"*\"'),\") or a subset of the documents (\",Object(a.b)(\"inlineCode\",{parentName:\"p\"},'\"@gender:{female}\"'),\")\"),Object(a.b)(\"p\",null,\"It is also possible to filter the results using a predicate expression relating to values in each result. This is applied post-query and relates to the current state of the pipeline. This is done using the \",Object(a.b)(\"a\",{parentName:\"p\",href:\"https://oss.redislabs.com/redisearch/Aggregations/#filter_expressions\"},\"FILTER\"),\" parameter. \"),Object(a.b)(\"details\",null,Object(a.b)(\"summary\",null,Object(a.b)(\"i\",null,Object(a.b)(\"b\",null,\"Count the number of females by country, except China, with more than 100 users, and sorted from the biggest to lowest number\"))),Object(a.b)(\"pre\",null,Object(a.b)(\"code\",{parentName:\"pre\"},'> FT.AGGREGATE idx:user \"@gender:{female}\" GROUPBY 1 @country  REDUCE COUNT 0 AS nb_of_users  FILTER \"@country!=\\'china\\' && @nb_of_users > 100\" SORTBY 2 @nb_of_users DESC\\n\\n1) (integer) 163\\n2) 1) \"country\"\\n   2) \"indonesia\"\\n   3) \"nb_of_users\"\\n   4) \"309\"\\n...\\n6) 1) \"country\"\\n   2) \"brazil\"\\n   3) \"nb_of_users\"\\n   4) \"108\"\\n')),Object(a.b)(\"hr\",null)),Object(a.b)(\"details\",null,Object(a.b)(\"summary\",null,Object(a.b)(\"i\",null,Object(a.b)(\"b\",null,\"Number of login per month, for year 2020\"))),Object(a.b)(\"p\",null,\"This is similar to the previous query with the addition of a filter on the year.\"),Object(a.b)(\"pre\",null,Object(a.b)(\"code\",{parentName:\"pre\"},'> FT.AGGREGATE idx:user * APPLY year(@last_login) AS year APPLY \"monthofyear(@last_login) + 1\" AS month GROUPBY 2 @year @month REDUCE count 0 AS num_login  FILTER \"@year==2020\" SORTBY 2 @month ASC\\n\\n 1) (integer) 13\\n 2) 1) \"year\"\\n    2) \"2020\"\\n    3) \"month\"\\n    4) \"1\"\\n    5) \"num_login\"\\n    6) \"520\"\\n...\\n10) 1) \"year\"\\n    2) \"2020\"\\n    3) \"month\"\\n    4) \"9\"\\n    5) \"num_login\"\\n    6) \"271\"\\n\\n')),Object(a.b)(\"hr\",null)))}u.isMDXComponent=!0}}]);","name":"11166ec1.925fd888.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[18],{\n\n/***/ 237:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export MDXContext */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MDXProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return createElement; });\n/* unused harmony export useMDXComponents */\n/* unused harmony export withMDXComponents */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0___default.a.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, createElementArgArray);\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, args);\n}\n\n\n\n\n/***/ }),\n\n/***/ 83:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frontMatter\", function() { return frontMatter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metadata\", function() { return metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toc\", function() { return toc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MDXContent; });\n/* harmony import */ var _Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);\n/* harmony import */ var _Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(237);\nvar _excluded=[\"components\"];var frontMatter={id:'index-aggregation',title:'8. Aggregations',sidebar_label:'8. Aggregation',slug:'/howtos/moviesdatabase/aggregation'};var metadata={\"unversionedId\":\"howtos/moviesdatabase/aggregation/index-aggregation\",\"id\":\"howtos/moviesdatabase/aggregation/index-aggregation\",\"isDocsHomePage\":false,\"title\":\"8. Aggregations\",\"description\":\"A common need for applications, in addition to retrieving information as a document list, like you have done with the \\\"FT.SEARCH\\\" command, is to do some \\\"aggregation\\\".\",\"source\":\"@site/docs/howtos/moviesdatabase/aggregation/index-aggregation.mdx\",\"slug\":\"/howtos/moviesdatabase/aggregation\",\"permalink\":\"/howtos/moviesdatabase/aggregation\",\"editUrl\":\"https://github.com/redis-developer/redis-developer/edit/master/docs/howtos/moviesdatabase/aggregation/index-aggregation.mdx\",\"version\":\"current\",\"sidebar_label\":\"8. Aggregation\",\"sidebar\":\"docs\",\"previous\":{\"title\":\"7. Query Movies\",\"permalink\":\"/howtos/moviesdatabase/querymovies\"},\"next\":{\"title\":\"9. Advanced Option\",\"permalink\":\"/howtos/moviesdatabase/advancedoption\"}};/* @jsxRuntime classic */ /* @jsx mdx */var toc=[{value:'Group By &amp; Sort By',id:'group-by--sort-by',children:[]},{value:'Apply Functions',id:'apply-functions',children:[]},{value:'Filter',id:'filter',children:[]}];var layoutProps={toc:toc};var MDXLayout=\"wrapper\";function MDXContent(_ref){var components=_ref.components,props=Object(_Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[/* default */ \"a\"])(_ref,_excluded);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(MDXLayout,Object(_Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({},layoutProps,props,{components:components,mdxType:\"MDXLayout\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"A common need for applications, in addition to retrieving information as a document list, like you have done with the \\\"\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"FT.SEARCH\"),\"\\\" command, is to do some \\\"aggregation\\\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"For example if we look at the movie documents, you may want to retrieve the number of movies grouped by release year starting with the most recent ones.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"For this, RediSearch provides the FT.AGGREGATE command, with aggregations described as a data processing pipeline.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Let's check out some examples.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"group-by--sort-by\"},\"Group By & Sort By\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"details\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"summary\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"i\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"b\",null,\"Number of movies by year\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\"},\"> FT.AGGREGATE \\\"idx:movie\\\" \\\"*\\\" GROUPBY 1 @release_year REDUCE COUNT 0 AS nb_of_movies\\n\\n 1) (integer) 60\\n 2) 1) \\\"release_year\\\"\\n    2) \\\"1964\\\"\\n    3) \\\"nb_of_movies\\\"\\n    4) \\\"9\\\"\\n ...   \\n 61) 1) \\\"release_year\\\"\\n    2) \\\"2010\\\"\\n    3) \\\"nb_of_movies\\\"\\n    4) \\\"15\\\"\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"hr\",null)),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"details\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"summary\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"i\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"b\",null,\"Number of movies by year from the most recent to the oldest\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\"},\"> FT.AGGREGATE \\\"idx:movie\\\" \\\"*\\\" GROUPBY 1 @release_year REDUCE COUNT 0 AS nb_of_movies SORTBY 2 @release_year DESC \\n\\n1) (integer) 60\\n 2) 1) \\\"release_year\\\"\\n    2) \\\"2019\\\"\\n    3) \\\"nb_of_movies\\\"\\n    4) \\\"14\\\"\\n ...   \\n11) 1) \\\"release_year\\\"\\n    2) \\\"2010\\\"\\n    3) \\\"nb_of_movies\\\"\\n    4) \\\"15\\\"\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"hr\",null)),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"details\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"summary\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"i\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"b\",null,\"Number of movies by genre, with the total number of votes, and average rating\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\"},\"> FT.AGGREGATE idx:movie \\\"*\\\" GROUPBY 1 @genre REDUCE COUNT 0 AS nb_of_movies REDUCE SUM 1 votes AS nb_of_votes REDUCE AVG 1 rating AS avg_rating SORTBY 4 @avg_rating DESC @nb_of_votes DESC\\n\\n\\n 1) (integer) 26\\n 2) 1) \\\"genre\\\"\\n    2) \\\"fantasy\\\"\\n    3) \\\"nb_of_movies\\\"\\n    4) \\\"1\\\"\\n    5) \\\"nb_of_votes\\\"\\n    6) \\\"1500090\\\"\\n    7) \\\"avg_rating\\\"\\n    8) \\\"8.8\\\"\\n...\\n11) 1) \\\"genre\\\"\\n    2) \\\"romance\\\"\\n    3) \\\"nb_of_movies\\\"\\n    4) \\\"2\\\"\\n    5) \\\"nb_of_votes\\\"\\n    6) \\\"746\\\"\\n    7) \\\"avg_rating\\\"\\n    8) \\\"6.65\\\"\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"hr\",null)),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"details\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"summary\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"i\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"b\",null,\"Count the number of females by country sorted from the biggest to smallest number.\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\"},\"> FT.AGGREGATE idx:user \\\"@gender:{female}\\\" GROUPBY 1 @country REDUCE COUNT 0 AS nb_of_users SORTBY 2 @nb_of_users DESC\\n\\n 1) (integer) 193\\n 2) 1) \\\"country\\\"\\n    2) \\\"china\\\"\\n    3) \\\"nb_of_users\\\"\\n    4) \\\"537\\\"\\n...\\n11) 1) \\\"country\\\"\\n    2) \\\"ukraine\\\"\\n    3) \\\"nb_of_users\\\"\\n    4) \\\"72\\\"\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"hr\",null)),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"apply-functions\"},\"Apply Functions\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"details\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"summary\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"i\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"b\",null,\"Number of logins per year and month\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"The \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"idx:user\"),\" index contains the last_login field. This field stores the last login time as an EPOC timestamp.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"RediSearch aggregation allows you to apply transformations to each record. This is done using the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"p\",\"href\":\"https://oss.redislabs.com/redisearch/Aggregations/#apply_expressions\"},\"APPLY\"),\" parameter.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"For this example you have to use a \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"p\",\"href\":\"https://oss.redislabs.com/redisearch/Aggregations/#list_of_datetime_apply_functions\"},\"date/time\"),\" function to extract the month and year from the timestamp.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\"},\"> FT.AGGREGATE idx:user * APPLY year(@last_login) AS year APPLY \\\"monthofyear(@last_login) + 1\\\" AS month GROUPBY 2 @year @month REDUCE count 0 AS num_login SORTBY 4 @year ASC @month ASC\\n\\n 1) (integer) 13\\n 2) 1) \\\"year\\\"\\n    2) \\\"2019\\\"\\n    3) \\\"month\\\"\\n    4) \\\"9\\\"\\n    5) \\\"num_login\\\"\\n    6) \\\"230\\\"\\n...\\n14) 1) \\\"year\\\"\\n    2) \\\"2020\\\"\\n    3) \\\"month\\\"\\n    4) \\\"9\\\"\\n    5) \\\"num_login\\\"\\n    6) \\\"271\\\"\\n\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"hr\",null)),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"details\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"summary\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"i\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"b\",null,\"Number of logins per weekday\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Using the date/time Apply functions it is possible to extract the day of the week from the timestamp, so let's see how the logins are distributed over the week.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\"},\"> FT.AGGREGATE idx:user * APPLY \\\"dayofweek(@last_login) +1\\\" AS dayofweek GROUPBY 1 @dayofweek REDUCE count 0 AS num_login SORTBY 2 @dayofweek ASC\\n\\n1) (integer) 7\\n2) 1) \\\"dayofweek\\\"\\n   2) \\\"1\\\"\\n   3) \\\"num_login\\\"\\n   4) \\\"815\\\"\\n...\\n8) 1) \\\"dayofweek\\\"\\n   2) \\\"7\\\"\\n   3) \\\"num_login\\\"\\n   4) \\\"906\\\"\\n\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"hr\",null)),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"filter\"},\"Filter\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"In the previous example you used the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"query string\"),\" parameter to select all documents (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"\\\"*\\\"\"),\") or a subset of the documents (\",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"\\\"@gender:{female}\\\"\"),\")\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"It is also possible to filter the results using a predicate expression relating to values in each result. This is applied post-query and relates to the current state of the pipeline. This is done using the \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"p\",\"href\":\"https://oss.redislabs.com/redisearch/Aggregations/#filter_expressions\"},\"FILTER\"),\" parameter. \"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"details\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"summary\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"i\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"b\",null,\"Count the number of females by country, except China, with more than 100 users, and sorted from the biggest to lowest number\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\"},\"> FT.AGGREGATE idx:user \\\"@gender:{female}\\\" GROUPBY 1 @country  REDUCE COUNT 0 AS nb_of_users  FILTER \\\"@country!='china' && @nb_of_users > 100\\\" SORTBY 2 @nb_of_users DESC\\n\\n1) (integer) 163\\n2) 1) \\\"country\\\"\\n   2) \\\"indonesia\\\"\\n   3) \\\"nb_of_users\\\"\\n   4) \\\"309\\\"\\n...\\n6) 1) \\\"country\\\"\\n   2) \\\"brazil\\\"\\n   3) \\\"nb_of_users\\\"\\n   4) \\\"108\\\"\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"hr\",null)),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"details\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"summary\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"i\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"b\",null,\"Number of login per month, for year 2020\"))),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"This is similar to the previous query with the addition of a filter on the year.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\"},\"> FT.AGGREGATE idx:user * APPLY year(@last_login) AS year APPLY \\\"monthofyear(@last_login) + 1\\\" AS month GROUPBY 2 @year @month REDUCE count 0 AS num_login  FILTER \\\"@year==2020\\\" SORTBY 2 @month ASC\\n\\n 1) (integer) 13\\n 2) 1) \\\"year\\\"\\n    2) \\\"2020\\\"\\n    3) \\\"month\\\"\\n    4) \\\"1\\\"\\n    5) \\\"num_login\\\"\\n    6) \\\"520\\\"\\n...\\n10) 1) \\\"year\\\"\\n    2) \\\"2020\\\"\\n    3) \\\"month\\\"\\n    4) \\\"9\\\"\\n    5) \\\"num_login\\\"\\n    6) \\\"271\\\"\\n\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"hr\",null)));};MDXContent.isMDXComponent=true;\n\n/***/ })\n\n}]);","inputSourceMap":null}