{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{149:function(e,t,r){\"use strict\";r.r(t),r.d(t,\"frontMatter\",(function(){return s})),r.d(t,\"metadata\",(function(){return c})),r.d(t,\"toc\",(function(){return l})),r.d(t,\"default\",(function(){return d}));var n=r(3),o=r(7),i=(r(0),r(237)),a=(r(238),[\"components\"]),s={id:\"index-redisbloom\",title:\"Preventing Duplicate Checkins with RedisBloom\",sidebar_label:\"RedisBloom\",slug:\"/develop/node/nodecrashcourse/redisbloom\"},c={unversionedId:\"develop/node/node-crash-course/redisbloom/index-redisbloom\",id:\"develop/node/node-crash-course/redisbloom/index-redisbloom\",isDocsHomePage:!1,title:\"Preventing Duplicate Checkins with RedisBloom\",description:\"As our application grows in popularity, we're getting more and more checkins from our expanding user base.  We've decided that we want to limit this a bit, and only allow each user to give each location a particular star rating once.  For example, if user 100 checks in at location 73 and rates it 3 stars, we want to reject any further 3 star checkins from them at that location.\",source:\"@site/docs/develop/node/node-crash-course/redisbloom/index-redisbloom.mdx\",slug:\"/develop/node/nodecrashcourse/redisbloom\",permalink:\"/develop/node/nodecrashcourse/redisbloom\",editUrl:\"https://github.com/redis-developer/redis-developer/edit/master/docs/develop/node/node-crash-course/redisbloom/index-redisbloom.mdx\",version:\"current\",sidebar_label:\"RedisBloom\",sidebar:\"docs\",previous:{title:\"Advanced Streams: Parallel Processing Checkins with Consumer Groups\",permalink:\"/develop/node/nodecrashcourse/advancedstreams\"},next:{title:\"Course Wrap Up\",permalink:\"/develop/node/nodecrashcourse/coursewrapup\"}},l=[{value:\"Hands-on Exercise\",id:\"hands-on-exercise\",children:[]},{value:\"External Resources\",id:\"external-resources\",children:[]}],u={toc:l};function d(e){var t=e.components,s=Object(o.a)(e,a);return Object(i.b)(\"wrapper\",Object(n.a)({},u,s,{components:t,mdxType:\"MDXLayout\"}),Object(i.b)(\"div\",{class:\"text--center\"},Object(i.b)(\"iframe\",{width:\"560\",height:\"315\",src:\"https://www.youtube.com/embed/rzMugckhQss\",frameborder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowfullscreen:!0})),Object(i.b)(\"p\",null,\"As our application grows in popularity, we're getting more and more checkins from our expanding user base.  We've decided that we want to limit this a bit, and only allow each user to give each location a particular star rating once.  For example, if user 100 checks in at location 73 and rates it 3 stars, we want to reject any further 3 star checkins from them at that location.\"),Object(i.b)(\"p\",null,\"In order to do this, we need a way of remembering each checkin, and to quickly determine if we've seen it before.  We can't do this by querying the data in our checkins stream, as streams don't allow that sort of access and are periodically trimmed, removing older checkins that have been processed and are no longer needed.\"),Object(i.b)(\"p\",null,\"We can represent our checkins in the form \",Object(i.b)(\"inlineCode\",{parentName:\"p\"},\"<userId>:<locationId>:<rating>\"),\".  With this schema, the string 100733 would represent user 100's checkin at location 73 with a 3 star rating.\"),Object(i.b)(\"p\",null,\"We then need to remember each checkin, so that we can ensure it's a unique combination of user ID, location ID, and star rating.  We could use a Redis Set for this.  Sets are great whenever we want to maintain a collection of unique members, as they don't allow duplicates.  With a Redis Set, adding a new member and checking whether a member is in the Set are both O(1) operations, meaning their performance doesn't degrade as the Set grows.\"),Object(i.b)(\"p\",null,\"However, every new member of a Set that we add (in our case these are unique checkins) causes the Set to take up more memory on the Redis server. And this growth will become an issue as we continue to receive more and more checkins.\"),Object(i.b)(\"p\",null,\"But what if there was a way to check if a potential new member was already in a set that didn't have this memory consumption issue?  A Bloom Filter is a space-efficient probabilistic data structure that can help here.  Bloom Filters store hashed representations of the members of a Set rather than the actual member data itself. Unlike a Set, we can't get members back out of the Bloom Filter, but we can test if something is already in there or not... with some false positives due to hash collisions.  When asked if something is a member of a Set, the Bloom Filter can tell us \\\"no it isn't\\\", or \\\"it's likely that it is\\\".\"),Object(i.b)(\"p\",null,\"This hashing approach sacrifices the 100% accuracy we'd get with a Set to dramatically reduce the memory overhead.  Bloom Filters can be configured with a desired acceptable error rate, so for our application this seems like a good way to enforce our \\\"no duplicate checkins\\\" rule without having a runaway memory consumption problem.  Whenever the Bloom Filter tells us its maybe seen a checkin before it will mostly be correct, and we'll accept that sometimes we disallow a checkin that we actually haven't had before as a sensible tradeoff for keeping our memory usage under control.\"),Object(i.b)(\"p\",null,Object(i.b)(\"a\",{parentName:\"p\",href:\"https://redisbloom.io/\"},\"RedisBloom\"),\" is a module from Redis that provides a Bloom Filter implementation for Redis, along with other useful probabilistic data structures.  In the video, you'll see how easy this is to use in a Node.js application, with no math skills required!\"),Object(i.b)(\"h2\",{id:\"hands-on-exercise\"},\"Hands-on Exercise\"),Object(i.b)(\"p\",null,\"In this exercise, you'll see the Bloom filter in action by attempting to submit the same checkin to the system more than once.\"),Object(i.b)(\"p\",null,\"You'll need to be running the Checkin Receiver Service... stop it with Ctrl-C if it's still running from a previous exercise. Then, restart it using the following command. This command will disable the login requirement which we don't want  for this exercise:\"),Object(i.b)(\"pre\",null,Object(i.b)(\"code\",{parentName:\"pre\",className:\"language-bash\"},\"$ npm run checkinreceiver\\n\\n> js-crash-course@0.0.1 checkinreceiver \\n> node ./src/checkinreceiver.js\\n\\ninfo: Authentication disabled, checkins do not require a valid user session.\\ninfo: Checkin receiver listening on port 8082.\\n\")),Object(i.b)(\"p\",null,'Now, open Postman and create a new request, selecting \"POST\" as the HTTP verb.'),Object(i.b)(\"ul\",null,Object(i.b)(\"li\",{parentName:\"ul\"},\"Set the URL to \",Object(i.b)(\"inlineCode\",{parentName:\"li\"},\"localhost:8082/api/checkin\")),Object(i.b)(\"li\",{parentName:\"ul\"},'In the \"Body\" tab, set the type dropdowns to \"raw\" and \"JSON\"'),Object(i.b)(\"li\",{parentName:\"ul\"},\"In the body text area, enter the following JSON:\")),Object(i.b)(\"pre\",null,Object(i.b)(\"code\",{parentName:\"pre\",className:\"language-json\"},'{\"userId\": 100, \"locationId\": 73, \"starRating\": 3}\\n')),Object(i.b)(\"p\",null,\"Your request should look like this:\"),Object(i.b)(\"p\",null,Object(i.b)(\"img\",{alt:\"Checkin Request\",src:r(557).default})),Object(i.b)(\"p\",null,'Click \"Send\" to submit your checkin to the Checkin Receiver, which should respond with a 202 Accepted status and empty response body:'),Object(i.b)(\"p\",null,Object(i.b)(\"img\",{alt:\"202 Checkin Response\",src:r(558).default})),Object(i.b)(\"p\",null,'Click \"Send\" a second time and you should receive a 422 Unprocessable Entity response from the Checkin Receiver along with an error message:'),Object(i.b)(\"p\",null,Object(i.b)(\"img\",{alt:\"422 Checkin Response\",src:r(559).default})),Object(i.b)(\"p\",null,\"With the Checkin Receiver service still running, start the Checkin Generator utility that generates random checkins:\"),Object(i.b)(\"pre\",null,Object(i.b)(\"code\",{parentName:\"pre\",className:\"language-bash\"},\"node-js-crash-course $ npm run checkingenerator\\n\\n> js-crash-course@0.0.1 checkingenerator \\n> node ./src/checkingenerator.js\\n\\ninfo: Started checkin generator.\\n\")),Object(i.b)(\"p\",null,\"Leave the Checkin Generator running. It will generate a new random checkin every few seconds.  Let it run and generate a few hundred checkins.  While it's doing that, periodically monitor the memory usage required by the Bloom Filter using redis-cli or the CLI tab in RedisInsight:\"),Object(i.b)(\"pre\",null,Object(i.b)(\"code\",{parentName:\"pre\",className:\"language-bash\"},\"127.0.0.1:6379> bf.info ncc:checkinfilter\\n 1) Capacity\\n 2) (integer) 1000000\\n 3) Size\\n 4) (integer) 2576760\\n 5) Number of filters\\n 6) (integer) 1\\n 7) Number of items inserted\\n 8) (integer) 269\\n 9) Expansion rate\\n10) (integer) 2\\n\")),Object(i.b)(\"p\",null,\"Run this a few times as more checkins are generated, and note that the size required to store the Bloom Filter doesn't increase as the number of items inserted increases.  While sacrificing some accuracy, Bloom Filters are a storage efficient solution for this type of use case.\"),Object(i.b)(\"h2\",{id:\"external-resources\"},\"External Resources\"),Object(i.b)(\"ul\",null,Object(i.b)(\"li\",{parentName:\"ul\"},\"Find out more about RedisBloom at its \",Object(i.b)(\"a\",{parentName:\"li\",href:\"https://redisbloom.io/\"},\"official website\"),\".\"),Object(i.b)(\"li\",{parentName:\"ul\"},\"Wikipedia: \",Object(i.b)(\"a\",{parentName:\"li\",href:\"https://en.wikipedia.org/wiki/Bloom_filter\"},\"Bloom Filters\"),\".\")),Object(i.b)(\"p\",null,\"In this video, Guy Royse explains what Bloom Filters are and how to use them in Redis:\"),Object(i.b)(\"div\",{class:\"text--center\"},Object(i.b)(\"iframe\",{width:\"560\",height:\"315\",src:\"https://www.youtube.com/embed/Z9_wrhdbSC4\",frameborder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowfullscreen:!0})),Object(i.b)(\"p\",null,\"Redis Sets are a powerful data type to know about, learn more with Andrew's two videos on the Redis University YouTube channel.  First, Redis Sets Explained:\"),Object(i.b)(\"div\",{class:\"text--center\"},Object(i.b)(\"iframe\",{width:\"560\",height:\"315\",src:\"https://www.youtube.com/embed/6Pjz819sT7M\",frameborder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowfullscreen:!0})),Object(i.b)(\"p\",null,\"Followed by Redis Sets Elaborated:\"),Object(i.b)(\"div\",{class:\"text--center\"},Object(i.b)(\"iframe\",{width:\"560\",height:\"315\",src:\"https://www.youtube.com/embed/N5i5QiYdyZU\",frameborder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowfullscreen:!0})))}d.isMDXComponent=!0},237:function(e,t,r){\"use strict\";r.d(t,\"a\",(function(){return d})),r.d(t,\"b\",(function(){return m}));var n=r(0),o=r.n(n);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),r=t;return e&&(r=\"function\"==typeof e?e(t):s(s({},t),e)),r},d=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},h={inlineCode:\"code\",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,a=e.parentName,l=c(e,[\"components\",\"mdxType\",\"originalType\",\"parentName\"]),d=u(r),b=n,m=d[\"\".concat(a,\".\").concat(b)]||d[b]||h[b]||i;return r?o.a.createElement(m,s(s({ref:t},l),{},{components:r})):o.a.createElement(m,s({ref:t},l))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if(\"string\"==typeof e||n){var i=r.length,a=new Array(i);a[0]=b;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType=\"string\"==typeof e?e:n,a[1]=s;for(var l=2;l<i;l++)a[l]=r[l];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,r)}b.displayName=\"MDXCreateElement\"},238:function(e,t,r){\"use strict\";r.d(t,\"b\",(function(){return i})),r.d(t,\"a\",(function(){return a}));var n=r(20),o=r(246);function i(){var e=Object(n.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,r=void 0===t?\"/\":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,r,n){var i=void 0===n?{}:n,a=i.forcePrependBaseUrl,s=void 0!==a&&a,c=i.absolute,l=void 0!==c&&c;if(!r)return r;if(r.startsWith(\"#\"))return r;if(Object(o.b)(r))return r;if(s)return t+r;var u=r.startsWith(t)?r:t+r.replace(/^\\//,\"\");return l?e+u:u}(i,r,e,t)}}}function a(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},246:function(e,t,r){\"use strict\";function n(e){return!0===/^(\\w*:|\\/\\/)/.test(e)}function o(e){return void 0!==e&&!n(e)}r.d(t,\"b\",(function(){return n})),r.d(t,\"a\",(function(){return o}))},557:function(e,t,r){\"use strict\";r.r(t),t.default=r.p+\"assets/images/postman_bloom_checkin-2ef0be39a5183ca7d2fd6b484cd5cc9d.png\"},558:function(e,t,r){\"use strict\";r.r(t),t.default=r.p+\"assets/images/postman_bloom_202_response-2695c8e261c8f1b0ff3722e52b488659.png\"},559:function(e,t,r){\"use strict\";r.r(t),t.default=r.p+\"assets/images/postman_bloom_422_response-8356347eab305ea70f8a3ed095b8308e.png\"}}]);","name":"710646cd.6cd53aea.js","input":"(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[81],{\n\n/***/ 149:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"frontMatter\", function() { return frontMatter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"metadata\", function() { return metadata; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toc\", function() { return toc; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MDXContent; });\n/* harmony import */ var _Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(3);\n/* harmony import */ var _Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(7);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _mdx_js_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(237);\n/* harmony import */ var _docusaurus_useBaseUrl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(238);\nvar _excluded=[\"components\"];var frontMatter={id:'index-redisbloom',title:'Preventing Duplicate Checkins with RedisBloom',sidebar_label:'RedisBloom',slug:'/develop/node/nodecrashcourse/redisbloom'};var metadata={\"unversionedId\":\"develop/node/node-crash-course/redisbloom/index-redisbloom\",\"id\":\"develop/node/node-crash-course/redisbloom/index-redisbloom\",\"isDocsHomePage\":false,\"title\":\"Preventing Duplicate Checkins with RedisBloom\",\"description\":\"As our application grows in popularity, we're getting more and more checkins from our expanding user base.  We've decided that we want to limit this a bit, and only allow each user to give each location a particular star rating once.  For example, if user 100 checks in at location 73 and rates it 3 stars, we want to reject any further 3 star checkins from them at that location.\",\"source\":\"@site/docs/develop/node/node-crash-course/redisbloom/index-redisbloom.mdx\",\"slug\":\"/develop/node/nodecrashcourse/redisbloom\",\"permalink\":\"/develop/node/nodecrashcourse/redisbloom\",\"editUrl\":\"https://github.com/redis-developer/redis-developer/edit/master/docs/develop/node/node-crash-course/redisbloom/index-redisbloom.mdx\",\"version\":\"current\",\"sidebar_label\":\"RedisBloom\",\"sidebar\":\"docs\",\"previous\":{\"title\":\"Advanced Streams: Parallel Processing Checkins with Consumer Groups\",\"permalink\":\"/develop/node/nodecrashcourse/advancedstreams\"},\"next\":{\"title\":\"Course Wrap Up\",\"permalink\":\"/develop/node/nodecrashcourse/coursewrapup\"}};/* @jsxRuntime classic */ /* @jsx mdx */var toc=[{value:'Hands-on Exercise',id:'hands-on-exercise',children:[]},{value:'External Resources',id:'external-resources',children:[]}];var layoutProps={toc:toc};var MDXLayout=\"wrapper\";function MDXContent(_ref){var components=_ref.components,props=Object(_Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__[/* default */ \"a\"])(_ref,_excluded);return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(MDXLayout,Object(_Users_ajeetraina_staging_redis_developer_github_io_node_modules_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__[/* default */ \"a\"])({},layoutProps,props,{components:components,mdxType:\"MDXLayout\"}),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",{class:\"text--center\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"iframe\",{width:\"560\",height:\"315\",src:\"https://www.youtube.com/embed/rzMugckhQss\",frameborder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowfullscreen:true})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"As our application grows in popularity, we're getting more and more checkins from our expanding user base.  We've decided that we want to limit this a bit, and only allow each user to give each location a particular star rating once.  For example, if user 100 checks in at location 73 and rates it 3 stars, we want to reject any further 3 star checkins from them at that location.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"In order to do this, we need a way of remembering each checkin, and to quickly determine if we've seen it before.  We can't do this by querying the data in our checkins stream, as streams don't allow that sort of access and are periodically trimmed, removing older checkins that have been processed and are no longer needed.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"We can represent our checkins in the form \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"p\"},\"<userId>:<locationId>:<rating>\"),\".  With this schema, the string 100733 would represent user 100's checkin at location 73 with a 3 star rating.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"We then need to remember each checkin, so that we can ensure it's a unique combination of user ID, location ID, and star rating.  We could use a Redis Set for this.  Sets are great whenever we want to maintain a collection of unique members, as they don't allow duplicates.  With a Redis Set, adding a new member and checking whether a member is in the Set are both O(1) operations, meaning their performance doesn't degrade as the Set grows.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"However, every new member of a Set that we add (in our case these are unique checkins) causes the Set to take up more memory on the Redis server. And this growth will become an issue as we continue to receive more and more checkins.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"But what if there was a way to check if a potential new member was already in a set that didn't have this memory consumption issue?  A Bloom Filter is a space-efficient probabilistic data structure that can help here.  Bloom Filters store hashed representations of the members of a Set rather than the actual member data itself. Unlike a Set, we can't get members back out of the Bloom Filter, but we can test if something is already in there or not... with some false positives due to hash collisions.  When asked if something is a member of a Set, the Bloom Filter can tell us \\\"no it isn't\\\", or \\\"it's likely that it is\\\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"This hashing approach sacrifices the 100% accuracy we'd get with a Set to dramatically reduce the memory overhead.  Bloom Filters can be configured with a desired acceptable error rate, so for our application this seems like a good way to enforce our \\\"no duplicate checkins\\\" rule without having a runaway memory consumption problem.  Whenever the Bloom Filter tells us its maybe seen a checkin before it will mostly be correct, and we'll accept that sometimes we disallow a checkin that we actually haven't had before as a sensible tradeoff for keeping our memory usage under control.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"p\",\"href\":\"https://redisbloom.io/\"},\"RedisBloom\"),\" is a module from Redis that provides a Bloom Filter implementation for Redis, along with other useful probabilistic data structures.  In the video, you'll see how easy this is to use in a Node.js application, with no math skills required!\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"hands-on-exercise\"},\"Hands-on Exercise\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"In this exercise, you'll see the Bloom filter in action by attempting to submit the same checkin to the system more than once.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"You'll need to be running the Checkin Receiver Service... stop it with Ctrl-C if it's still running from a previous exercise. Then, restart it using the following command. This command will disable the login requirement which we don't want  for this exercise:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},\"$ npm run checkinreceiver\\n\\n> js-crash-course@0.0.1 checkinreceiver \\n> node ./src/checkinreceiver.js\\n\\ninfo: Authentication disabled, checkins do not require a valid user session.\\ninfo: Checkin receiver listening on port 8082.\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Now, open Postman and create a new request, selecting \\\"POST\\\" as the HTTP verb.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"Set the URL to \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"inlineCode\",{parentName:\"li\"},\"localhost:8082/api/checkin\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"In the \\\"Body\\\" tab, set the type dropdowns to \\\"raw\\\" and \\\"JSON\\\"\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"In the body text area, enter the following JSON:\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-json\"},\"{\\\"userId\\\": 100, \\\"locationId\\\": 73, \\\"starRating\\\": 3}\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Your request should look like this:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"img\",{alt:\"Checkin Request\",src:__webpack_require__(557).default})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Click \\\"Send\\\" to submit your checkin to the Checkin Receiver, which should respond with a 202 Accepted status and empty response body:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"img\",{alt:\"202 Checkin Response\",src:__webpack_require__(558).default})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Click \\\"Send\\\" a second time and you should receive a 422 Unprocessable Entity response from the Checkin Receiver along with an error message:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"img\",{alt:\"422 Checkin Response\",src:__webpack_require__(559).default})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"With the Checkin Receiver service still running, start the Checkin Generator utility that generates random checkins:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},\"node-js-crash-course $ npm run checkingenerator\\n\\n> js-crash-course@0.0.1 checkingenerator \\n> node ./src/checkingenerator.js\\n\\ninfo: Started checkin generator.\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Leave the Checkin Generator running. It will generate a new random checkin every few seconds.  Let it run and generate a few hundred checkins.  While it's doing that, periodically monitor the memory usage required by the Bloom Filter using redis-cli or the CLI tab in RedisInsight:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"pre\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"code\",{parentName:\"pre\",\"className\":\"language-bash\"},\"127.0.0.1:6379> bf.info ncc:checkinfilter\\n 1) Capacity\\n 2) (integer) 1000000\\n 3) Size\\n 4) (integer) 2576760\\n 5) Number of filters\\n 6) (integer) 1\\n 7) Number of items inserted\\n 8) (integer) 269\\n 9) Expansion rate\\n10) (integer) 2\\n\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Run this a few times as more checkins are generated, and note that the size required to store the Bloom Filter doesn't increase as the number of items inserted increases.  While sacrificing some accuracy, Bloom Filters are a storage efficient solution for this type of use case.\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"h2\",{\"id\":\"external-resources\"},\"External Resources\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"ul\",null,Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"Find out more about RedisBloom at its \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"li\",\"href\":\"https://redisbloom.io/\"},\"official website\"),\".\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"li\",{parentName:\"ul\"},\"Wikipedia: \",Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"a\",{parentName:\"li\",\"href\":\"https://en.wikipedia.org/wiki/Bloom_filter\"},\"Bloom Filters\"),\".\")),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"In this video, Guy Royse explains what Bloom Filters are and how to use them in Redis:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",{class:\"text--center\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"iframe\",{width:\"560\",height:\"315\",src:\"https://www.youtube.com/embed/Z9_wrhdbSC4\",frameborder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowfullscreen:true})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Redis Sets are a powerful data type to know about, learn more with Andrew's two videos on the Redis University YouTube channel.  First, Redis Sets Explained:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",{class:\"text--center\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"iframe\",{width:\"560\",height:\"315\",src:\"https://www.youtube.com/embed/6Pjz819sT7M\",frameborder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowfullscreen:true})),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"p\",null,\"Followed by Redis Sets Elaborated:\"),Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"div\",{class:\"text--center\"},Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_3__[/* mdx */ \"b\"])(\"iframe\",{width:\"560\",height:\"315\",src:\"https://www.youtube.com/embed/N5i5QiYdyZU\",frameborder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowfullscreen:true})));};MDXContent.isMDXComponent=true;\n\n/***/ }),\n\n/***/ 237:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export MDXContext */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MDXProvider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return createElement; });\n/* unused harmony export useMDXComponents */\n/* unused harmony export withMDXComponents */\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nvar isFunction = function isFunction(obj) {\n  return typeof obj === 'function';\n};\n\nvar MDXContext = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createContext({});\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (props) {\n    var allComponents = useMDXComponents(props.components);\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _extends({}, props, {\n      components: allComponents\n    }));\n  };\n};\nvar useMDXComponents = function useMDXComponents(components) {\n  var contextComponents = react__WEBPACK_IMPORTED_MODULE_0___default.a.useContext(MDXContext);\n  var allComponents = contextComponents;\n\n  if (components) {\n    allComponents = isFunction(components) ? components(contextComponents) : _objectSpread2(_objectSpread2({}, contextComponents), components);\n  }\n\n  return allComponents;\n};\nvar MDXProvider = function MDXProvider(props) {\n  var allComponents = useMDXComponents(props.components);\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, props.children);\n};\n\nvar TYPE_PROP_NAME = 'mdxType';\nvar DEFAULTS = {\n  inlineCode: 'code',\n  wrapper: function wrapper(_ref) {\n    var children = _ref.children;\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment, {}, children);\n  }\n};\nvar MDXCreateElement = /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.forwardRef(function (props, ref) {\n  var propComponents = props.components,\n      mdxType = props.mdxType,\n      originalType = props.originalType,\n      parentName = props.parentName,\n      etc = _objectWithoutProperties(props, [\"components\", \"mdxType\", \"originalType\", \"parentName\"]);\n\n  var components = useMDXComponents(propComponents);\n  var type = mdxType;\n  var Component = components[\"\".concat(parentName, \".\").concat(type)] || components[type] || DEFAULTS[type] || originalType;\n\n  if (propComponents) {\n    return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2(_objectSpread2({\n      ref: ref\n    }, etc), {}, {\n      components: propComponents\n    }));\n  }\n\n  return /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(Component, _objectSpread2({\n    ref: ref\n  }, etc));\n});\nMDXCreateElement.displayName = 'MDXCreateElement';\nfunction createElement (type, props) {\n  var args = arguments;\n  var mdxType = props && props.mdxType;\n\n  if (typeof type === 'string' || mdxType) {\n    var argsLength = args.length;\n    var createElementArgArray = new Array(argsLength);\n    createElementArgArray[0] = MDXCreateElement;\n    var newProps = {};\n\n    for (var key in props) {\n      if (hasOwnProperty.call(props, key)) {\n        newProps[key] = props[key];\n      }\n    }\n\n    newProps.originalType = type;\n    newProps[TYPE_PROP_NAME] = typeof type === 'string' ? type : mdxType;\n    createElementArgArray[1] = newProps;\n\n    for (var i = 2; i < argsLength; i++) {\n      createElementArgArray[i] = args[i];\n    }\n\n    return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, createElementArgArray);\n  }\n\n  return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement.apply(null, args);\n}\n\n\n\n\n/***/ }),\n\n/***/ 238:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return useBaseUrlUtils; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return useBaseUrl; });\n/* harmony import */ var _useDocusaurusContext__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(20);\n/* harmony import */ var _isInternalUrl__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(246);\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */function addBaseUrl(siteUrl,baseUrl,url,_temp){var _ref=_temp===void 0?{}:_temp,_ref$forcePrependBase=_ref.forcePrependBaseUrl,forcePrependBaseUrl=_ref$forcePrependBase===void 0?false:_ref$forcePrependBase,_ref$absolute=_ref.absolute,absolute=_ref$absolute===void 0?false:_ref$absolute;if(!url){return url;}// it never makes sense to add a base url to a local anchor url\nif(url.startsWith('#')){return url;}// it never makes sense to add a base url to an url with a protocol\nif(Object(_isInternalUrl__WEBPACK_IMPORTED_MODULE_1__[/* hasProtocol */ \"b\"])(url)){return url;}if(forcePrependBaseUrl){return baseUrl+url;}// We should avoid adding the baseurl twice if it's already there\nvar shouldAddBaseUrl=!url.startsWith(baseUrl);var basePath=shouldAddBaseUrl?baseUrl+url.replace(/^\\//,''):url;return absolute?siteUrl+basePath:basePath;}function useBaseUrlUtils(){var _useDocusaurusContext=Object(_useDocusaurusContext__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(),_useDocusaurusContext2=_useDocusaurusContext.siteConfig;_useDocusaurusContext2=_useDocusaurusContext2===void 0?{}:_useDocusaurusContext2;var _useDocusaurusContext3=_useDocusaurusContext2.baseUrl,baseUrl=_useDocusaurusContext3===void 0?'/':_useDocusaurusContext3,siteUrl=_useDocusaurusContext2.url;return{withBaseUrl:function withBaseUrl(url,options){return addBaseUrl(siteUrl,baseUrl,url,options);}};}function useBaseUrl(url,options){if(options===void 0){options={};}var _useBaseUrlUtils=useBaseUrlUtils(),withBaseUrl=_useBaseUrlUtils.withBaseUrl;return withBaseUrl(url,options);}\n\n/***/ }),\n\n/***/ 246:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return hasProtocol; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return isInternalUrl; });\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */function hasProtocol(url){return /^(\\w*:|\\/\\/)/.test(url)===true;}function isInternalUrl(url){return typeof url!=='undefined'&&!hasProtocol(url);}\n\n/***/ }),\n\n/***/ 557:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (__webpack_require__.p + \"assets/images/postman_bloom_checkin-2ef0be39a5183ca7d2fd6b484cd5cc9d.png\");\n\n/***/ }),\n\n/***/ 558:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (__webpack_require__.p + \"assets/images/postman_bloom_202_response-2695c8e261c8f1b0ff3722e52b488659.png\");\n\n/***/ }),\n\n/***/ 559:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (__webpack_require__.p + \"assets/images/postman_bloom_422_response-8356347eab305ea70f8a3ed095b8308e.png\");\n\n/***/ })\n\n}]);","inputSourceMap":null}